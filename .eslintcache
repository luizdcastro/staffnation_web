[{"/home/luiz/Repositories/staffnation_web/src/index.js":"1","/home/luiz/Repositories/staffnation_web/src/containers/App.js":"2","/home/luiz/Repositories/staffnation_web/src/redux/store.js":"3","/home/luiz/Repositories/staffnation_web/src/services/api-middleware.js":"4","/home/luiz/Repositories/staffnation_web/src/redux/constants.js":"5","/home/luiz/Repositories/staffnation_web/src/pages/HomePage/index.js":"6","/home/luiz/Repositories/staffnation_web/src/redux/actions/AuthActions.js":"7","/home/luiz/Repositories/staffnation_web/src/redux/reducers/index.js":"8","/home/luiz/Repositories/staffnation_web/src/redux/reducers/user/UserReducer.js":"9","/home/luiz/Repositories/staffnation_web/src/pages/LoginPage/index.js":"10","/home/luiz/Repositories/staffnation_web/src/components/FormInput/index.js":"11","/home/luiz/Repositories/staffnation_web/src/components/CustomButton/index.js":"12","/home/luiz/Repositories/staffnation_web/src/components/Header/index.js":"13","/home/luiz/Repositories/staffnation_web/src/components/VerticalHeader/index.js":"14","/home/luiz/Repositories/staffnation_web/src/pages/JobsPage/index.js":"15","/home/luiz/Repositories/staffnation_web/src/pages/BusinessPage/index.js":"16","/home/luiz/Repositories/staffnation_web/src/components/FormBusiness/index.js":"17","/home/luiz/Repositories/staffnation_web/src/components/UploadImage/index.js":"18","/home/luiz/Repositories/staffnation_web/src/redux/actions/ImageActions.js":"19","/home/luiz/Repositories/staffnation_web/src/redux/reducers/image/ImageReducer.js":"20","/home/luiz/Repositories/staffnation_web/src/components/InactiveButton/index.js":"21","/home/luiz/Repositories/staffnation_web/src/redux/reducers/store/StoreReducer.js":"22","/home/luiz/Repositories/staffnation_web/src/redux/actions/StoreActions.js":"23"},{"size":556,"mtime":1607527614148,"results":"24","hashOfConfig":"25"},{"size":1372,"mtime":1607655166829,"results":"26","hashOfConfig":"25"},{"size":619,"mtime":1607527892075,"results":"27","hashOfConfig":"25"},{"size":1309,"mtime":1607539560090,"results":"28","hashOfConfig":"25"},{"size":468,"mtime":1607652571331,"results":"29","hashOfConfig":"25"},{"size":259,"mtime":1607654864086,"results":"30","hashOfConfig":"25"},{"size":1148,"mtime":1607540144569,"results":"31","hashOfConfig":"25"},{"size":265,"mtime":1607647634242,"results":"32","hashOfConfig":"25"},{"size":519,"mtime":1607540142918,"results":"33","hashOfConfig":"25"},{"size":2366,"mtime":1607654822559,"results":"34","hashOfConfig":"25"},{"size":237,"mtime":1607538476997,"results":"35","hashOfConfig":"25"},{"size":1077,"mtime":1607649640567,"results":"36","hashOfConfig":"25"},{"size":7606,"mtime":1607541886079,"results":"37","hashOfConfig":"25"},{"size":2129,"mtime":1607655148451,"results":"38","hashOfConfig":"25"},{"size":199,"mtime":1607654854742,"results":"39","hashOfConfig":"25"},{"size":8556,"mtime":1607657234669,"results":"40","hashOfConfig":"25"},{"size":281,"mtime":1607626831717,"results":"41","hashOfConfig":"25"},{"size":6968,"mtime":1607656319815,"results":"42","hashOfConfig":"25"},{"size":886,"mtime":1607653212122,"results":"43","hashOfConfig":"25"},{"size":408,"mtime":1607652896540,"results":"44","hashOfConfig":"25"},{"size":367,"mtime":1607655133788,"results":"45","hashOfConfig":"25"},{"size":577,"mtime":1607647598873,"results":"46","hashOfConfig":"25"},{"size":1642,"mtime":1607653184257,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1y61xi5",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"/home/luiz/Repositories/staffnation_web/src/index.js",[],["98","99"],"/home/luiz/Repositories/staffnation_web/src/containers/App.js",[],"/home/luiz/Repositories/staffnation_web/src/redux/store.js",[],"/home/luiz/Repositories/staffnation_web/src/services/api-middleware.js",[],"/home/luiz/Repositories/staffnation_web/src/redux/constants.js",[],"/home/luiz/Repositories/staffnation_web/src/pages/HomePage/index.js",[],"/home/luiz/Repositories/staffnation_web/src/redux/actions/AuthActions.js",[],"/home/luiz/Repositories/staffnation_web/src/redux/reducers/index.js",[],"/home/luiz/Repositories/staffnation_web/src/redux/reducers/user/UserReducer.js",[],"/home/luiz/Repositories/staffnation_web/src/pages/LoginPage/index.js",[],"/home/luiz/Repositories/staffnation_web/src/components/FormInput/index.js",[],"/home/luiz/Repositories/staffnation_web/src/components/CustomButton/index.js",[],"/home/luiz/Repositories/staffnation_web/src/components/Header/index.js",[],["100","101"],"/home/luiz/Repositories/staffnation_web/src/components/VerticalHeader/index.js",[],"/home/luiz/Repositories/staffnation_web/src/pages/JobsPage/index.js",[],"/home/luiz/Repositories/staffnation_web/src/pages/BusinessPage/index.js",["102"],"import React, { useState, useEffect } from 'react';\nimport { connect } from \"react-redux\";\nimport MaskedInput from 'react-text-mask'\n\nimport FormBusiness from '../../components/FormBusiness'\nimport CustomButton from '../../components/CustomButton'\nimport InactiveButton from '../../components/InactiveButton'\nimport UploadImage from '../../components/UploadImage'\n\nimport { createStore } from '../../redux/actions/StoreActions'\nimport { resetImage } from '../../redux/actions/ImageActions'\n\nimport './styles.css'\n\nconst BusinessPage = ({ image, user, dispatchCreateStore, dispatchResetImage }) => {\n    const [name, setName] = useState('')\n    const [category, setCategory] = useState('');\n    const [phone, setPhone] = useState('')\n    const [cep, setCep] = useState('')\n    const [number, setNumber] = useState('')\n    const [street, setStreet] = useState('')\n    const [city, setCity] = useState('')\n    const [bairro, setBairro] = useState('')\n    const [state, setState] = useState('')\n    const [address, setAddress] = useState({})\n    const [cepError, setCepError] = useState('')\n    const [createError, setCreateError] = useState('')\n    const [uploadedFiles, setUploadedFiles] = useState([]);\n    const uploadedImage = image.url\n\n    const getUserAddress = () => {\n        fetch(`https://viacep.com.br/ws/${cep}/json/`)\n            .then((res) => res.json())\n            .then((data) => {\n                if (data.erro) {\n                    setCepError(true);\n                    console.log(cepError)\n                    setAddress({});\n                } else {\n                    setCepError(false);\n                    setStreet(data.logradouro);\n                    setCity(data.localidade);\n                    setBairro(data.bairro);\n                    setState(data.uf);\n                    setAddress({\n                        cep: data.cep,\n                        street: data.logradouro,\n                        neighborhood: data.bairro,\n                        city: data.localidade,\n                        state: data.uf,\n                        number: \"\",\n                    });\n                }\n            });\n    };\n\n    useEffect(() => {\n        if (cep.length >= 8) {\n            getUserAddress();\n        }\n    }, [cep]);\n\n    useEffect(() => {\n        if (number.length) {\n            setAddress({ ...address, number: number });\n        }\n    }, [number, address]);\n\n    const handleCreateStore = (event) => {\n        event.preventDefault();\n        dispatchCreateStore(\n            user.businessId,\n            name,\n            phone,\n            category,\n            address,\n            uploadedImage,\n            () => {\n                setName('');\n                setCategory('');\n                setCep('');\n                setStreet('');\n                setNumber('');\n                setBairro('');\n                setPhone('');\n                setCity('');\n                setState('');\n                setUploadedFiles([])\n                dispatchResetImage()\n            },\n            (response) => { setCreateError(response.error); console.log(createError) }\n        );\n    };\n\n    return (\n        <div className=\"business\">\n            <div className=\"business-list\">\n                <h2>Meus estabelecimentos</h2>\n            </div>\n            <div className=\"business-create\">\n                <form className=\"busines-create-form\" onSubmit={handleCreateStore}>\n                    <div className=\"busines-create-form__container\">\n                        <h2 className=\"business-create-title\">Cadastrar novo estabelecimento</h2>\n                        <p className=\"business-create-label\">Nome do negócio</p>\n                        <FormBusiness\n                            value={name}\n                            onChange={(e) => setName(e.target.value)}\n                        />\n                        <p className=\"business-create-label\">Categoria</p>\n                        <select\n                            onChange={(e) => setCategory(e.target.value)}\n                            className=\"business-create-selector\">\n                            <option value=\"\" defaultValue hidden> Selecionar</option>\n                            <option value=\"Bar\">Bar</option>\n                            <option value=\"Café\">Café</option>\n                            <option value=\"Restaurante\">Resturante</option>\n                            <option value=\"Casa Noturna\">Casa Noturna</option>\n                        </select>\n                        <p className=\"business-create-label\">Telefone</p>\n                        <MaskedInput\n                            className=\"form-business-input\"\n                            mask={[\"(\", /[1-9]/, /\\d/, \")\", \" \", /\\d/, /\\d/, /\\d/, /\\d/, \"-\", /\\d/, /\\d/, /\\d/, /\\d/, /\\d/]}\n                            placeholderChar={\"\\u2000\"}\n                            value={phone}\n                            onChange={(e) => setPhone(e.target.value)}\n                        />\n                        <p className=\"business-create-label\">CEP</p>\n                        <FormBusiness\n                            maxLength={8}\n                            value={cep}\n                            onChange={(e) => setCep(e.target.value)} />\n                        <div className=\"form-bussiness-adress\">\n                            <div>\n                                <p className=\"business-create-label\">Rua</p>\n                                <FormBusiness\n                                    id=\"business-addess-street\"\n                                    value={street}\n                                    onChange={(e) => setStreet(e.target.value)}\n                                />\n                            </div>\n                            <div>\n                                <p className=\"business-create-label\"> Número</p>\n                                <FormBusiness id=\"business-address-number\"\n                                    value={number}\n                                    onChange={(e) => setNumber(e.target.value)}\n                                />\n                            </div>\n                        </div>\n                        <div className=\"form-bussiness-adress\">\n                            <div>\n                                <p className=\"business-create-label\">Bairro</p>\n                                <FormBusiness id=\"business-address-bairro\"\n                                    value={bairro}\n                                    onChange={(e) => setBairro(e.target.value)}\n                                />\n                            </div>\n                            <div>\n                                <p className=\"business-create-label\">Cidade</p>\n                                <FormBusiness\n                                    id=\"business-address-city\"\n                                    value={city}\n                                    onChange={(e) => setCity(e.target.value)}\n                                />\n                            </div>\n                            <div>\n                                <p className=\"business-create-label\">Estado</p>\n                                <FormBusiness\n                                    id=\"business-address-state\"\n                                    value={state}\n                                    onChange={(e) => setState(e.target.value)}\n                                />\n                            </div>\n                        </div>\n                        <p className=\"business-create-label\">Imagem</p>\n                        <UploadImage imageUrl uploadedFiles={uploadedFiles} setUploadedFiles={setUploadedFiles} />\n                        {name?.length > 2 ?\n                            <CustomButton name=\"Cadastrar\" id=\"business-create-button\" onClick={handleCreateStore} />\n                            :\n                            <InactiveButton name=\"Cadastrar\" id=\"business-create-button\" />\n                        }\n                    </div>\n                </form>\n            </div>\n        </div>\n    )\n}\n\n\nconst mapDispatchToProps = (dispatch) => ({\n    dispatchCreateStore: (businessAccount, name, phone, category, address, image, onSuccess, onError) =>\n        dispatch(createStore({ businessAccount, name, phone, category, address, image }, onSuccess, onError)),\n    dispatchResetImage: () => dispatch(resetImage()),\n});\n\nconst mapStateToProps = (state) => ({\n    user: state.user,\n    image: state.image,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BusinessPage);","/home/luiz/Repositories/staffnation_web/src/components/FormBusiness/index.js",[],"/home/luiz/Repositories/staffnation_web/src/components/UploadImage/index.js",["103"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { uniqueId } from 'loadsh';\nimport filesize from 'filesize';\nimport Dropzone from 'react-dropzone';\nimport { CircularProgressbar } from 'react-circular-progressbar';\nimport { MdCheckCircle, MdError, MdLink } from 'react-icons/md';\n\nimport {\n    uploadImage,\n    deleteImage,\n} from '../../redux/actions/ImageActions';\nimport './styles.css';\nimport 'react-circular-progressbar/dist/styles.css';\n\nconst UploadImage = ({ dispatchUploadImage, dispatchDeleteImage, uploadedFiles, setUploadedFiles }) => {\n    const [droppedFile, setDroppedFile] = useState(false);\n\n    const handleUpload = (files) => {\n        setUploadedFiles(\n            files.map((file) => ({\n                file,\n                id: uniqueId(),\n                name: file.name,\n                readableSize: filesize(file.size),\n                preview: URL.createObjectURL(file),\n                progress: file.progress,\n                uploaded: false,\n                error: false,\n                url: null,\n            }))\n        );\n        setDroppedFile(!droppedFile);\n    };\n\n    const updateFile = (id, data) => {\n        setUploadedFiles(\n            uploadedFiles.map((uploadedFiles) => {\n                return id === uploadedFiles.id\n                    ? { ...uploadedFiles, ...data }\n                    : uploadedFiles;\n            })\n        );\n    };\n\n    const handleRequest = () => {\n        const data = new FormData();\n        data.append('file', uploadedFiles[0].file);\n        dispatchUploadImage(\n            data,\n            (e) => {\n                const progress = parseInt(Math.round((e.loaded * 100) / e.total));\n                updateFile(uploadedFiles[0].id, {\n                    progress: progress,\n                });\n            },\n            (response) => {\n                updateFile(uploadedFiles[0].id, {\n                    uploaded: true,\n                    id: response._id,\n                    url: response.url,\n                });\n            },\n            () => {\n                updateFile(uploadedFiles[0].id, {\n                    error: true,\n                });\n            }\n        );\n    };\n\n    const handleDelete = async (imageKey) => {\n        dispatchDeleteImage(imageKey);\n        setUploadedFiles([]);\n    };\n\n    useEffect(() => {\n        if (uploadedFiles.length) {\n            handleRequest();\n        }\n    }, [droppedFile]);\n\n    const UploadMessage = ({ message }) => {\n        return (\n            <div className=\"image-upload__message\">\n                <p>{message}</p>\n            </div>\n        );\n    };\n\n    const Preview = () => {\n        return (\n            <img\n                src={uploadedFiles[0].preview}\n                style={{\n                    width: 36,\n                    height: 36,\n                    borderRadius: 5,\n                    backgroundImage: `url(${uploadedFiles[0].preview})`,\n                    backgroundRepeat: 'no-repeat',\n                    backgroundSize: 'cover',\n                    backgroundPosition: '50% 50%',\n                    marginRight: 10,\n                }}\n                alt=\"\"\n            />\n        );\n    };\n\n    const FileInfo = () => {\n        return (\n            <div className=\"file-info\">\n                <Preview />\n                <div className=\"file-info__data\">\n                    <strong className=\"file-info__name\">\n                        {uploadedFiles[0].name.substr(0, 20)}\n                    </strong>\n                    <span className=\"file-info__span\">\n                        {uploadedFiles[0].readableSize}\n                        {uploadedFiles[0].uploaded && (\n                            <button\n                                className=\"file-info__button\"\n                                onClick={() => {\n                                    handleDelete(uploadedFiles[0].id);\n                                }}\n                            >\n                                Excluir\n                            </button>\n                        )}\n                    </span>\n                </div>\n            </div>\n        );\n    };\n\n    const FileList = () => {\n        return (\n            <div className=\"file-list\">\n                <li className=\"file-list__li\">\n                    <FileInfo />\n                    <div>\n                        {!uploadedFiles[0].uploaded && !uploadedFiles[0].error && (\n                            <CircularProgressbar\n                                strokeWidth={10}\n                                value={uploadedFiles[0].progress}\n                                styles={{\n                                    root: { width: 24 },\n                                    path: { stroke: '#7159c1' },\n                                }}\n                            />\n                        )}\n                        {uploadedFiles[0].url && (\n                            <a\n                                href={uploadedFiles[0].url}\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                            >\n                                <MdLink style={{ marginRight: 8 }} size={24} color=\"#222\" />\n                            </a>\n                        )}\n                        {uploadedFiles[0].uploaded && (\n                            <MdCheckCircle size={24} color=\"#78e5d5\" />\n                        )}\n                        {uploadedFiles[0].error && <MdError size={24} color=\"#e57878\" />}\n                    </div>\n                </li>\n            </div>\n        );\n    };\n\n    const renderDragMessage = (isDragActive, isDragReject) => {\n        if (!isDragActive) {\n            return <UploadMessage message=\"Arraste e solte sua imagem\" />;\n        }\n        if (isDragReject) {\n            return <UploadMessage message=\"Arquivo não suportado\" />;\n        }\n        return <UploadMessage message=\"Solte a imagem aqui\" />;\n    };\n\n    return (\n        <div className=\"upload-image__container\">\n            <Dropzone accept=\"image/*\" onDropAccepted={handleUpload}>\n                {({ getRootProps, getInputProps, isDragActive, isDragReject }) => (\n                    <div\n                        className=\"image-dropzone\"\n                        {...getRootProps()}\n                    >\n                        <input {...getInputProps()} />\n                        {renderDragMessage(isDragActive, isDragReject)}\n                    </div>\n                )}\n            </Dropzone>\n            <div>{!!uploadedFiles.length && <FileList />}</div>\n        </div>\n    );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n    dispatchUploadImage: (file, onUploadProgress, onSuccess, onError) =>\n        dispatch(uploadImage(file, onUploadProgress, onSuccess, onError)),\n    dispatchDeleteImage: (imageKey) => dispatch(deleteImage(imageKey)),\n});\n\nexport default connect(null, mapDispatchToProps)(UploadImage);","/home/luiz/Repositories/staffnation_web/src/redux/actions/ImageActions.js",[],"/home/luiz/Repositories/staffnation_web/src/redux/reducers/image/ImageReducer.js",[],"/home/luiz/Repositories/staffnation_web/src/components/InactiveButton/index.js",[],"/home/luiz/Repositories/staffnation_web/src/redux/reducers/store/StoreReducer.js",[],"/home/luiz/Repositories/staffnation_web/src/redux/actions/StoreActions.js",[],{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"104","replacedBy":"108"},{"ruleId":"106","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":61,"column":8,"nodeType":"112","endLine":61,"endColumn":13,"suggestions":"113"},{"ruleId":"110","severity":1,"message":"114","line":81,"column":8,"nodeType":"112","endLine":81,"endColumn":21,"suggestions":"115"},"no-native-reassign",["116"],"no-negated-in-lhs",["117"],["116"],["117"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getUserAddress'. Either include it or remove the dependency array.","ArrayExpression",["118"],"React Hook useEffect has missing dependencies: 'handleRequest' and 'uploadedFiles.length'. Either include them or remove the dependency array.",["119"],"no-global-assign","no-unsafe-negation",{"desc":"120","fix":"121"},{"desc":"122","fix":"123"},"Update the dependencies array to be: [cep, getUserAddress]",{"range":"124","text":"125"},"Update the dependencies array to be: [droppedFile, handleRequest, uploadedFiles.length]",{"range":"126","text":"127"},[2251,2256],"[cep, getUserAddress]",[2446,2459],"[droppedFile, handleRequest, uploadedFiles.length]"]