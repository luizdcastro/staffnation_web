[{"C:\\Users\\Luiz\\Desktop\\staff_web\\src\\index.js":"1","C:\\Users\\Luiz\\Desktop\\staff_web\\src\\containers\\App.js":"2","C:\\Users\\Luiz\\Desktop\\staff_web\\src\\redux\\store.js":"3","C:\\Users\\Luiz\\Desktop\\staff_web\\src\\services\\api-middleware.js":"4","C:\\Users\\Luiz\\Desktop\\staff_web\\src\\redux\\reducers\\index.js":"5","C:\\Users\\Luiz\\Desktop\\staff_web\\src\\pages\\LandingPage\\index.js":"6","C:\\Users\\Luiz\\Desktop\\staff_web\\src\\pages\\HomePage\\index.js":"7","C:\\Users\\Luiz\\Desktop\\staff_web\\src\\pages\\CreateJobPage\\index.js":"8","C:\\Users\\Luiz\\Desktop\\staff_web\\src\\pages\\LoginPage\\index.js":"9","C:\\Users\\Luiz\\Desktop\\staff_web\\src\\pages\\ListJobsPage\\index.js":"10","C:\\Users\\Luiz\\Desktop\\staff_web\\src\\pages\\EditStorePage\\index.js":"11","C:\\Users\\Luiz\\Desktop\\staff_web\\src\\pages\\EditJobPage\\index.js":"12","C:\\Users\\Luiz\\Desktop\\staff_web\\src\\pages\\JobDetailsPage\\index.js":"13","C:\\Users\\Luiz\\Desktop\\staff_web\\src\\pages\\RegisterPage\\index.js":"14","C:\\Users\\Luiz\\Desktop\\staff_web\\src\\pages\\SeachStaffPage\\index.js":"15","C:\\Users\\Luiz\\Desktop\\staff_web\\src\\pages\\SettingsPage\\index.js":"16","C:\\Users\\Luiz\\Desktop\\staff_web\\src\\pages\\FinancePage\\index.js":"17","C:\\Users\\Luiz\\Desktop\\staff_web\\src\\pages\\FavoritePage\\index.js":"18","C:\\Users\\Luiz\\Desktop\\staff_web\\src\\pages\\StaffDetailsPage\\index.js":"19","C:\\Users\\Luiz\\Desktop\\staff_web\\src\\pages\\BusinessPage\\index.js":"20","C:\\Users\\Luiz\\Desktop\\staff_web\\src\\components\\VerticalDrawer\\index.js":"21","C:\\Users\\Luiz\\Desktop\\staff_web\\src\\redux\\constants.js":"22","C:\\Users\\Luiz\\Desktop\\staff_web\\src\\redux\\actions\\AuthActions.js":"23","C:\\Users\\Luiz\\Desktop\\staff_web\\src\\redux\\actions\\StoreActions.js":"24","C:\\Users\\Luiz\\Desktop\\staff_web\\src\\redux\\actions\\JobActions.js":"25","C:\\Users\\Luiz\\Desktop\\staff_web\\src\\redux\\reducers\\image\\ImageReducer.js":"26","C:\\Users\\Luiz\\Desktop\\staff_web\\src\\redux\\reducers\\store\\StoreReducer.js":"27","C:\\Users\\Luiz\\Desktop\\staff_web\\src\\redux\\reducers\\user\\UserReducer.js":"28","C:\\Users\\Luiz\\Desktop\\staff_web\\src\\redux\\reducers\\job\\JobReducer.js":"29","C:\\Users\\Luiz\\Desktop\\staff_web\\src\\redux\\reducers\\staff\\StaffReducer.js":"30","C:\\Users\\Luiz\\Desktop\\staff_web\\src\\redux\\reducers\\business\\BusinessReducer.js":"31","C:\\Users\\Luiz\\Desktop\\staff_web\\src\\redux\\actions\\ImageActions.js":"32","C:\\Users\\Luiz\\Desktop\\staff_web\\src\\redux\\actions\\StaffActions.js":"33","C:\\Users\\Luiz\\Desktop\\staff_web\\src\\redux\\actions\\BusinessActions.js":"34","C:\\Users\\Luiz\\Desktop\\staff_web\\src\\components\\MainHeader\\index.js":"35","C:\\Users\\Luiz\\Desktop\\staff_web\\src\\components\\CustomButton\\index.js":"36","C:\\Users\\Luiz\\Desktop\\staff_web\\src\\components\\StoreCard\\index.js":"37","C:\\Users\\Luiz\\Desktop\\staff_web\\src\\components\\UploadImage\\index.js":"38","C:\\Users\\Luiz\\Desktop\\staff_web\\src\\components\\LightButton\\index.js":"39","C:\\Users\\Luiz\\Desktop\\staff_web\\src\\components\\StaffCardSearch\\index.js":"40","C:\\Users\\Luiz\\Desktop\\staff_web\\src\\components\\SearchBar\\index.js":"41","C:\\Users\\Luiz\\Desktop\\staff_web\\src\\components\\FormInput\\index.js":"42","C:\\Users\\Luiz\\Desktop\\staff_web\\src\\components\\StaffCardPending\\index.js":"43","C:\\Users\\Luiz\\Desktop\\staff_web\\src\\components\\StaffCardAccepted\\index.js":"44","C:\\Users\\Luiz\\Desktop\\staff_web\\src\\components\\JobCard\\index.js":"45"},{"size":577,"mtime":1621556704544,"results":"46","hashOfConfig":"47"},{"size":2594,"mtime":1621556704542,"results":"48","hashOfConfig":"47"},{"size":641,"mtime":1621556704578,"results":"49","hashOfConfig":"47"},{"size":1352,"mtime":1621556704579,"results":"50","hashOfConfig":"47"},{"size":443,"mtime":1621556704575,"results":"51","hashOfConfig":"47"},{"size":1660,"mtime":1621608844506,"results":"52","hashOfConfig":"47"},{"size":1700,"mtime":1621811007551,"results":"53","hashOfConfig":"47"},{"size":13219,"mtime":1622049301690,"results":"54","hashOfConfig":"47"},{"size":2564,"mtime":1621556704559,"results":"55","hashOfConfig":"47"},{"size":3982,"mtime":1622071389639,"results":"56","hashOfConfig":"47"},{"size":10707,"mtime":1621556704549,"results":"57","hashOfConfig":"47"},{"size":13363,"mtime":1621556704548,"results":"58","hashOfConfig":"47"},{"size":9403,"mtime":1621556704554,"results":"59","hashOfConfig":"47"},{"size":5893,"mtime":1621556704560,"results":"60","hashOfConfig":"47"},{"size":4866,"mtime":1622072892915,"results":"61","hashOfConfig":"47"},{"size":5845,"mtime":1621556704563,"results":"62","hashOfConfig":"47"},{"size":216,"mtime":1621556704552,"results":"63","hashOfConfig":"47"},{"size":3998,"mtime":1622072874492,"results":"64","hashOfConfig":"47"},{"size":6047,"mtime":1621556704564,"results":"65","hashOfConfig":"47"},{"size":14463,"mtime":1622049321997,"results":"66","hashOfConfig":"47"},{"size":8945,"mtime":1621898657695,"results":"67","hashOfConfig":"47"},{"size":1181,"mtime":1621556704570,"results":"68","hashOfConfig":"47"},{"size":1188,"mtime":1621556704566,"results":"69","hashOfConfig":"47"},{"size":1861,"mtime":1621556704569,"results":"70","hashOfConfig":"47"},{"size":3596,"mtime":1621556704568,"results":"71","hashOfConfig":"47"},{"size":421,"mtime":1621556704574,"results":"72","hashOfConfig":"47"},{"size":592,"mtime":1621556704577,"results":"73","hashOfConfig":"47"},{"size":539,"mtime":1621556704578,"results":"74","hashOfConfig":"47"},{"size":580,"mtime":1621556704575,"results":"75","hashOfConfig":"47"},{"size":347,"mtime":1621556704576,"results":"76","hashOfConfig":"47"},{"size":268,"mtime":1621556704571,"results":"77","hashOfConfig":"47"},{"size":922,"mtime":1621556704567,"results":"78","hashOfConfig":"47"},{"size":839,"mtime":1621556704568,"results":"79","hashOfConfig":"47"},{"size":1717,"mtime":1621556704567,"results":"80","hashOfConfig":"47"},{"size":4653,"mtime":1621609509909,"results":"81","hashOfConfig":"47"},{"size":1114,"mtime":1621556704516,"results":"82","hashOfConfig":"47"},{"size":1082,"mtime":1621556704536,"results":"83","hashOfConfig":"47"},{"size":7354,"mtime":1622048547184,"results":"84","hashOfConfig":"47"},{"size":1149,"mtime":1621556704527,"results":"85","hashOfConfig":"47"},{"size":2600,"mtime":1622071948496,"results":"86","hashOfConfig":"47"},{"size":635,"mtime":1621811393072,"results":"87","hashOfConfig":"47"},{"size":246,"mtime":1621556704520,"results":"88","hashOfConfig":"47"},{"size":2343,"mtime":1621556704532,"results":"89","hashOfConfig":"47"},{"size":2865,"mtime":1621556704531,"results":"90","hashOfConfig":"47"},{"size":1366,"mtime":1621556704525,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"z6vgco",{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"94"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"94"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"94"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"94"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"94"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"94"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"94"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"C:\\Users\\Luiz\\Desktop\\staff_web\\src\\index.js",[],["190","191"],"C:\\Users\\Luiz\\Desktop\\staff_web\\src\\containers\\App.js",[],"C:\\Users\\Luiz\\Desktop\\staff_web\\src\\redux\\store.js",[],"C:\\Users\\Luiz\\Desktop\\staff_web\\src\\services\\api-middleware.js",[],"C:\\Users\\Luiz\\Desktop\\staff_web\\src\\redux\\reducers\\index.js",[],"C:\\Users\\Luiz\\Desktop\\staff_web\\src\\pages\\LandingPage\\index.js",["192","193","194","195"],"import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport MainHeader from '../../components/MainHeader'\r\nimport Banner from '../../assets/business_login.png'\r\nimport BannerTwo from '../../assets/restaurant_table.jpg'\r\nimport Heart from '../../assets/heart.png'\r\nimport Star from '../../assets/star.png'\r\n\r\nimport './styles.css'\r\n\r\nconst LandingPage = () => {\r\n    const [width, setWidth] = useState(window.innerWidth);\r\n    const percentage = (width / 100) * 30\r\n\r\n    const updateWidthAndHeight = () => {\r\n        setWidth(window.innerWidth);\r\n    };\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"resize\", updateWidthAndHeight);\r\n        return () => window.removeEventListener(\"resize\", updateWidthAndHeight);\r\n    });\r\n\r\n    console.log((width - percentage) / 2)\r\n\r\n    return (\r\n        <div>\r\n            <MainHeader />\r\n            <div className=\"landing-page\">\r\n                <div className=\"landing-page_hero_container\">\r\n                    <div className=\"landing-page_hero\">\r\n                        <h1 className=\"hero-title\">Um jeito novo de <br />contratar sua equipe.</h1>\r\n                        <h2 className=\"hero-subtitle\">Contrate garçons, bartenders, seguranças e muito mais<br />para seu estabelecimento ou evento de forma simples.</h2>\r\n                        <div className=\"hero-button__container\">\r\n                            <Link className=\"hero-button\" to=\"#\">Encontrar Profissionais</Link>\r\n                        </div>\r\n                    </div>                  \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LandingPage","C:\\Users\\Luiz\\Desktop\\staff_web\\src\\pages\\HomePage\\index.js",[],"C:\\Users\\Luiz\\Desktop\\staff_web\\src\\pages\\CreateJobPage\\index.js",[],"C:\\Users\\Luiz\\Desktop\\staff_web\\src\\pages\\LoginPage\\index.js",[],"C:\\Users\\Luiz\\Desktop\\staff_web\\src\\pages\\ListJobsPage\\index.js",["196"],"C:\\Users\\Luiz\\Desktop\\staff_web\\src\\pages\\EditStorePage\\index.js",[],"C:\\Users\\Luiz\\Desktop\\staff_web\\src\\pages\\EditJobPage\\index.js",["197","198"],"import React, { useState, useEffect, useMemo } from 'react';\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport CustomButton from '../../components/CustomButton'\r\nimport './styles.css'\r\n\r\nimport PropTypes from 'prop-types';\r\nimport MaskedInput from 'react-text-mask';\r\nimport NumberFormat from 'react-number-format';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport { getAllStores } from '../../redux/actions/StoreActions'\r\nimport { updateJob } from '../../redux/actions/JobActions'\r\n\r\nfunction PhoneMaskCustom(props) {\r\n    const { inputRef, ...other } = props;\r\n\r\n    return (\r\n        <MaskedInput\r\n            {...other}\r\n            ref={(ref) => {\r\n                inputRef(ref ? ref.inputElement : null);\r\n            }}\r\n            mask={['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\r\n            placeholderChar={'\\u2000'}\r\n        />\r\n    );\r\n}\r\n\r\nPhoneMaskCustom.propTypes = {\r\n    inputRef: PropTypes.func.isRequired,\r\n};\r\n\r\n\r\nfunction DateMaskCustom(props) {\r\n    const { inputRef, ...other } = props;\r\n\r\n    return (\r\n        <MaskedInput\r\n            {...other}\r\n            ref={(ref) => {\r\n                inputRef(ref ? ref.inputElement : null);\r\n            }}\r\n            mask={[/[0-3]/, /[0-9]/, '/', /[0-1]/, /[1-9]/, '/', /[2]/, /[0]/, /[2]/, /[0-9]/]}\r\n            placeholderChar={'\\u2000'}\r\n            placeholder=\"dd/mm/aaaa\"\r\n\r\n        />\r\n    );\r\n}\r\n\r\nDateMaskCustom.propTypes = {\r\n    inputRef: PropTypes.func.isRequired,\r\n};\r\n\r\n\r\nfunction TimeMskCustom(props) {\r\n    const { inputRef, ...other } = props;\r\n\r\n    return (\r\n        <MaskedInput\r\n            {...other}\r\n            ref={(ref) => {\r\n                inputRef(ref ? ref.inputElement : null);\r\n            }}\r\n            mask={[/^([0-2])/, /([0-9])/, ':', /[0-5]/, /[0-9]/]}\r\n            placeholderChar={'\\u2000'}\r\n            placeholder=\"hh:mm\"\r\n\r\n        />\r\n    );\r\n}\r\n\r\nTimeMskCustom.propTypes = {\r\n    inputRef: PropTypes.func.isRequired,\r\n};\r\n\r\n\r\nfunction NumberFormatCustom(props) {\r\n    const { inputRef, onChange, ...other } = props;\r\n\r\n    return (\r\n        <NumberFormat\r\n            {...other}\r\n            getInputRef={inputRef}\r\n            onValueChange={(values) => {\r\n                onChange({\r\n                    target: {\r\n                        name: props.name,\r\n                        value: values.value,\r\n                    },\r\n                });\r\n            }}\r\n            decimalSeparator=\",\"\r\n            decimalScale={2}\r\n            fixedDecimalScale\r\n            isNumericString\r\n            placeholder=\"R$ 0,00\"\r\n            prefix=\"R$ \"\r\n        />\r\n    );\r\n}\r\n\r\nNumberFormatCustom.propTypes = {\r\n    inputRef: PropTypes.func.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    maxLength: 3\r\n};\r\n\r\n\r\nconst EditJobPage = ({ user, store, job, dispatchGetAllStores, dispatchUpdateJob }) => {\r\n    const [jobData, setJobData] = useState([])\r\n    const [selectedStore, setSelecteStore] = useState('')\r\n    const [avaliableStores, setAvaliableStores] = useState([])\r\n    const [category, setCategory] = useState('')\r\n    const [positions, setPositions] = useState('')\r\n    const [date, setDate] = useState('')\r\n    const [timeStart, setTimeStart] = useState('')\r\n    const [timeEnd, setTimeEnd] = useState('')\r\n    const time = {\r\n        start: timeStart,\r\n        end: timeEnd\r\n    }\r\n    const [payment, setPayment] = useState('')\r\n    const [description, setDescription] = useState('')\r\n    let history = useHistory();\r\n    const { jobId } = useParams()\r\n\r\n    const [values, setValues] = useState('');\r\n\r\n    useEffect(() => {\r\n        setJobData(job.filter(el => el._id == jobId))\r\n    }, [jobId])\r\n\r\n\r\n    const handleChange = (event) => {\r\n        setValues({\r\n            values,\r\n            [event.target.name]: event.target.value,\r\n        });\r\n        setPayment(event.target.value)\r\n    }\r\n\r\n    const editableData = jobData\r\n\r\n    useMemo(() => {\r\n        if (editableData[0]) {\r\n            setSelecteStore(editableData[0]?.store._id);\r\n            setCategory(editableData[0]?.category);\r\n            setPositions(editableData[0]?.positions);\r\n            setPayment(editableData[0]?.payment);\r\n            setDate(editableData[0]?.date)\r\n            setTimeStart(editableData[0]?.time.start)\r\n            setTimeEnd(editableData[0]?.time.end)\r\n            setDescription(editableData[0]?.description)\r\n        }\r\n    }, [editableData]);\r\n\r\n    useEffect(() => {\r\n        dispatchGetAllStores(user.businessId)\r\n        setAvaliableStores(store)\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n\r\n    const handleEditJob = (event) => {\r\n        event.preventDefault();\r\n        dispatchUpdateJob(\r\n            selectedStore,\r\n            category,\r\n            positions,\r\n            date,\r\n            time,\r\n            payment,\r\n            description,\r\n            jobId,\r\n            history.push(\"/list-jobs\"),\r\n            error => console.log(error),\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"editJob\">\r\n            <div className=\"editJob-create\">\r\n                <form className=\"editJob-create-form\" onSubmit={handleEditJob}>\r\n                    <div className=\"editJob-create-form__container\">\r\n                        <h2 className=\"editJob-create-title\">Editar vaga de trabalho</h2>\r\n                        <TextField\r\n                            label=\"Estabelecimento\"\r\n                            select\r\n                            size=\"small\"\r\n                            variant=\"outlined\"\r\n                            SelectProps={{\r\n                                native: true,\r\n                            }}\r\n                            style={{ width: 350 }}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                            onChange={(e) => setSelecteStore(e.target.value)}\r\n                            value={selectedStore}\r\n                        >\r\n                            <option value=\"\" defaultValue hidden>{editableData[0]?.store.name}</option>\r\n                            {avaliableStores?.length\r\n                                ? store.map((item) => (\r\n                                    <React.Fragment key={item._id}>\r\n                                        <option value={item._id}>{item.name}</option>\r\n                                    </React.Fragment>\r\n                                ))\r\n                                : null\r\n                            }\r\n                        </TextField>\r\n                        <TextField\r\n                            label=\"Função\"\r\n                            select\r\n                            size=\"small\"\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            SelectProps={{\r\n                                native: true,\r\n                            }}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                            style={{ width: 350, marginTop: 15 }}\r\n                            onChange={(e) => setCategory(e.target.value)}\r\n                            value={category}\r\n                        >\r\n                            <option value=\"\" defaultValue hidden>{editableData[0]?.category}</option>\r\n                            <option value=\"Bar\">Bar</option>\r\n                            <option value=\"Cozinha\">Cozinha</option>\r\n                            <option value=\"Garçom\">Garçom</option>\r\n                            <option value=\"Segurança\">Segurança</option>\r\n                            <option value=\"Limpeza\">Limpeza</option>\r\n                            <option value=\"Hostess\">Hostess</option>\r\n                        </TextField>\r\n                        <TextField\r\n                            label=\"Vaga\"\r\n                            select\r\n                            size=\"small\"\r\n                            variant=\"outlined\"\r\n                            SelectProps={{\r\n                                native: true,\r\n                            }}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                            style={{ width: 350, marginTop: 15 }}\r\n                            onChange={(e) => setPositions(e.target.value)}\r\n                            value={positions}\r\n                        >\r\n                            <option value=\"\" defaultValue hidden>{editableData[0]?.positions}</option>\r\n                            <option value=\"1\">1</option>\r\n                            <option value=\"2\">2</option>\r\n                            <option value=\"3\">3</option>\r\n                            <option value=\"4\">4</option>\r\n                            <option value=\"5\">5</option>\r\n                        </TextField>\r\n                        <TextField\r\n                            label=\"Pagamento\"\r\n                            name=\"numberformat\"\r\n                            id=\"formatted-numberformat-input\"\r\n                            size=\"small\"\r\n                            variant=\"outlined\"\r\n                            style={{ width: 350, marginTop: 15 }}\r\n                            InputProps={{\r\n                                inputComponent: NumberFormatCustom,\r\n                            }}\r\n                            inputProps={{\r\n                                maxLength: 9\r\n                            }}\r\n                            onChange={handleChange}\r\n                            value={payment}\r\n                        />\r\n                        <TextField\r\n                            label=\"Data\"\r\n                            size=\"small\"\r\n                            variant=\"outlined\"\r\n                            style={{ width: 350, marginTop: 15 }}\r\n                            InputProps={{\r\n                                inputComponent: DateMaskCustom,\r\n                            }}\r\n                            onChange={(e) => setDate(e.target.value)}\r\n                            value={date}\r\n                        />\r\n                        <div className=\"form-bussiness-adress\">\r\n                            <div>\r\n                                <TextField\r\n                                    label=\"Início\"\r\n                                    size=\"small\"\r\n                                    variant=\"outlined\"\r\n                                    style={{ width: 173.5, marginTop: 15, marginRight: 3 }}\r\n                                    InputProps={{\r\n                                        inputComponent: TimeMskCustom,\r\n                                    }}\r\n                                    onChange={(e) => setTimeStart(e.target.value)}\r\n                                    value={timeStart}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <TextField\r\n                                    label=\"Término\"\r\n                                    size=\"small\"\r\n                                    variant=\"outlined\"\r\n                                    style={{ width: 173.5, marginTop: 15 }}\r\n                                    InputProps={{\r\n                                        inputComponent: TimeMskCustom,\r\n                                    }}\r\n                                    onChange={(e) => setTimeEnd(e.target.value)}\r\n                                    value={timeEnd}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <TextField\r\n                            id=\"outlined-textarea\"\r\n                            label=\"Observações\"\r\n                            size=\"small\"\r\n                            rowsMax={4}\r\n                            placeholder=\"Ex: utilizar sapato preto\"\r\n                            multiline\r\n                            variant=\"outlined\"\r\n                            style={{ width: 350, marginTop: 15 }}\r\n                            inputProps={{\r\n                                maxLength: 152\r\n                            }}\r\n                            onChange={(e) => setDescription(e.target.value)}\r\n                            value={description}\r\n                        />\r\n                        <CustomButton name=\"Cadastrar\" id=\"editJob-create-button\" onClick={handleEditJob} />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    dispatchGetAllStores: (businessAccount) => dispatch(getAllStores(businessAccount)), dispatchUpdateJob: (store, category, positions, date, time, payment, description, jobId, onSuccess, onError) =>\r\n        dispatch(updateJob({ store, category, positions, date, time, payment, description }, jobId, onSuccess, onError))\r\n});\r\n\r\nconst mapStateToProps = (state) => ({\r\n    user: state.user,\r\n    store: state.store,\r\n    job: state.job\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditJobPage);","C:\\Users\\Luiz\\Desktop\\staff_web\\src\\pages\\JobDetailsPage\\index.js",["199","200","201","202"],"import React, { useEffect, useState } from 'react';\r\nimport { useParams } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { getAllJobs, createAccepted, removeAccepted, createPending, removePending } from '../../redux/actions/JobActions'\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nimport StaffCardAccepted from '../../components/StaffCardAccepted'\r\nimport StaffCardPending from '../../components/StaffCardPending'\r\nimport NoResult from '../../assets/no-result-search.png'\r\n\r\nimport './styles.css'\r\n\r\nconst JobDetailsPage = ({\r\n    job,\r\n    dispatchGetAllJobs,\r\n    dispatchCreateAccepted,\r\n    dispatchCreatePending,\r\n    dispatchRemoveAccepted,\r\n    dispatchRemovePending\r\n}) => {\r\n    const [value, setValue] = useState(0);\r\n    const [accepted, setAccepted] = useState(true)\r\n    const [pending, setPending] = useState(false)\r\n    const [jobData, setJobData] = useState([])\r\n    const { jobId } = useParams()\r\n\r\n    useEffect(() => {\r\n        setJobData(job.filter(el => el._id == jobId))\r\n    }, [jobId])\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    function sendPushNotification(tokenId, name, business) {\r\n        const data = {\r\n            to: tokenId,\r\n            title: 'Staffnation',\r\n            sound: 'default',\r\n            body: `${name}, ${business} confirmou sua candidatura! :)`\r\n        };\r\n\r\n        fetch('https://exp.host/--/api/v2/push/send', {\r\n            method: 'POST',\r\n            mode: 'no-cors',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                'Accept-Encoding': 'gzip, deflate',\r\n            },\r\n            body: JSON.stringify(data),\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log('Success:', data);\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error:', error);\r\n            });\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"jobDetails\">\r\n            <div style={{ display: 'block', width: 1050 }}>\r\n                <div className=\"job-details-info\">\r\n                    <p style={{ fontSize: 20, color: '#484848', marginBottom: 12, fontWeight: 700 }}>{jobData[0]?.store.name}</p>\r\n                    <p style={{ fontSize: 12, color: '#523BE4', fontWeight: 600, textTransform: 'uppercase', marginBottom: 3 }}>Detalhes da Vaga</p>\r\n                    <p className=\"job-details-text\">Função: {jobData[0]?.category}</p>\r\n                    <p className=\"job-details-text\">Pagamento: R$ {jobData[0]?.payment.toFixed(2)}</p>\r\n                    <p className=\"job-details-text\">Data: {jobData[0]?.date}</p>\r\n                    <p className=\"job-details-text\">Horário: {jobData[0]?.time.start} às {jobData[0]?.time.end}</p>\r\n                    <p className=\"job-details-text\">Descrição: {jobData[0]?.description} </p>\r\n                    <p style={{ fontSize: 12, color: '#523BE4', fontWeight: 600, textTransform: 'uppercase', marginBottom: 3, marginTop: 15 }}>Endereço</p>\r\n                    <p className=\"job-details-text\">{jobData[0]?.store.address.street}, Nº {jobData[0]?.store.address.number}</p>\r\n                    <p className=\"job-details-text\">{jobData[0]?.store.address.neighborhood}, {jobData[0]?.store.address.city} - {jobData[0]?.store.address.state}</p>\r\n                </div>\r\n                <div style={{ flexGrow: 1, marginTop: 10 }}>\r\n                    <Tabs\r\n                        value={value}\r\n                        indicatorColor=\"primary\"\r\n                        textColor=\"primary\"\r\n                        onChange={handleChange}\r\n                        aria-label=\"disabled tabs example\"\r\n                        variant=\"fullWidth\"\r\n                        style={{ marginBottom: 20 }}>\r\n                        <Tab label=\"Equipe confirmada\" style={{ textTransform: 'none', fontSize: '1rem' }} onClick={() => { setAccepted(true); setPending(false) }} />\r\n                        <Tab label=\"Candidatos pendentes\" style={{ textTransform: 'none', fontSize: '1rem' }} onClick={() => { setAccepted(false); setPending(true) }} />\r\n                    </Tabs>\r\n                </div>\r\n                <div style={{ display: 'flex', justifyContent: 'space-between', flexWrap: 'wrap' }}>\r\n                    {accepted ? (\r\n                        jobData[0]?.applicationsAccepted.length >= 1\r\n                            ? jobData[0]?.applicationsAccepted.map((item) => (\r\n                                <React.Fragment key={item._id}>\r\n                                    <StaffCardAccepted\r\n                                        key={item._id}\r\n                                        image={item.avatar.url}\r\n                                        name={item.name}\r\n                                        rating={item.rating.toFixed(2)}\r\n                                        phone={item.phone}\r\n                                        neighborhood={item.address?.neighborhood}\r\n                                        city={item.address?.city}\r\n                                        categories={item.categories}\r\n                                    />\r\n                                </React.Fragment>\r\n                            ))\r\n                            :\r\n                            <div style={{ marginTop: 50, display: 'flex', justifyContent: 'center', alignItems: 'center', width: '100%' }}>\r\n                                <div>\r\n                                    <p style={{ fontWeight: 400, color: 'grey', fontSize: 18, textAlign: 'center' }}>Nenhum item foi encontrado!</p>\r\n                                    <p style={{ fontWeight: 300, color: 'grey', fontSize: 14, textAlign: 'center' }}>Você pode verificar os candidados pendentes :) </p>\r\n                                    <img src={NoResult} style={{ width: 350, height: 270, marginTop: 50 }} />\r\n                                </div>\r\n                            </div>\r\n\r\n                    ) : pending ? jobData[0].applicationsPending.length >= 1\r\n                        ? jobData[0].applicationsPending.map((item) => (\r\n                            <React.Fragment key={item._id}>\r\n                                <StaffCardPending\r\n                                    staffId={item._id}\r\n                                    image={item.avatar.url}\r\n                                    name={item.name}\r\n                                    rating={item.rating.toFixed(2)}\r\n                                    phone={item.phone}\r\n                                    neighborhood={item.address?.neighborhood}\r\n                                    city={item.address?.city}\r\n                                    categories={item.categories}\r\n                                    handleAccepted={() => {\r\n                                        dispatchCreateAccepted(\r\n                                            item._id,\r\n                                            jobId,\r\n                                            () => {\r\n                                                dispatchRemovePending(item._id, jobId);\r\n                                                dispatchGetAllJobs();\r\n                                                sendPushNotification('ExponentPushToken[m4358uHMYWMDzWrnHBAQ7k]', item.name, 'Teste')\r\n                                            },\r\n                                            (error) => console.log(error)\r\n                                        )\r\n                                    }}\r\n                                />\r\n                            </React.Fragment>\r\n                        ))\r\n                        :\r\n                        <div style={{ marginTop: 50, display: 'flex', justifyContent: 'center', alignItems: 'center', width: '100%' }}>\r\n                            <div >\r\n                                <p style={{ fontWeight: 400, color: 'grey', fontSize: 18, textAlign: 'center' }}>Nenhum item foi encontrado!</p>\r\n                                <p style={{ fontWeight: 300, color: 'grey', fontSize: 14, textAlign: 'center' }}>Essa vaga não possui nenhum candidado pendente :)</p>\r\n                                <img src={NoResult} style={{ width: 350, height: 270, marginTop: 50 }} />\r\n                            </div>\r\n                        </div>\r\n                            : null\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    dispatchGetAllJobs: () => dispatch(getAllJobs()),\r\n    dispatchCreateAccepted: (applicationsAccepted, jobId, onSuccess, onError) =>\r\n        dispatch(createAccepted({ applicationsAccepted }, jobId, onSuccess, onError)),\r\n    dispatchCreatePending: (applicationsPending, jobId, onSuccess, onError) =>\r\n        dispatch(createPending({ applicationsPending }, jobId, onSuccess, onError)),\r\n    dispatchRemoveAccepted: (applicationsAccepted, jobId) =>\r\n        dispatch(removeAccepted({ applicationsAccepted }, jobId)),\r\n    dispatchRemovePending: (applicationsPending, jobId) =>\r\n        dispatch(removePending({ applicationsPending }, jobId)),\r\n});\r\n\r\nconst mapStateToProps = (state) => ({\r\n    job: state.job\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(JobDetailsPage);","C:\\Users\\Luiz\\Desktop\\staff_web\\src\\pages\\RegisterPage\\index.js",["203","204","205"],"import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { loginUser } from '../../redux/actions/AuthActions';\r\nimport FormInput from '../../components/FormInput';\r\nimport PropTypes from 'prop-types';\r\nimport MaskedInput from 'react-text-mask'\r\n\r\nimport CustomButton from '../../components/CustomButton';\r\nimport * as FiIcons from 'react-icons/fi'\r\nimport * as IoIcons from 'react-icons/io5'\r\nimport './styles.css'\r\n\r\n\r\nfunction PhoneMaskCustom(props) {\r\n    const { inputRef, ...other } = props;\r\n\r\n    return (\r\n        <MaskedInput\r\n            {...other}\r\n            ref={(ref) => {\r\n                inputRef(ref ? ref.inputElement : null);\r\n            }}\r\n            mask={[\"(\", /[1-9]/, /\\d/, \")\", \" \", /\\d/, /\\d/, /\\d/, /\\d/, \"-\", /\\d/, /\\d/, /\\d/, /\\d/, /\\d/]}\r\n            placeholderChar={'\\u2000'}\r\n\r\n        />\r\n    );\r\n}\r\n\r\nPhoneMaskCustom.propTypes = {\r\n    inputRef: PropTypes.func.isRequired,\r\n};\r\n\r\nconst RegisterPage = ({ dispatchLoginAction }) => {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('');\r\n    const [phone, setPhone] = useState('');\r\n    const [business, setBussines] = useState('')\r\n    const [hireNumber, setHireNumber] = useState('')\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"register-container\">\r\n                <div className=\"register-banner\">\r\n                    <div className=\"register-background\" />\r\n                </div>\r\n                <div className=\"register-content\">\r\n                    <div>\r\n                        <Link style={{ display: 'flex', flexDirection: 'row', color: '#484848', alignItems: 'center', position: 'absolute', top: 25, right: 50 }} to=\"/\">\r\n                            <IoIcons.IoArrowBackOutline size={20} color=\"grey\" />\r\n                            <p style={{ fontSize: 20, color: '#484848', marginLeft: 4, fontWeight: 300 }}>Voltar</p>\r\n                        </Link>\r\n                        <p style={{ marginTop: 15, textAlign: 'center', fontSize: 30, fontWeight: 400, color: \"#484848\" }}>Queremos <span style={{ color: \"#523BE4\", }}>entender mais</span><br />sobre o seu negócio</p>\r\n                        <div style={{ display: 'flex', height: '94%', justifyContent: 'center' }}>\r\n                            <div className=\"register\">\r\n                                <form onSubmit={() => { }}>\r\n                                    <p className=\"register-label\">Nome</p>\r\n                                    <FormInput\r\n                                        id=\"register-input\"\r\n                                        placeholder=\"Digite seu nome\"\r\n                                        value={name}\r\n                                        handleChange={(e) => setName(e.target.value)}\r\n                                    />\r\n                                    <p className=\"register-label\">Email</p>\r\n                                    <FormInput\r\n                                        id=\"register-input\"\r\n                                        type=\"email\"\r\n                                        name=\"email\"\r\n                                        placeholder=\"Digite seu email\"\r\n                                        value={email}\r\n                                        handleChange={(e) => setEmail(e.target.value)}\r\n                                    />\r\n                                    <p className=\"register-label\">Telefone</p>\r\n                                    <MaskedInput\r\n                                        className=\"form-input\"\r\n                                        id=\"register-input\"\r\n                                        placeholder=\"Digite seu telefone\"\r\n                                        value={phone}\r\n                                        handleChange={(e) => setPhone(e.target.value)}\r\n                                        mask={[\"(\", /[1-9]/, /\\d/, \")\", \" \", /\\d/, /\\d/, /\\d/, /\\d/, \"-\", /\\d/, /\\d/, /\\d/, /\\d/, /\\d/]}\r\n                                        placeholderChar={'\\u2000'}\r\n                                    />\r\n                                    <p className=\"register-label\">Estabelecimento</p>\r\n                                    <FormInput\r\n                                        id=\"register-input\"\r\n                                        placeholder=\"Digite o nome do negócio\"\r\n                                        value={business}\r\n                                        handleChange={(e) => setBussines(e.target.value)}\r\n                                    />\r\n                                    <p className=\"register-label\">Média de contratação semanal</p>\r\n                                    <select className=\"form-input\" id=\"register-input\" style={{ backgroundColor: '#fff' }}>\r\n                                        <option value=\"1\">1-2</option>\r\n                                        <option value=\"2\">2-4</option>\r\n                                        <option value=\"3\">4-6</option>\r\n                                        <option value=\"3\">6-8</option>\r\n                                        <option value=\"3\">8-10</option>\r\n                                        <option value=\"3\">Acima de 10</option>\r\n                                    </select>\r\n                                    <CustomButton id=\"register-button\" name=\"Solicitar Contato\" onClick={() => { }} />\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div >\r\n    );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    dispatchLoginAction: (email, password, onSuccess, onError) =>\r\n        dispatch(loginUser({ email, password }, onSuccess, onError)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(RegisterPage);","C:\\Users\\Luiz\\Desktop\\staff_web\\src\\pages\\SeachStaffPage\\index.js",["206"],"C:\\Users\\Luiz\\Desktop\\staff_web\\src\\pages\\SettingsPage\\index.js",[],"C:\\Users\\Luiz\\Desktop\\staff_web\\src\\pages\\FinancePage\\index.js",[],"C:\\Users\\Luiz\\Desktop\\staff_web\\src\\pages\\FavoritePage\\index.js",["207","208"],"C:\\Users\\Luiz\\Desktop\\staff_web\\src\\pages\\StaffDetailsPage\\index.js",["209","210","211","212","213","214","215","216","217","218","219"],"import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useParams } from \"react-router-dom\";\r\nimport { connect } from 'react-redux'\r\nimport * as IoIcons from \"react-icons/io5\"\r\n\r\nimport LightButton from \"../../components/LightButton\";\r\nimport { getStaff } from '../../redux/actions/StaffActions'\r\n\r\nimport './styles.css'\r\n\r\nconst StaffDetailsPage = ({ dispatchGetStaff, staff, job }) => {\r\n    const [staffData, setStaffData] = useState([])\r\n    const [pendingJobs, setPendingJobs] = useState([])\r\n    const [acceptedJobs, setAcceptedJobs] = useState([])\r\n    const [inviteJob, setInvateJob] = useState('')\r\n    const { staffId } = useParams()\r\n\r\n    useEffect(() => {\r\n        setStaffData(staff.filter(el => el._id == staffId))\r\n    }, [staffId])\r\n\r\n    useEffect(() => {\r\n        setPendingJobs(job.map(job => job.applicationsPending\r\n            .some(el => el._id == staffId)\r\n        ))\r\n    }, [staffId])\r\n\r\n    useEffect(() => {\r\n        setAcceptedJobs(job.map(job => job.applicationsAccepted\r\n            .some(el => el._id == staffId)\r\n        ))\r\n    }, [staffId])\r\n\r\n    return (\r\n        <div className=\"staff-details\">\r\n            <div className=\"staff-details-card\">\r\n                <div style={{ width: '80%' }}>\r\n                    <div className=\"staff-details-card-header\">\r\n                        <img src={staffData[0]?.avatar.url} className=\"staff-details-avatar\" />\r\n                        <div style={{ marginLeft: 20 }}>\r\n                            <h2 className=\"staff-details-title\">{staffData[0]?.name}</h2>\r\n                            <div style={{ display: 'flex' }}>\r\n                                <div style={{ marginRight: 40 }}>\r\n                                    <div className=\"staff-jobs-data\">\r\n                                        <p className=\"staff-jobs-data-text\">{staffData[0]?.rating.toFixed(2)}</p>\r\n                                        <IoIcons.IoStar color=\"grey\" size={16} style={{ marginLeft: 3, paddingBottom: 3 }} />\r\n                                    </div>\r\n                                    <p>Avaliação</p>\r\n                                </div>\r\n                                <div>\r\n                                    <div className=\"staff-jobs-data\" >\r\n                                        <p className=\"staff-jobs-data-text\">2</p>\r\n                                    </div>\r\n                                    <p>Trabalhos</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"staff-section\">\r\n                        <p className=\"staff-card-section-title\">Dados pessoais</p>\r\n                        <p>Idade: {2021 - parseInt(staffData[0]?.birthdayDate.slice(6, 10))}</p>\r\n                        <p>Gênero: {staffData[0]?.gender}</p>\r\n                        <p>Telefone: {staffData[0]?.phone}</p>\r\n                        <p>Endereço: {staffData[0]?.address.neighborhood}, {staffData[0]?.address.city} - {staffData[0]?.address.state} </p>\r\n                    </div>\r\n                    <div className=\"staff-section\">\r\n                        <p className=\"staff-card-section-title\">Informações profissionais</p>\r\n                        {staffData[0]?.categories.map((item) => (\r\n                            <React.Fragment key={item._id}>\r\n                                <div style={{ marginBottom: 10 }}>\r\n                                    <p>Categoria: {item.name.charAt(0).toUpperCase() + item.name.slice(1)}</p>\r\n                                    {item.experiencia === 0 ?\r\n                                        <p>Experiência: {item.experiencia}-6 meses</p> :\r\n                                        <p>Experiência: {item.experiencia} {item.experiencia <= 1 ? 'ano' : 'anos'}</p>\r\n                                    }\r\n                                    <p>Possui certificação: {item.certificado ? 'Sim' : 'Não'}</p>\r\n                                </div>\r\n                            </React.Fragment>\r\n                        ))\r\n                        }\r\n                    </div>\r\n                    {!pendingJobs.includes(true) ?\r\n                        <div className=\"staff-invite-job\">\r\n                            <p className=\"staff-card-section-title\">Convidar para uma vaga</p>\r\n                            <div>\r\n                                <select className=\"staff-job-select\">\r\n                                    <option value=\"\" defaultValue hidden>Selecionar vaga</option>\r\n                                    {job?.length\r\n                                        ? job.map((item) => (\r\n                                            <React.Fragment key={item._id}>\r\n                                                <option value={item._id}>{item.category} - {item.date.slice(0, 5)}</option>\r\n                                            </React.Fragment>\r\n                                        ))\r\n                                        : null\r\n                                    }\r\n                                </select>\r\n                                <LightButton name=\"Enviar convite\" id=\"staff-details-button-light\" onClick={() => { }} />\r\n                            </div>\r\n                        </div>\r\n                        :\r\n                        <div className=\"staff-invite-job\">\r\n                            <p className=\"staff-card-section-title\">Aceitar candidatura?</p>\r\n                            <LightButton name=\"Confirmar\" id=\"staff-details-button-light\" onClick={() => { }} />\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    dispatchGetStaff: (staffId) => dispatch(getStaff(staffId)),\r\n});\r\n\r\nconst mapStateToProps = (state) => ({\r\n    staff: state.staff,\r\n    job: state.job,\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(StaffDetailsPage)","C:\\Users\\Luiz\\Desktop\\staff_web\\src\\pages\\BusinessPage\\index.js",["220"],"C:\\Users\\Luiz\\Desktop\\staff_web\\src\\components\\VerticalDrawer\\index.js",[],"C:\\Users\\Luiz\\Desktop\\staff_web\\src\\redux\\constants.js",[],"C:\\Users\\Luiz\\Desktop\\staff_web\\src\\redux\\actions\\AuthActions.js",[],"C:\\Users\\Luiz\\Desktop\\staff_web\\src\\redux\\actions\\StoreActions.js",[],"C:\\Users\\Luiz\\Desktop\\staff_web\\src\\redux\\actions\\JobActions.js",[],"C:\\Users\\Luiz\\Desktop\\staff_web\\src\\redux\\reducers\\image\\ImageReducer.js",[],"C:\\Users\\Luiz\\Desktop\\staff_web\\src\\redux\\reducers\\store\\StoreReducer.js",[],"C:\\Users\\Luiz\\Desktop\\staff_web\\src\\redux\\reducers\\user\\UserReducer.js",[],"C:\\Users\\Luiz\\Desktop\\staff_web\\src\\redux\\reducers\\job\\JobReducer.js",[],"C:\\Users\\Luiz\\Desktop\\staff_web\\src\\redux\\reducers\\staff\\StaffReducer.js",[],"C:\\Users\\Luiz\\Desktop\\staff_web\\src\\redux\\reducers\\business\\BusinessReducer.js",[],"C:\\Users\\Luiz\\Desktop\\staff_web\\src\\redux\\actions\\ImageActions.js",[],"C:\\Users\\Luiz\\Desktop\\staff_web\\src\\redux\\actions\\StaffActions.js",[],"C:\\Users\\Luiz\\Desktop\\staff_web\\src\\redux\\actions\\BusinessActions.js",[],"C:\\Users\\Luiz\\Desktop\\staff_web\\src\\components\\MainHeader\\index.js",[],"C:\\Users\\Luiz\\Desktop\\staff_web\\src\\components\\CustomButton\\index.js",[],"C:\\Users\\Luiz\\Desktop\\staff_web\\src\\components\\StoreCard\\index.js",[],"C:\\Users\\Luiz\\Desktop\\staff_web\\src\\components\\UploadImage\\index.js",["221"],"C:\\Users\\Luiz\\Desktop\\staff_web\\src\\components\\LightButton\\index.js",[],"C:\\Users\\Luiz\\Desktop\\staff_web\\src\\components\\StaffCardSearch\\index.js",["222"],"C:\\Users\\Luiz\\Desktop\\staff_web\\src\\components\\SearchBar\\index.js",[],"C:\\Users\\Luiz\\Desktop\\staff_web\\src\\components\\FormInput\\index.js",[],"C:\\Users\\Luiz\\Desktop\\staff_web\\src\\components\\StaffCardPending\\index.js",["223"],"import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport './styles.css'\r\nimport * as IoIcons from \"react-icons/io5\"\r\nimport * as MdIcons from \"react-icons/md\";\r\n\r\nimport LightButton from '../../components/LightButton'\r\n\r\n\r\nconst StaffCardPending = ({ name, image, rating, phone, neighborhood, city, categories = [], handleAccepted, staffId }) => {\r\n    return (\r\n        <div className=\"staffAccepted-card\">\r\n            <img src={image} alt=\"\" className=\"staffAccepted-image\" />\r\n            <div className=\"staffAccepted-main-content\">\r\n                <p className=\"staffAccepted-card-title\">{name}</p>\r\n                <div style={{ display: 'flex', marginBottom: 8, alignItems: 'center' }}>\r\n                    <p className=\"staffAccepted-card-text \">{rating}</p>\r\n                    <IoIcons.IoStar color=\"grey\" size={12} style={{ marginLeft: 3 }} />\r\n                </div>\r\n                <div style={{ display: 'flex', marginBottom: 5 }}>\r\n                    {categories.length >= 1 ?\r\n                        categories.map((item) => (\r\n                            <React.Fragment key={item._id}>\r\n                                <div className=\"staffAccepted-category-box \">\r\n                                    <p>{item.name}</p>\r\n                                </div>\r\n                            </React.Fragment>\r\n                        ))\r\n                        : null}\r\n                </div>\r\n                <p className=\"staffAccepted-card-text\">{phone}</p>\r\n                <p className=\"staffAccepted-card-text \">{neighborhood} - {city}</p>\r\n            </div>\r\n            <div style={{ display: 'block' }}>\r\n                <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n                    <Link className=\"staff-button-next\" to={`/staff/${staffId}`}>\r\n                        <MdIcons.MdArrowForward size={25} />\r\n                    </Link>\r\n                </div>\r\n                <div style={{ paddingRight: 20, marginTop: 20, }}>\r\n                    <p style={{ marginBottom: 5 }}>Aceitar candidatura?</p>\r\n                    <Link className=\"staff-pending-confirm-button\" onClick={handleAccepted} >\r\n                        Confirmar\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StaffCardPending","C:\\Users\\Luiz\\Desktop\\staff_web\\src\\components\\StaffCardAccepted\\index.js",["224"],"import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport './styles.css'\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport * as IoIcons from \"react-icons/io5\"\r\nimport * as FiIcons from \"react-icons/fi\";\r\n\r\n\r\nconst StaffCardAccepted = ({ name, image, rating, phone, neighborhood, city, categories = [] }) => {\r\n    const [value, setValue] = useState(0)\r\n    const [paymentDone, setPaymentDone] = useState(false)\r\n\r\n    return (\r\n        <div className=\"staffAccepted-card\">\r\n            <img src={image} alt=\"\" className=\"staffAccepted-image\" />\r\n            <div className=\"staffAccepted-main-content\">\r\n                <p className=\"staffAccepted-card-title\">{name}</p>\r\n                <div style={{ display: 'flex', marginBottom: 8, alignItems: 'center' }}>\r\n                    <p className=\"staffAccepted-card-text \">{rating}</p>\r\n                    <IoIcons.IoStar color=\"grey\" size={12} style={{ marginLeft: 3 }} />\r\n                </div>\r\n                <div style={{ display: 'flex', marginBottom: 5 }}>\r\n                    {categories.length >= 1 ?\r\n                        categories.map((item) => (\r\n                            <React.Fragment key={item._id}>\r\n                                <div className=\"staffAccepted-category-box \">\r\n                                    <p>{item.name}</p>\r\n                                </div>\r\n                            </React.Fragment>\r\n                        ))\r\n                        : null}\r\n                </div>\r\n                <p className=\"staffAccepted-card-text\">{phone}</p>\r\n                <p className=\"staffAccepted-card-text \">{neighborhood} - {city}</p>\r\n            </div>\r\n            <div style={{ display: 'block' }}>\r\n                {!paymentDone ?\r\n                    <div style={{ paddingRight: 20, marginTop: 5 }}>\r\n                        <p>Liberar pagamento</p>\r\n                        <p style={{ marginBottom: 5 }}>Valor: 150,00</p>\r\n                        <Link className=\"staff-pending-confirm-button\" onClick={() => { setPaymentDone(true) }} >\r\n                            Confirmar\r\n                            </Link>\r\n                    </div> :\r\n                    <div style={{ paddingRight: 20, marginTop: 4 }}>\r\n                        <p >Pagamento efetuado!</p>\r\n                        <p style={{ marginBottom: 10 }}>Valor: 150,00</p>\r\n                        <p >Avaliação</p>\r\n                        <Rating\r\n                            name=\"simple-controlled\"\r\n                            value={value}\r\n                            onChange={(event, newValue) => {\r\n                                setValue(newValue);\r\n                            }}\r\n                        />\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StaffCardAccepted","C:\\Users\\Luiz\\Desktop\\staff_web\\src\\components\\JobCard\\index.js",[],{"ruleId":"225","replacedBy":"226"},{"ruleId":"227","replacedBy":"228"},{"ruleId":"229","severity":1,"message":"230","line":4,"column":8,"nodeType":"231","messageId":"232","endLine":4,"endColumn":14},{"ruleId":"229","severity":1,"message":"233","line":5,"column":8,"nodeType":"231","messageId":"232","endLine":5,"endColumn":17},{"ruleId":"229","severity":1,"message":"234","line":6,"column":8,"nodeType":"231","messageId":"232","endLine":6,"endColumn":13},{"ruleId":"229","severity":1,"message":"235","line":7,"column":8,"nodeType":"231","messageId":"232","endLine":7,"endColumn":12},{"ruleId":"236","severity":1,"message":"237","line":68,"column":37,"nodeType":"238","endLine":68,"endColumn":110},{"ruleId":"239","severity":1,"message":"240","line":134,"column":44,"nodeType":"241","messageId":"242","endLine":134,"endColumn":46},{"ruleId":"243","severity":1,"message":"244","line":135,"column":8,"nodeType":"245","endLine":135,"endColumn":15,"suggestions":"246"},{"ruleId":"239","severity":1,"message":"240","line":29,"column":44,"nodeType":"241","messageId":"242","endLine":29,"endColumn":46},{"ruleId":"243","severity":1,"message":"244","line":30,"column":8,"nodeType":"245","endLine":30,"endColumn":15,"suggestions":"247"},{"ruleId":"236","severity":1,"message":"237","line":114,"column":37,"nodeType":"238","endLine":114,"endColumn":110},{"ruleId":"236","severity":1,"message":"237","line":150,"column":33,"nodeType":"238","endLine":150,"endColumn":106},{"ruleId":"229","severity":1,"message":"248","line":11,"column":13,"nodeType":"231","messageId":"232","endLine":11,"endColumn":20},{"ruleId":"229","severity":1,"message":"249","line":41,"column":12,"nodeType":"231","messageId":"232","endLine":41,"endColumn":22},{"ruleId":"229","severity":1,"message":"250","line":41,"column":24,"nodeType":"231","messageId":"232","endLine":41,"endColumn":37},{"ruleId":"236","severity":1,"message":"237","line":93,"column":33,"nodeType":"238","endLine":93,"endColumn":106},{"ruleId":"229","severity":1,"message":"251","line":1,"column":28,"nodeType":"231","messageId":"232","endLine":1,"endColumn":36},{"ruleId":"236","severity":1,"message":"237","line":75,"column":33,"nodeType":"238","endLine":75,"endColumn":106},{"ruleId":"229","severity":1,"message":"252","line":2,"column":10,"nodeType":"231","messageId":"232","endLine":2,"endColumn":14},{"ruleId":"229","severity":1,"message":"253","line":15,"column":12,"nodeType":"231","messageId":"232","endLine":15,"endColumn":24},{"ruleId":"229","severity":1,"message":"254","line":16,"column":12,"nodeType":"231","messageId":"232","endLine":16,"endColumn":21},{"ruleId":"229","severity":1,"message":"255","line":16,"column":23,"nodeType":"231","messageId":"232","endLine":16,"endColumn":35},{"ruleId":"239","severity":1,"message":"240","line":20,"column":48,"nodeType":"241","messageId":"242","endLine":20,"endColumn":50},{"ruleId":"243","severity":1,"message":"256","line":21,"column":8,"nodeType":"245","endLine":21,"endColumn":17,"suggestions":"257"},{"ruleId":"239","severity":1,"message":"240","line":25,"column":32,"nodeType":"241","messageId":"242","endLine":25,"endColumn":34},{"ruleId":"243","severity":1,"message":"258","line":27,"column":8,"nodeType":"245","endLine":27,"endColumn":17,"suggestions":"259"},{"ruleId":"239","severity":1,"message":"240","line":31,"column":32,"nodeType":"241","messageId":"242","endLine":31,"endColumn":34},{"ruleId":"243","severity":1,"message":"260","line":33,"column":8,"nodeType":"245","endLine":33,"endColumn":17,"suggestions":"261"},{"ruleId":"236","severity":1,"message":"237","line":40,"column":25,"nodeType":"238","endLine":40,"endColumn":96},{"ruleId":"236","severity":1,"message":"237","line":159,"column":37,"nodeType":"238","endLine":159,"endColumn":110},{"ruleId":"262","severity":1,"message":"263","line":87,"column":132,"nodeType":"264","messageId":"242","endLine":87,"endColumn":140},{"ruleId":"239","severity":1,"message":"240","line":48,"column":60,"nodeType":"241","messageId":"242","endLine":48,"endColumn":62},{"ruleId":"229","severity":1,"message":"265","line":7,"column":8,"nodeType":"231","messageId":"232","endLine":7,"endColumn":19},{"ruleId":"229","severity":1,"message":"248","line":6,"column":13,"nodeType":"231","messageId":"232","endLine":6,"endColumn":20},"no-native-reassign",["266"],"no-negated-in-lhs",["267"],"no-unused-vars","'Banner' is defined but never used.","Identifier","unusedVar","'BannerTwo' is defined but never used.","'Heart' is defined but never used.","'Star' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'job'. Either include it or remove the dependency array. If 'setJobData' needs the current value of 'job', you can also switch to useReducer instead of useState and read 'job' in the reducer.","ArrayExpression",["268"],["269"],"'FiIcons' is defined but never used.","'hireNumber' is assigned a value but never used.","'setHireNumber' is assigned a value but never used.","'useState' is defined but never used.","'Link' is defined but never used.","'acceptedJobs' is assigned a value but never used.","'inviteJob' is assigned a value but never used.","'setInvateJob' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'staff'. Either include it or remove the dependency array. If 'setStaffData' needs the current value of 'staff', you can also switch to useReducer instead of useState and read 'staff' in the reducer.",["270"],"React Hook useEffect has a missing dependency: 'job'. Either include it or remove the dependency array. If 'setPendingJobs' needs the current value of 'job', you can also switch to useReducer instead of useState and read 'job' in the reducer.",["271"],"React Hook useEffect has a missing dependency: 'job'. Either include it or remove the dependency array. If 'setAcceptedJobs' needs the current value of 'job', you can also switch to useReducer instead of useState and read 'job' in the reducer.",["272"],"no-dupe-keys","Duplicate key 'fontSize'.","ObjectExpression","'LightButton' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"273","fix":"274"},{"desc":"273","fix":"275"},{"desc":"276","fix":"277"},{"desc":"278","fix":"279"},{"desc":"278","fix":"280"},"Update the dependencies array to be: [job, jobId]",{"range":"281","text":"282"},{"range":"283","text":"282"},"Update the dependencies array to be: [staff, staffId]",{"range":"284","text":"285"},"Update the dependencies array to be: [job, staffId]",{"range":"286","text":"287"},{"range":"288","text":"287"},[3821,3828],"[job, jobId]",[1071,1078],[784,793],"[staff, staffId]",[947,956],"[job, staffId]",[1112,1121]]