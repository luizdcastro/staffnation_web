[{"/home/luiz/Repositories/staffnation_web/src/index.js":"1","/home/luiz/Repositories/staffnation_web/src/containers/App.js":"2","/home/luiz/Repositories/staffnation_web/src/redux/store.js":"3","/home/luiz/Repositories/staffnation_web/src/services/api-middleware.js":"4","/home/luiz/Repositories/staffnation_web/src/redux/constants.js":"5","/home/luiz/Repositories/staffnation_web/src/pages/HomePage/index.js":"6","/home/luiz/Repositories/staffnation_web/src/redux/actions/AuthActions.js":"7","/home/luiz/Repositories/staffnation_web/src/redux/reducers/index.js":"8","/home/luiz/Repositories/staffnation_web/src/redux/reducers/user/UserReducer.js":"9","/home/luiz/Repositories/staffnation_web/src/pages/LoginPage/index.js":"10","/home/luiz/Repositories/staffnation_web/src/components/FormInput/index.js":"11","/home/luiz/Repositories/staffnation_web/src/components/CustomButton/index.js":"12","/home/luiz/Repositories/staffnation_web/src/components/Header/index.js":"13","/home/luiz/Repositories/staffnation_web/src/pages/BusinessPage/index.js":"14","/home/luiz/Repositories/staffnation_web/src/components/FormBusiness/index.js":"15","/home/luiz/Repositories/staffnation_web/src/components/UploadImage/index.js":"16","/home/luiz/Repositories/staffnation_web/src/redux/actions/ImageActions.js":"17","/home/luiz/Repositories/staffnation_web/src/redux/reducers/image/ImageReducer.js":"18","/home/luiz/Repositories/staffnation_web/src/components/InactiveButton/index.js":"19","/home/luiz/Repositories/staffnation_web/src/redux/reducers/store/StoreReducer.js":"20","/home/luiz/Repositories/staffnation_web/src/redux/actions/StoreActions.js":"21","/home/luiz/Repositories/staffnation_web/src/components/StoreCard/index.js":"22","/home/luiz/Repositories/staffnation_web/src/pages/CreateJobPage/index.js":"23","/home/luiz/Repositories/staffnation_web/src/pages/ListJobsPage/index.js":"24","/home/luiz/Repositories/staffnation_web/src/components/JobCard/index.js":"25","/home/luiz/Repositories/staffnation_web/src/redux/reducers/job/JobReducer.js":"26","/home/luiz/Repositories/staffnation_web/src/redux/actions/JobActions.js":"27","/home/luiz/Repositories/staffnation_web/src/pages/EditStorePage/index.js":"28","/home/luiz/Repositories/staffnation_web/src/components/VerticalDrawer/index.js":"29","/home/luiz/Repositories/staffnation_web/src/pages/EditJobPage/index.js":"30","/home/luiz/Repositories/staffnation_web/src/pages/JobDetailsPage/index.js":"31","/home/luiz/Repositories/staffnation_web/src/components/StaffCardAccepted/index.js":"32","/home/luiz/Repositories/staffnation_web/src/components/StaffCardPending/index.js":"33","/home/luiz/Repositories/staffnation_web/src/pages/SeachStaffPage/index.js":"34","/home/luiz/Repositories/staffnation_web/src/components/SearchBar/index.js":"35","/home/luiz/Repositories/staffnation_web/src/components/StaffCardSearch/index.js":"36","/home/luiz/Repositories/staffnation_web/src/redux/actions/StaffActions.js":"37","/home/luiz/Repositories/staffnation_web/src/redux/reducers/staff/StaffReducer.js":"38","/home/luiz/Repositories/staffnation_web/src/pages/SettingsPage/index.js":"39","/home/luiz/Repositories/staffnation_web/src/pages/FinancePage/index.js":"40","/home/luiz/Repositories/staffnation_web/src/components/LightButton/index.js":"41","/home/luiz/Repositories/staffnation_web/src/redux/reducers/business/BusinessReducer.js":"42","/home/luiz/Repositories/staffnation_web/src/redux/actions/BusinessActions.js":"43","/home/luiz/Repositories/staffnation_web/src/pages/RegisterPage/index.js":"44","/home/luiz/Repositories/staffnation_web/src/pages/LandingPage/index.js":"45","/home/luiz/Repositories/staffnation_web/src/components/MainHeader/index.js":"46"},{"size":556,"mtime":1607527614148,"results":"47","hashOfConfig":"48"},{"size":2270,"mtime":1609110157254,"results":"49","hashOfConfig":"48"},{"size":619,"mtime":1607527892075,"results":"50","hashOfConfig":"48"},{"size":1309,"mtime":1607539560090,"results":"51","hashOfConfig":"48"},{"size":1024,"mtime":1608221289163,"results":"52","hashOfConfig":"48"},{"size":363,"mtime":1608430198721,"results":"53","hashOfConfig":"48"},{"size":1148,"mtime":1607986619696,"results":"54","hashOfConfig":"48"},{"size":425,"mtime":1608219623468,"results":"55","hashOfConfig":"48"},{"size":519,"mtime":1607540142918,"results":"56","hashOfConfig":"48"},{"size":2493,"mtime":1608764986951,"results":"57","hashOfConfig":"48"},{"size":237,"mtime":1607538476997,"results":"58","hashOfConfig":"48"},{"size":1077,"mtime":1607649640567,"results":"59","hashOfConfig":"48"},{"size":1348,"mtime":1608760360777,"results":"60","hashOfConfig":"61"},{"size":12655,"mtime":1608921738048,"results":"62","hashOfConfig":"48"},{"size":281,"mtime":1607626831717,"results":"63","hashOfConfig":"61"},{"size":7136,"mtime":1608676312147,"results":"64","hashOfConfig":"48"},{"size":886,"mtime":1607653212122,"results":"65","hashOfConfig":"48"},{"size":408,"mtime":1607652896540,"results":"66","hashOfConfig":"48"},{"size":367,"mtime":1607655133788,"results":"67","hashOfConfig":"61"},{"size":575,"mtime":1607984808349,"results":"68","hashOfConfig":"48"},{"size":1781,"mtime":1607996373484,"results":"69","hashOfConfig":"48"},{"size":1056,"mtime":1608429825909,"results":"70","hashOfConfig":"48"},{"size":11766,"mtime":1608935738851,"results":"71","hashOfConfig":"48"},{"size":3871,"mtime":1609004869059,"results":"72","hashOfConfig":"48"},{"size":1334,"mtime":1608429628778,"results":"73","hashOfConfig":"48"},{"size":565,"mtime":1607980354830,"results":"74","hashOfConfig":"48"},{"size":3447,"mtime":1608147579341,"results":"75","hashOfConfig":"48"},{"size":10443,"mtime":1608676598094,"results":"76","hashOfConfig":"48"},{"size":8242,"mtime":1608732251218,"results":"77","hashOfConfig":"48"},{"size":13084,"mtime":1608676413902,"results":"78","hashOfConfig":"48"},{"size":9094,"mtime":1609095227345,"results":"79","hashOfConfig":"48"},{"size":2578,"mtime":1608680590001,"results":"80","hashOfConfig":"48"},{"size":2164,"mtime":1608429772223,"results":"81","hashOfConfig":"48"},{"size":3340,"mtime":1609004795319,"results":"82","hashOfConfig":"48"},{"size":606,"mtime":1608833110052,"results":"83","hashOfConfig":"48"},{"size":2394,"mtime":1609007103934,"results":"84","hashOfConfig":"48"},{"size":423,"mtime":1608159829269,"results":"85","hashOfConfig":"48"},{"size":262,"mtime":1608160656819,"results":"86","hashOfConfig":"48"},{"size":5696,"mtime":1608823586686,"results":"87","hashOfConfig":"48"},{"size":176,"mtime":1608212459797,"results":"88","hashOfConfig":"48"},{"size":1111,"mtime":1608733689448,"results":"89","hashOfConfig":"48"},{"size":259,"mtime":1608219590661,"results":"90","hashOfConfig":"48"},{"size":757,"mtime":1608221270427,"results":"91","hashOfConfig":"48"},{"size":5777,"mtime":1609120639331,"results":"92","hashOfConfig":"48"},{"size":314,"mtime":1609114526476,"results":"93","hashOfConfig":"48"},{"size":2861,"mtime":1609120742405,"results":"94","hashOfConfig":"48"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},"cezbn9",{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"123"},"1y61xi5",{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"97"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"97"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"97"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"97"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/luiz/Repositories/staffnation_web/src/index.js",[],["196","197"],"/home/luiz/Repositories/staffnation_web/src/containers/App.js",[],"/home/luiz/Repositories/staffnation_web/src/redux/store.js",[],"/home/luiz/Repositories/staffnation_web/src/services/api-middleware.js",[],"/home/luiz/Repositories/staffnation_web/src/redux/constants.js",[],"/home/luiz/Repositories/staffnation_web/src/pages/HomePage/index.js",[],"/home/luiz/Repositories/staffnation_web/src/redux/actions/AuthActions.js",[],"/home/luiz/Repositories/staffnation_web/src/redux/reducers/index.js",[],"/home/luiz/Repositories/staffnation_web/src/redux/reducers/user/UserReducer.js",[],"/home/luiz/Repositories/staffnation_web/src/pages/LoginPage/index.js",[],"/home/luiz/Repositories/staffnation_web/src/components/FormInput/index.js",[],"/home/luiz/Repositories/staffnation_web/src/components/CustomButton/index.js",[],"/home/luiz/Repositories/staffnation_web/src/components/Header/index.js",["198","199","200","201"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport MenuIcon from '@material-ui/icons/Menu';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport LoyaltyIcon from '@material-ui/icons/Loyalty';\nimport './styles.css';\n\nconst Header = ({ isLoggedIn, onLogout }) => {\n    function Navbar({ children }) {\n        return (\n            <nav className=\"nav-container\">\n                <Link className=\"nav-logo\" to=\"/home\">\n                    staffnation\n                </Link>\n                <ul className=\"nav-menu\">{children}</ul>\n            </nav>\n        );\n    }\n\n    function NavItem({ name, favoriteCounter, couponCounter, to }) {\n        return (\n            <li className=\"nav-item\">\n                <Link className=\"nav-link\" to={to}>\n                    {name}\n                </Link>\n                <div className=\"nav-fav__counter\">\n                    {favoriteCounter}\n                    {couponCounter}\n                </div>\n            </li>\n        );\n    }\n\n    return (\n        <div className=\"header\">\n            <Navbar>\n                <React.Fragment>\n                    <NavItem name=\"Login\" to=\"/login\" />\n                    <NavItem name=\"Registrar\" to=\"/login\" />\n                </React.Fragment>\n            </Navbar>\n        </div>\n    );\n};\n\nexport default Header;\n",["202","203"],"/home/luiz/Repositories/staffnation_web/src/pages/BusinessPage/index.js",["204"],"import React, { useState, useEffect } from 'react';\nimport { connect } from \"react-redux\";\nimport MaskedInput from 'react-text-mask'\nimport TextField from '@material-ui/core/TextField';\nimport PropTypes from 'prop-types';\n\nimport CustomButton from '../../components/CustomButton'\nimport UploadImage from '../../components/UploadImage'\nimport StoreCard from '../../components/StoreCard'\n\nimport { createStore, getAllStores } from '../../redux/actions/StoreActions'\nimport { resetImage } from '../../redux/actions/ImageActions'\nimport NoResult from '../../assets/no-result-search.png'\n\nimport './styles.css'\n\nfunction PhoneMaskCustom(props) {\n    const { inputRef, ...other } = props;\n\n    return (\n        <MaskedInput\n            {...other}\n            ref={(ref) => {\n                inputRef(ref ? ref.inputElement : null);\n            }}\n            mask={[\"(\", /[1-9]/, /\\d/, \")\", \" \", /\\d/, /\\d/, /\\d/, /\\d/, \"-\", /\\d/, /\\d/, /\\d/, /\\d/, /\\d/]}\n            placeholderChar={'\\u2000'}\n\n        />\n    );\n}\n\nPhoneMaskCustom.propTypes = {\n    inputRef: PropTypes.func.isRequired,\n};\n\nconst BusinessPage = ({\n    image,\n    user,\n    store,\n    dispatchCreateStore,\n    dispatchResetImage,\n    dispatchGetAllStores,\n}) => {\n    const [name, setName] = useState('')\n    const [category, setCategory] = useState('');\n    const [phone, setPhone] = useState('')\n    const [cep, setCep] = useState('')\n    const [number, setNumber] = useState('')\n    const [street, setStreet] = useState('')\n    const [city, setCity] = useState('')\n    const [bairro, setBairro] = useState('')\n    const [state, setState] = useState('')\n    const [address, setAddress] = useState({})\n    const [cepError, setCepError] = useState('')\n    const [createError, setCreateError] = useState('')\n    const [uploadedFiles, setUploadedFiles] = useState([]);\n    const uploadedImage = image.url\n\n    useEffect(() => {\n        dispatchGetAllStores(user.businessId)\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    const getUserAddress = () => {\n        fetch(`https://viacep.com.br/ws/${cep}/json/`)\n            .then((res) => res.json())\n            .then((data) => {\n                if (data.erro) {\n                    setCepError(true);\n                    console.log(cepError)\n                    setAddress({});\n                } else {\n                    setCepError(false);\n                    setStreet(data.logradouro);\n                    setCity(data.localidade);\n                    setBairro(data.bairro);\n                    setState(data.uf);\n                    setAddress({\n                        cep: data.cep,\n                        street: data.logradouro,\n                        neighborhood: data.bairro,\n                        city: data.localidade,\n                        state: data.uf,\n                        number: \"\",\n                    });\n                }\n            });\n    };\n\n    useEffect(() => {\n        if (cep.length >= 8) {\n            getUserAddress();\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [cep]);\n\n    useEffect(() => {\n        if (number.length) {\n            setAddress({ ...address, number: number });\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [number]);\n\n    const handleCreateStore = (event) => {\n        event.preventDefault();\n        dispatchCreateStore(\n            user.businessId,\n            name,\n            phone,\n            category,\n            address,\n            uploadedImage,\n            () => {\n                dispatchGetAllStores(user.businessId)\n                setName('');\n                setCategory('');\n                setCep('');\n                setStreet('');\n                setNumber('');\n                setBairro('');\n                setPhone('');\n                setCity('');\n                setState('');\n                setUploadedFiles([])\n                dispatchResetImage()\n            },\n            (response) => { setCreateError(response.error); console.log(createError) }\n        );\n    };\n\n    return (\n        <div className=\"business\">\n            <div style={{ width: 1200, display: 'flex', flexWrap: 'wrap' }}>\n                <div className=\"business-list\">\n                    <div style={{ marginTop: '5%' }}>\n                        <h2 className=\"business-list-title\">Meus estabelecimentos</h2>\n                        <div className=\"business-list-container\">\n                            {store?.length\n                                ? store.map((item) => (\n                                    <React.Fragment key={item._id}>\n                                        <StoreCard\n                                            name={item.name}\n                                            category={item.category}\n                                            phone={item.phone}\n                                            street={item.address?.street}\n                                            number={item.address?.number}\n                                            neighborhood={item.address?.neighborhood}\n                                            city={item.address?.city}\n                                            state={item.address?.state}\n                                            image={item.image}\n                                            storeId={item._id}\n                                        />\n                                    </React.Fragment>\n                                ))\n                                :\n                                <div style={{ marginTop: 50 }}>\n                                    <p style={{ fontWeight: 400, color: 'grey', fontSize: 18, textAlign: 'center' }}>Nenhum item foi encontrado!</p>\n                                    <p style={{ fontWeight: 300, color: 'grey', fontSize: 14, textAlign: 'center' }}>Você pode criar seus estabelecimentos no formulário ao lado :) </p>\n                                    <img src={NoResult} style={{ width: 350, height: 270, marginTop: 50 }} />\n                                </div>\n                            }\n\n                        </div>\n                    </div>\n                </div>\n                <div className=\"business-create\">\n                    <form className=\"busines-create-form\" onSubmit={handleCreateStore}>\n                        <div >\n                            <h2 className=\"business-create-title\">Cadastrar novo estabelecimento</h2>\n                            <TextField\n                                label=\"Nome do negócio\"\n                                size=\"small\"\n                                variant=\"outlined\"\n                                onChange={(e) => setName(e.target.value)}\n                                value={name}\n                                style={{ width: 350 }}\n                            />\n                            <TextField\n                                label=\"Categoria\"\n                                select\n                                size=\"small\"\n                                variant=\"outlined\"\n                                SelectProps={{\n                                    native: true,\n                                }}\n                                style={{ width: 350, marginTop: 15 }}\n                                onChange={(e) => setCategory(e.target.value)}\n                            >\n                                <option value=\"\" defaultValue hidden></option>\n                                <option value=\"Bar\">Bar</option>\n                                <option value=\"Café\">Café</option>\n                                <option value=\"Restaurante\">Resturante</option>\n                                <option value=\"Casa Noturna\">Casa Noturna</option>\n                            </TextField>\n                            <TextField\n                                label=\"Telefone\"\n                                size=\"small\"\n                                variant=\"outlined\"\n                                style={{ width: 350, marginTop: 15 }}\n                                InputProps={{\n                                    inputComponent: PhoneMaskCustom,\n                                }}\n\n                            />\n                            <TextField\n                                label=\"CEP\"\n                                size=\"small\"\n                                variant=\"outlined\"\n                                onChange={(e) => setCep(e.target.value)}\n                                value={cep}\n                                style={{ width: 350, marginTop: 15 }}\n                                inputProps={{ maxLength: 8 }}\n                            />\n                            <div className=\"form-bussiness-adress\">\n                                <div>\n                                    <TextField\n                                        label=\"Rua\"\n                                        size=\"small\"\n                                        variant=\"outlined\"\n                                        onChange={(e) => setStreet(e.target.value)}\n                                        value={street}\n                                        style={{ width: 277, marginTop: 15, marginRight: 3 }}\n                                    />\n                                </div>\n                                <div>\n                                    <TextField\n                                        label=\"Nº\"\n                                        size=\"small\"\n                                        variant=\"outlined\"\n                                        onChange={(e) => setNumber(e.target.value)}\n                                        value={number}\n                                        style={{ width: 70, marginTop: 15 }}\n                                    />\n                                </div>\n                            </div>\n                            <div className=\"form-bussiness-adress\">\n                                <div>\n                                    <TextField\n                                        label=\"Bairro\"\n                                        size=\"small\"\n                                        variant=\"outlined\"\n                                        onChange={(e) => setBairro(e.target.value)}\n                                        value={bairro}\n                                        style={{ width: 137, marginTop: 15, marginRight: 3 }}\n                                    />\n                                </div>\n                                <div>\n                                    <TextField\n                                        label=\"Cidade\"\n                                        size=\"small\"\n                                        variant=\"outlined\"\n                                        onChange={(e) => setCity(e.target.value)}\n                                        value={city}\n                                        style={{ width: 137, marginTop: 15, marginRight: 3, marginBottom: 15 }}\n                                    />\n                                </div>\n                                <div>\n                                    <TextField\n                                        label=\"UF\"\n                                        size=\"small\"\n                                        variant=\"outlined\"\n                                        onChange={(e) => setState(e.target.value)}\n                                        value={state}\n                                        style={{ width: 70, marginTop: 15 }}\n                                    />\n                                </div>\n                            </div>\n                            <UploadImage imageUrl uploadedFiles={uploadedFiles} setUploadedFiles={setUploadedFiles} />\n                            <CustomButton name=\"Cadastrar\" id=\"business-create-button\" onClick={handleCreateStore} />\n\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\nconst mapDispatchToProps = (dispatch) => ({\n    dispatchCreateStore: (businessAccount, name, phone, category, address, image, onSuccess, onError) =>\n        dispatch(createStore({ businessAccount, name, phone, category, address, image }, onSuccess, onError)),\n    dispatchResetImage: () => dispatch(resetImage()),\n    dispatchGetAllStores: (businessAccount) => dispatch(getAllStores(businessAccount)),\n});\n\nconst mapStateToProps = (state) => ({\n    user: state.user,\n    image: state.image,\n    store: state.store\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BusinessPage);","/home/luiz/Repositories/staffnation_web/src/components/FormBusiness/index.js",[],["205","206"],"/home/luiz/Repositories/staffnation_web/src/components/UploadImage/index.js",[],"/home/luiz/Repositories/staffnation_web/src/redux/actions/ImageActions.js",[],"/home/luiz/Repositories/staffnation_web/src/redux/reducers/image/ImageReducer.js",[],"/home/luiz/Repositories/staffnation_web/src/components/InactiveButton/index.js",[],["207","208"],"/home/luiz/Repositories/staffnation_web/src/redux/reducers/store/StoreReducer.js",[],"/home/luiz/Repositories/staffnation_web/src/redux/actions/StoreActions.js",[],"/home/luiz/Repositories/staffnation_web/src/components/StoreCard/index.js",[],"/home/luiz/Repositories/staffnation_web/src/pages/CreateJobPage/index.js",[],"/home/luiz/Repositories/staffnation_web/src/pages/ListJobsPage/index.js",["209"],"import React, { useState, useEffect } from 'react'\nimport { connect } from \"react-redux\";\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport JobCard from '../../components/JobCard'\n\nimport { getAllJobs } from '../../redux/actions/JobActions'\n\nimport NoResult from '../../assets/no-result-search.png'\n\nimport './styles.css'\n\nconst ListJobsPage = ({ user, job, dispatchGetAllJobs }) => {\n    const [value, setValue] = useState(0);\n    const [openJobs, setOpenJobs] = useState(true)\n    // eslint-disable-next-line\n    const [closeJobs, setCloseJobs] = useState(false)\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    useEffect(() => {\n        dispatchGetAllJobs(user.businessId)\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    return (\n        <div className=\"list-jobs\">\n            <div style={{ display: 'block', width: 1050 }}>\n                <div style={{ flexGrow: 1, marginTop: -30 }}>\n                    <Tabs\n                        value={value}\n                        indicatorColor=\"primary\"\n                        textColor=\"primary\"\n                        onChange={handleChange}\n                        aria-label=\"disabled tabs example\"\n                        variant=\"fullWidth\"\n                        style={{ marginBottom: 20 }}\n                    >\n                        <Tab label=\"Vagas abertas\" style={{ textTransform: 'none', fontSize: '1rem' }} onClick={() => { setOpenJobs(true); setCloseJobs(false) }} />\n                        <Tab label=\"Vagas fechadas\" style={{ textTransform: 'none', fontSize: '1rem' }} onClick={() => { setOpenJobs(false); setCloseJobs(true) }} />\n                    </Tabs>\n                </div>\n                <div style={{ display: 'flex', justifyContent: 'space-between', flexWrap: 'wrap' }}>\n                    {openJobs ?\n                        job?.length\n                            ? job.map((item) => (\n                                <React.Fragment key={item._id}>\n                                    <JobCard\n                                        name={item.store?.name}\n                                        category={item.category}\n                                        payment={item.payment}\n                                        date={item.date}\n                                        timeStart={item.time.start}\n                                        timeEnd={item.time.end}\n                                        image={item.store?.image}\n                                        jobId={item._id}\n                                    />\n                                </React.Fragment>\n                            ))\n                            :\n                            <div style={{ marginTop: 50, display: 'flex', justifyContent: 'center', alignItems: 'center', width: '100%' }}>\n                                <div >\n                                    <p style={{ fontWeight: 400, color: 'grey', fontSize: 18, textAlign: 'center' }}>Nenhum item foi encontrado!</p>\n                                    <p style={{ fontWeight: 300, color: 'grey', fontSize: 14, textAlign: 'center' }}>Você pode criar novas vagas no menu anunciar :) </p>\n                                    <img src={NoResult} style={{ width: 350, height: 270, marginTop: 50 }} />\n                                </div>\n                            </div>\n                        :\n                        null\n                    }\n                </div >\n            </div >\n        </div>\n    )\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    dispatchGetAllJobs: (businessAccount) => dispatch(getAllJobs(businessAccount)),\n});\n\nconst mapStateToProps = (state) => ({\n    user: state.user,\n    job: state.job\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListJobsPage);\n","/home/luiz/Repositories/staffnation_web/src/components/JobCard/index.js",[],"/home/luiz/Repositories/staffnation_web/src/redux/reducers/job/JobReducer.js",[],"/home/luiz/Repositories/staffnation_web/src/redux/actions/JobActions.js",[],"/home/luiz/Repositories/staffnation_web/src/pages/EditStorePage/index.js",[],"/home/luiz/Repositories/staffnation_web/src/components/VerticalDrawer/index.js",[],"/home/luiz/Repositories/staffnation_web/src/pages/EditJobPage/index.js",[],"/home/luiz/Repositories/staffnation_web/src/pages/JobDetailsPage/index.js",["210","211"],"import React, { useEffect, useState } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { getJob, createAccepted, removeAccepted, createPending, removePending } from '../../redux/actions/JobActions'\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport StaffCardAccepted from '../../components/StaffCardAccepted'\nimport StaffCardPending from '../../components/StaffCardPending'\nimport NoResult from '../../assets/no-result-search.png'\n\nimport './styles.css'\n\nconst JobDetailsPage = ({\n    job,\n    dispatchGetJob,\n    dispatchCreateAccepted,\n    dispatchCreatePending,\n    dispatchRemoveAccepted,\n    dispatchRemovePending\n}) => {\n    const [value, setValue] = useState(0);\n    const [accepted, setAccepted] = useState(true)\n    const [pending, setPending] = useState(false)\n    const { jobId } = useParams()\n\n    useEffect(() => {\n        dispatchGetJob(jobId)\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    function sendPushNotification(tokenId, name, business) {\n        const data = {\n            to: tokenId,\n            title: 'Staffnation',\n            sound: 'default',\n            body: `${name}, ${business} confirmou sua candidatura! :)`\n        };\n\n        fetch('https://exp.host/--/api/v2/push/send', {\n            method: 'POST',\n            mode: 'no-cors',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json',\n                'Accept-Encoding': 'gzip, deflate',\n            },\n            body: JSON.stringify(data),\n        })\n            .then(response => response.json())\n            .then(data => {\n                console.log('Success:', data);\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n            });\n    }\n\n\n    return (\n        <div className=\"jobDetails\">\n            <div style={{ display: 'block', width: 1050 }}>\n                <div className=\"job-details-info\">\n                    <p style={{ fontSize: 20, color: '#484848', marginBottom: 12, fontWeight: 700 }}>{job[0]?.store.name}</p>\n                    <p style={{ fontSize: 12, color: '#523BE4', fontWeight: 600, textTransform: 'uppercase', marginBottom: 3 }}>Detalhes da Vaga</p>\n                    <p className=\"job-details-text\">Função: {job[0]?.category}</p>\n                    <p className=\"job-details-text\">Pagamento: R$ {job[0]?.payment.toFixed(2)}</p>\n                    <p className=\"job-details-text\">Data: {job[0]?.date}</p>\n                    <p className=\"job-details-text\">Horário: {job[0]?.time.start} às {job[0]?.time.end}</p>\n                    <p className=\"job-details-text\">Descrição: {job[0]?.description} </p>\n                    <p style={{ fontSize: 12, color: '#523BE4', fontWeight: 600, textTransform: 'uppercase', marginBottom: 3, marginTop: 15 }}>Endereço</p>\n                    <p className=\"job-details-text\">{job[0]?.store.address.street}, Nº {job[0]?.store.address.number}</p>\n                    <p className=\"job-details-text\">{job[0]?.store.address.neighborhood}, {job[0]?.store.address.city} - {job[0]?.store.address.state}</p>\n                </div>\n                <div style={{ flexGrow: 1, marginTop: 10 }}>\n                    <Tabs\n                        value={value}\n                        indicatorColor=\"primary\"\n                        textColor=\"primary\"\n                        onChange={handleChange}\n                        aria-label=\"disabled tabs example\"\n                        variant=\"fullWidth\"\n                        style={{ marginBottom: 20 }}>\n                        <Tab label=\"Equipe confirmada\" style={{ textTransform: 'none', fontSize: '1rem' }} onClick={() => { setAccepted(true); setPending(false) }} />\n                        <Tab label=\"Candidatos pendentes\" style={{ textTransform: 'none', fontSize: '1rem' }} onClick={() => { setAccepted(false); setPending(true) }} />\n                    </Tabs>\n                </div>\n                <div style={{ display: 'flex', justifyContent: 'space-between', flexWrap: 'wrap' }}>\n                    {accepted ? (\n                        job[0].applicationsAccepted.lenght >= 1\n                            ? job[0].applicationsAccepted.map((item) => (\n                                <React.Fragment key={item._id}>\n                                    <StaffCardAccepted\n                                        key={item._id}\n                                        image={item.avatar.url}\n                                        name={item.name}\n                                        rating={item.rating.toFixed(2)}\n                                        phone={item.phone}\n                                        neighborhood={item.address?.neighborhood}\n                                        city={item.address?.city}\n                                        categories={item.categories}\n                                    />\n                                </React.Fragment>\n                            ))\n                            :\n                            <div style={{ marginTop: 50, display: 'flex', justifyContent: 'center', alignItems: 'center', width: '100%' }}>\n                                <div>\n                                    <p style={{ fontWeight: 400, color: 'grey', fontSize: 18, textAlign: 'center' }}>Nenhum item foi encontrado!</p>\n                                    <p style={{ fontWeight: 300, color: 'grey', fontSize: 14, textAlign: 'center' }}>Você pode verificar os candidados pendentes :) </p>\n                                    <img src={NoResult} style={{ width: 350, height: 270, marginTop: 50 }} />\n                                </div>\n                            </div>\n\n                    ) : pending ? job[0].applicationsPending.lenght >= 1\n                        ? job[0].applicationsPending.map((item) => (\n                            <React.Fragment key={item._id}>\n                                <StaffCardPending\n                                    image={item.avatar.url}\n                                    name={item.name}\n                                    rating={item.rating.toFixed(2)}\n                                    phone={item.phone}\n                                    neighborhood={item.address?.neighborhood}\n                                    city={item.address?.city}\n                                    categories={item.categories}\n                                    handleAccepted={() => {\n                                        dispatchCreateAccepted(\n                                            item._id,\n                                            jobId,\n                                            () => {\n                                                dispatchRemovePending(item._id, jobId);\n                                                dispatchGetJob(jobId);\n                                                sendPushNotification('ExponentPushToken[m4358uHMYWMDzWrnHBAQ7k]', item.name, 'Teste')\n                                            },\n                                            (error) => console.log(error)\n                                        )\n                                    }}\n                                />\n                            </React.Fragment>\n                        ))\n                        :\n                        <div style={{ marginTop: 50, display: 'flex', justifyContent: 'center', alignItems: 'center', width: '100%' }}>\n                            <div >\n                                <p style={{ fontWeight: 400, color: 'grey', fontSize: 18, textAlign: 'center' }}>Nenhum item foi encontrado!</p>\n                                <p style={{ fontWeight: 300, color: 'grey', fontSize: 14, textAlign: 'center' }}>Essa vaga não possui nenhum candidado pendente :)</p>\n                                <img src={NoResult} style={{ width: 350, height: 270, marginTop: 50 }} />\n                            </div>\n                        </div>\n                            : null\n                    }\n                </div>\n            </div>\n        </div >\n    )\n}\nconst mapDispatchToProps = (dispatch) => ({\n    dispatchGetJob: (storeId) => dispatch(getJob(storeId)),\n    dispatchCreateAccepted: (applicationsAccepted, jobId, onSuccess, onError) =>\n        dispatch(createAccepted({ applicationsAccepted }, jobId, onSuccess, onError)),\n    dispatchCreatePending: (applicationsPending, jobId, onSuccess, onError) =>\n        dispatch(createPending({ applicationsPending }, jobId, onSuccess, onError)),\n    dispatchRemoveAccepted: (applicationsAccepted, jobId) =>\n        dispatch(removeAccepted({ applicationsAccepted }, jobId)),\n    dispatchRemovePending: (applicationsPending, jobId) =>\n        dispatch(removePending({ applicationsPending }, jobId)),\n});\n\nconst mapStateToProps = (state) => ({\n    job: state.job\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(JobDetailsPage);","/home/luiz/Repositories/staffnation_web/src/components/StaffCardAccepted/index.js",[],"/home/luiz/Repositories/staffnation_web/src/components/StaffCardPending/index.js",[],"/home/luiz/Repositories/staffnation_web/src/pages/SeachStaffPage/index.js",["212"],"import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport SearchBar from '../../components/SearchBar'\nimport StaffCardSearch from '../../components/StaffCardSearch'\n\nimport { getAllStaffs } from '../../redux/actions/StaffActions'\nimport NoResult from '../../assets/no-result-search.png'\n\n\nimport './styles.css'\n\nconst SearchStaffPage = ({ staff, job, dispatchGetAllStaffs }) => {\n    const [filteredStaff, setFilteredStaff] = useState([])\n    const [search, setSearch] = useState('');\n\n    useEffect(() => dispatchGetAllStaffs,\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [])\n\n    useEffect(() => {\n        setFilteredStaff(staff);\n    }, [setFilteredStaff, staff]);\n\n    useEffect(() => {\n        setFilteredStaff(\n            staff.filter((staff) =>\n                staff.name?.toLowerCase().includes(search.toLowerCase()) ||\n                staff.address.neighborhood?.toLowerCase().includes(search.toLowerCase()) ||\n                staff.categories[0]?.name.includes(search) ||\n                staff.categories[1]?.name.includes(search)\n            )\n        );\n    }, [staff, search]);\n\n    console.log(job)\n\n    return (\n        <div className=\"search-staff\">\n            <div className=\"search-staff-container\">\n                <SearchBar onChange={(e) => setSearch(e.target.value)} />\n                <div style={{ display: 'flex', justifyContent: 'space-between', flexWrap: 'wrap', marginTop: 15 }}>\n                    {filteredStaff?.length >= 1\n                        ? filteredStaff.map((item) => (\n                            < React.Fragment key={item._id} >\n                                <StaffCardSearch\n                                    image={item.avatar.url}\n                                    name={item.name}\n                                    rating={item.rating.toFixed(2)}\n                                    phone={item.phone}\n                                    neighborhood={item.address?.neighborhood}\n                                    city={item.address?.city}\n                                    categories={item.categories}\n                                    openJobs={job}\n                                />\n                            </React.Fragment>\n                        ))\n                        :\n                        <div style={{ marginTop: 50, display: 'flex', justifyContent: 'center', alignItems: 'center', width: '100%' }}>\n                            <div >\n                                <p style={{ fontWeight: 400, color: 'grey', fontSize: 18, textAlign: 'center' }}>Nenhum item foi encontrado!</p>\n                                <p style={{ fontWeight: 300, color: 'grey', fontSize: 14, textAlign: 'center' }}>Você pode tentar uma nova busca com termos diferentes :) </p>\n                                <img src={NoResult} style={{ width: 350, height: 270, marginTop: 50 }} />\n                            </div>\n                        </div>\n                    }\n                </div>\n            </div>\n        </div >\n    )\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    dispatchGetAllStaffs: () => dispatch(getAllStaffs()),\n});\n\nconst mapStateToProps = (state) => ({\n    staff: state.staff,\n    job: state.job\n\n})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchStaffPage)","/home/luiz/Repositories/staffnation_web/src/components/SearchBar/index.js",[],"/home/luiz/Repositories/staffnation_web/src/components/StaffCardSearch/index.js",[],"/home/luiz/Repositories/staffnation_web/src/redux/actions/StaffActions.js",[],"/home/luiz/Repositories/staffnation_web/src/redux/reducers/staff/StaffReducer.js",[],"/home/luiz/Repositories/staffnation_web/src/pages/SettingsPage/index.js",[],"/home/luiz/Repositories/staffnation_web/src/pages/FinancePage/index.js",[],"/home/luiz/Repositories/staffnation_web/src/components/LightButton/index.js",[],"/home/luiz/Repositories/staffnation_web/src/redux/reducers/business/BusinessReducer.js",[],"/home/luiz/Repositories/staffnation_web/src/redux/actions/BusinessActions.js",[],"/home/luiz/Repositories/staffnation_web/src/pages/RegisterPage/index.js",["213","214","215"],"/home/luiz/Repositories/staffnation_web/src/pages/LandingPage/index.js",[],"/home/luiz/Repositories/staffnation_web/src/components/MainHeader/index.js",[],{"ruleId":"216","replacedBy":"217"},{"ruleId":"218","replacedBy":"219"},{"ruleId":"220","severity":1,"message":"221","line":1,"column":17,"nodeType":"222","messageId":"223","endLine":1,"endColumn":25},{"ruleId":"220","severity":1,"message":"224","line":4,"column":8,"nodeType":"222","messageId":"223","endLine":4,"endColumn":16},{"ruleId":"220","severity":1,"message":"225","line":5,"column":8,"nodeType":"222","messageId":"223","endLine":5,"endColumn":20},{"ruleId":"220","severity":1,"message":"226","line":6,"column":8,"nodeType":"222","messageId":"223","endLine":6,"endColumn":19},{"ruleId":"216","replacedBy":"227"},{"ruleId":"218","replacedBy":"228"},{"ruleId":"229","severity":1,"message":"230","line":160,"column":37,"nodeType":"231","endLine":160,"endColumn":110},{"ruleId":"216","replacedBy":"232"},{"ruleId":"218","replacedBy":"233"},{"ruleId":"216","replacedBy":"234"},{"ruleId":"218","replacedBy":"235"},{"ruleId":"229","severity":1,"message":"230","line":67,"column":37,"nodeType":"231","endLine":67,"endColumn":110},{"ruleId":"229","severity":1,"message":"230","line":114,"column":37,"nodeType":"231","endLine":114,"endColumn":110},{"ruleId":"229","severity":1,"message":"230","line":149,"column":33,"nodeType":"231","endLine":149,"endColumn":106},{"ruleId":"229","severity":1,"message":"230","line":63,"column":33,"nodeType":"231","endLine":63,"endColumn":106},{"ruleId":"220","severity":1,"message":"236","line":11,"column":13,"nodeType":"222","messageId":"223","endLine":11,"endColumn":20},{"ruleId":"220","severity":1,"message":"237","line":41,"column":12,"nodeType":"222","messageId":"223","endLine":41,"endColumn":22},{"ruleId":"220","severity":1,"message":"238","line":41,"column":24,"nodeType":"222","messageId":"223","endLine":41,"endColumn":37},"no-native-reassign",["239"],"no-negated-in-lhs",["240"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'MenuIcon' is defined but never used.","'FavoriteIcon' is defined but never used.","'LoyaltyIcon' is defined but never used.",["239"],["240"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["239"],["240"],["239"],["240"],"'FiIcons' is defined but never used.","'hireNumber' is assigned a value but never used.","'setHireNumber' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]