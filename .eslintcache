[{"/home/luiz/Repositories/staffnation_web/src/index.js":"1","/home/luiz/Repositories/staffnation_web/src/containers/App.js":"2","/home/luiz/Repositories/staffnation_web/src/redux/store.js":"3","/home/luiz/Repositories/staffnation_web/src/services/api-middleware.js":"4","/home/luiz/Repositories/staffnation_web/src/redux/constants.js":"5","/home/luiz/Repositories/staffnation_web/src/pages/HomePage/index.js":"6","/home/luiz/Repositories/staffnation_web/src/redux/actions/AuthActions.js":"7","/home/luiz/Repositories/staffnation_web/src/redux/reducers/index.js":"8","/home/luiz/Repositories/staffnation_web/src/redux/reducers/user/UserReducer.js":"9","/home/luiz/Repositories/staffnation_web/src/pages/LoginPage/index.js":"10","/home/luiz/Repositories/staffnation_web/src/components/FormInput/index.js":"11","/home/luiz/Repositories/staffnation_web/src/components/CustomButton/index.js":"12","/home/luiz/Repositories/staffnation_web/src/components/Header/index.js":"13","/home/luiz/Repositories/staffnation_web/src/pages/BusinessPage/index.js":"14","/home/luiz/Repositories/staffnation_web/src/components/FormBusiness/index.js":"15","/home/luiz/Repositories/staffnation_web/src/components/UploadImage/index.js":"16","/home/luiz/Repositories/staffnation_web/src/redux/actions/ImageActions.js":"17","/home/luiz/Repositories/staffnation_web/src/redux/reducers/image/ImageReducer.js":"18","/home/luiz/Repositories/staffnation_web/src/components/InactiveButton/index.js":"19","/home/luiz/Repositories/staffnation_web/src/redux/reducers/store/StoreReducer.js":"20","/home/luiz/Repositories/staffnation_web/src/redux/actions/StoreActions.js":"21","/home/luiz/Repositories/staffnation_web/src/components/StoreCard/index.js":"22","/home/luiz/Repositories/staffnation_web/src/pages/CreateJobPage/index.js":"23","/home/luiz/Repositories/staffnation_web/src/pages/ListJobsPage/index.js":"24","/home/luiz/Repositories/staffnation_web/src/components/JobCard/index.js":"25","/home/luiz/Repositories/staffnation_web/src/redux/reducers/job/JobReducer.js":"26","/home/luiz/Repositories/staffnation_web/src/redux/actions/JobActions.js":"27","/home/luiz/Repositories/staffnation_web/src/pages/EditStorePage/index.js":"28","/home/luiz/Repositories/staffnation_web/src/components/VerticalDrawer/index.js":"29","/home/luiz/Repositories/staffnation_web/src/pages/EditJobPage/index.js":"30"},{"size":556,"mtime":1607527614148,"results":"31","hashOfConfig":"32"},{"size":1816,"mtime":1608001729369,"results":"33","hashOfConfig":"32"},{"size":619,"mtime":1607527892075,"results":"34","hashOfConfig":"32"},{"size":1309,"mtime":1607539560090,"results":"35","hashOfConfig":"32"},{"size":666,"mtime":1607980327588,"results":"36","hashOfConfig":"32"},{"size":635,"mtime":1607988632988,"results":"37","hashOfConfig":"32"},{"size":1148,"mtime":1607986619696,"results":"38","hashOfConfig":"32"},{"size":309,"mtime":1607980407076,"results":"39","hashOfConfig":"32"},{"size":519,"mtime":1607540142918,"results":"40","hashOfConfig":"32"},{"size":2366,"mtime":1607654822559,"results":"41","hashOfConfig":"32"},{"size":237,"mtime":1607538476997,"results":"42","hashOfConfig":"32"},{"size":1077,"mtime":1607649640567,"results":"43","hashOfConfig":"32"},{"size":7606,"mtime":1607541886079,"results":"44","hashOfConfig":"32"},{"size":11236,"mtime":1607992324175,"results":"45","hashOfConfig":"32"},{"size":281,"mtime":1607626831717,"results":"46","hashOfConfig":"32"},{"size":7116,"mtime":1607892137682,"results":"47","hashOfConfig":"32"},{"size":886,"mtime":1607653212122,"results":"48","hashOfConfig":"32"},{"size":408,"mtime":1607652896540,"results":"49","hashOfConfig":"32"},{"size":367,"mtime":1607655133788,"results":"50","hashOfConfig":"32"},{"size":575,"mtime":1607984808349,"results":"51","hashOfConfig":"32"},{"size":1781,"mtime":1607996373484,"results":"52","hashOfConfig":"32"},{"size":1049,"mtime":1607992548858,"results":"53","hashOfConfig":"32"},{"size":11713,"mtime":1608005618480,"results":"54","hashOfConfig":"32"},{"size":2937,"mtime":1608001842410,"results":"55","hashOfConfig":"32"},{"size":1003,"mtime":1608001766719,"results":"56","hashOfConfig":"32"},{"size":565,"mtime":1607980354830,"results":"57","hashOfConfig":"32"},{"size":1706,"mtime":1608040864556,"results":"58","hashOfConfig":"32"},{"size":10229,"mtime":1608041024239,"results":"59","hashOfConfig":"32"},{"size":7755,"mtime":1607989577193,"results":"60","hashOfConfig":"32"},{"size":12985,"mtime":1608040733034,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1y61xi5",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"64"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"64"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"64"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"64"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"64"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"64"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"64"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/luiz/Repositories/staffnation_web/src/index.js",[],["134","135"],"/home/luiz/Repositories/staffnation_web/src/containers/App.js",[],"/home/luiz/Repositories/staffnation_web/src/redux/store.js",[],"/home/luiz/Repositories/staffnation_web/src/services/api-middleware.js",[],"/home/luiz/Repositories/staffnation_web/src/redux/constants.js",[],"/home/luiz/Repositories/staffnation_web/src/pages/HomePage/index.js",["136"],"import { Home } from '@material-ui/icons';\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport { Link } from 'react-router-dom'\nimport { logoutUser } from \"../../redux/actions/AuthActions\";\n\n\nimport './styles.css'\n\nconst HomePage = ({ dispatchLogout }) => {\n    return (\n        <div className=\"home\">\n            <Link onClick={dispatchLogout}>Log out</Link>\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => ({ user: state.user });\n\nconst mapDispatchToProps = (dispatch) => ({\n    dispatchLogout: () => dispatch(logoutUser()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);","/home/luiz/Repositories/staffnation_web/src/redux/actions/AuthActions.js",[],"/home/luiz/Repositories/staffnation_web/src/redux/reducers/index.js",[],"/home/luiz/Repositories/staffnation_web/src/redux/reducers/user/UserReducer.js",[],"/home/luiz/Repositories/staffnation_web/src/pages/LoginPage/index.js",[],"/home/luiz/Repositories/staffnation_web/src/components/FormInput/index.js",[],"/home/luiz/Repositories/staffnation_web/src/components/CustomButton/index.js",[],"/home/luiz/Repositories/staffnation_web/src/components/Header/index.js",[],["137","138"],"/home/luiz/Repositories/staffnation_web/src/pages/BusinessPage/index.js",["139","140","141","142"],"import React, { useState, useEffect } from 'react';\nimport { connect } from \"react-redux\";\nimport MaskedInput from 'react-text-mask'\nimport TextField from '@material-ui/core/TextField';\nimport PropTypes from 'prop-types';\n\nimport CustomButton from '../../components/CustomButton'\nimport UploadImage from '../../components/UploadImage'\nimport StoreCard from '../../components/StoreCard'\n\nimport { createStore, getAllStores } from '../../redux/actions/StoreActions'\nimport { resetImage } from '../../redux/actions/ImageActions'\n\nimport './styles.css'\n\nfunction PhoneMaskCustom(props) {\n    const { inputRef, ...other } = props;\n\n    return (\n        <MaskedInput\n            {...other}\n            ref={(ref) => {\n                inputRef(ref ? ref.inputElement : null);\n            }}\n            mask={[\"(\", /[1-9]/, /\\d/, \")\", \" \", /\\d/, /\\d/, /\\d/, /\\d/, \"-\", /\\d/, /\\d/, /\\d/, /\\d/, /\\d/]}\n            placeholderChar={'\\u2000'}\n\n        />\n    );\n}\n\nPhoneMaskCustom.propTypes = {\n    inputRef: PropTypes.func.isRequired,\n};\n\nconst BusinessPage = ({\n    image,\n    user,\n    store,\n    dispatchCreateStore,\n    dispatchResetImage,\n    dispatchGetAllStores,\n}) => {\n    const [name, setName] = useState('')\n    const [category, setCategory] = useState('');\n    const [phone, setPhone] = useState('')\n    const [cep, setCep] = useState('')\n    const [number, setNumber] = useState('')\n    const [street, setStreet] = useState('')\n    const [city, setCity] = useState('')\n    const [bairro, setBairro] = useState('')\n    const [state, setState] = useState('')\n    const [address, setAddress] = useState({})\n    const [cepError, setCepError] = useState('')\n    const [createError, setCreateError] = useState('')\n    const [uploadedFiles, setUploadedFiles] = useState([]);\n    const uploadedImage = image.url\n\n    const [values, setValues] = React.useState({\n        textmask: '',\n        numberformat: '',\n    });\n\n    const handleChange = (event) => {\n        setValues({\n            ...values,\n            [event.target.name]: event.target.value,\n        });\n    }\n\n    useEffect(() => {\n        dispatchGetAllStores(user.businessId)\n    }, [])\n\n    const getUserAddress = () => {\n        fetch(`https://viacep.com.br/ws/${cep}/json/`)\n            .then((res) => res.json())\n            .then((data) => {\n                if (data.erro) {\n                    setCepError(true);\n                    console.log(cepError)\n                    setAddress({});\n                } else {\n                    setCepError(false);\n                    setStreet(data.logradouro);\n                    setCity(data.localidade);\n                    setBairro(data.bairro);\n                    setState(data.uf);\n                    setAddress({\n                        cep: data.cep,\n                        street: data.logradouro,\n                        neighborhood: data.bairro,\n                        city: data.localidade,\n                        state: data.uf,\n                        number: \"\",\n                    });\n                }\n            });\n    };\n\n    useEffect(() => {\n        if (cep.length >= 8) {\n            getUserAddress();\n        }\n    }, [cep]);\n\n    useEffect(() => {\n        if (number.length) {\n            setAddress({ ...address, number: number });\n        }\n    }, [number]);\n\n    const handleCreateStore = (event) => {\n        event.preventDefault();\n        dispatchCreateStore(\n            user.businessId,\n            name,\n            phone,\n            category,\n            address,\n            uploadedImage,\n            () => {\n                dispatchGetAllStores(user.businessId)\n                setName('');\n                setCategory('');\n                setCep('');\n                setStreet('');\n                setNumber('');\n                setBairro('');\n                setPhone('');\n                setCity('');\n                setState('');\n                setUploadedFiles([])\n                dispatchResetImage()\n            },\n            (response) => { setCreateError(response.error); console.log(createError) }\n        );\n    };\n\n    return (\n        <div className=\"business\">\n            <div className=\"business-list\">\n                <div className=\"business-list-container\">\n                    {store?.length\n                        ? store.map((item) => (\n                            <React.Fragment key={item._id}>\n                                <StoreCard\n                                    name={item.name}\n                                    category={item.category}\n                                    phone={item.phone}\n                                    street={item.address?.street}\n                                    number={item.address?.number}\n                                    neighborhood={item.address?.neighborhood}\n                                    city={item.address?.city}\n                                    state={item.address?.state}\n                                    image={item.image}\n                                    storeId={item._id}\n                                />\n                            </React.Fragment>\n                        ))\n                        : null}\n\n                </div>\n            </div>\n            <div className=\"business-create\">\n                <form className=\"busines-create-form\" onSubmit={handleCreateStore}>\n                    <div >\n                        <h2 className=\"business-create-title\">Cadastrar novo estabelecimento</h2>\n                        <TextField\n                            label=\"Nome do negócio\"\n                            size=\"small\"\n                            variant=\"outlined\"\n                            onChange={(e) => setName(e.target.value)}\n                            value={name}\n                            style={{ width: 350 }}\n                        />\n                        <TextField\n                            label=\"Categoria\"\n                            select\n                            size=\"small\"\n                            variant=\"outlined\"\n                            SelectProps={{\n                                native: true,\n                            }}\n                            style={{ width: 350, marginTop: 15 }}\n                            onChange={(e) => setCategory(e.target.value)}\n                        >\n                            <option value=\"\" defaultValue hidden></option>\n                            <option value=\"Bar\">Bar</option>\n                            <option value=\"Café\">Café</option>\n                            <option value=\"Restaurante\">Resturante</option>\n                            <option value=\"Casa Noturna\">Casa Noturna</option>\n                        </TextField>\n                        <TextField\n                            label=\"Telefone\"\n                            size=\"small\"\n                            variant=\"outlined\"\n                            style={{ width: 350, marginTop: 15 }}\n                            InputProps={{\n                                inputComponent: PhoneMaskCustom,\n                            }}\n\n                        />\n                        <TextField\n                            label=\"CEP\"\n                            size=\"small\"\n                            variant=\"outlined\"\n                            onChange={(e) => setCep(e.target.value)}\n                            value={cep}\n                            style={{ width: 350, marginTop: 15 }}\n                            inputProps={{ maxLength: 8 }}\n                        />\n                        <div className=\"form-bussiness-adress\">\n                            <div>\n                                <TextField\n                                    label=\"Rua\"\n                                    size=\"small\"\n                                    variant=\"outlined\"\n                                    onChange={(e) => setStreet(e.target.value)}\n                                    value={street}\n                                    style={{ width: 277, marginTop: 15, marginRight: 3 }}\n                                />\n                            </div>\n                            <div>\n                                <TextField\n                                    label=\"Nº\"\n                                    size=\"small\"\n                                    variant=\"outlined\"\n                                    onChange={(e) => setNumber(e.target.value)}\n                                    value={number}\n                                    style={{ width: 70, marginTop: 15 }}\n                                />\n                            </div>\n                        </div>\n                        <div className=\"form-bussiness-adress\">\n                            <div>\n                                <TextField\n                                    label=\"Bairro\"\n                                    size=\"small\"\n                                    variant=\"outlined\"\n                                    onChange={(e) => setBairro(e.target.value)}\n                                    value={bairro}\n                                    style={{ width: 137, marginTop: 15, marginRight: 3 }}\n                                />\n                            </div>\n                            <div>\n                                <TextField\n                                    label=\"Cidade\"\n                                    size=\"small\"\n                                    variant=\"outlined\"\n                                    onChange={(e) => setCity(e.target.value)}\n                                    value={city}\n                                    style={{ width: 137, marginTop: 15, marginRight: 3, marginBottom: 15 }}\n                                />\n                            </div>\n                            <div>\n                                <TextField\n                                    label=\"UF\"\n                                    size=\"small\"\n                                    variant=\"outlined\"\n                                    onChange={(e) => setState(e.target.value)}\n                                    value={state}\n                                    style={{ width: 70, marginTop: 15 }}\n                                />\n                            </div>\n                        </div>\n                        <UploadImage imageUrl uploadedFiles={uploadedFiles} setUploadedFiles={setUploadedFiles} />\n                        <CustomButton name=\"Cadastrar\" id=\"business-create-button\" onClick={handleCreateStore} />\n\n                    </div>\n                </form>\n            </div>\n        </div>\n    )\n}\n\n\nconst mapDispatchToProps = (dispatch) => ({\n    dispatchCreateStore: (businessAccount, name, phone, category, address, image, onSuccess, onError) =>\n        dispatch(createStore({ businessAccount, name, phone, category, address, image }, onSuccess, onError)),\n    dispatchResetImage: () => dispatch(resetImage()),\n    dispatchGetAllStores: (businessAccount) => dispatch(getAllStores(businessAccount)),\n});\n\nconst mapStateToProps = (state) => ({\n    user: state.user,\n    image: state.image,\n    store: state.store\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BusinessPage);","/home/luiz/Repositories/staffnation_web/src/components/FormBusiness/index.js",[],["143","144"],"/home/luiz/Repositories/staffnation_web/src/components/UploadImage/index.js",["145","146"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { uniqueId } from 'loadsh';\nimport filesize from 'filesize';\nimport Dropzone from 'react-dropzone';\nimport { CircularProgressbar } from 'react-circular-progressbar';\nimport { MdCheckCircle, MdError, MdLink } from 'react-icons/md';\nimport * as FiIcons from \"react-icons/fi\";\n\n\nimport {\n    uploadImage,\n    deleteImage,\n} from '../../redux/actions/ImageActions';\nimport './styles.css';\nimport 'react-circular-progressbar/dist/styles.css';\n\nconst UploadImage = ({ dispatchUploadImage, dispatchDeleteImage, uploadedFiles, setUploadedFiles }) => {\n    const [droppedFile, setDroppedFile] = useState(false);\n\n    const handleUpload = (files) => {\n        setUploadedFiles(\n            files.map((file) => ({\n                file,\n                id: uniqueId(),\n                name: file.name,\n                readableSize: filesize(file.size),\n                preview: URL.createObjectURL(file),\n                progress: file.progress,\n                uploaded: false,\n                error: false,\n                url: null,\n            }))\n        );\n        setDroppedFile(!droppedFile);\n    };\n\n    const updateFile = (id, data) => {\n        setUploadedFiles(\n            uploadedFiles.map((uploadedFiles) => {\n                return id === uploadedFiles.id\n                    ? { ...uploadedFiles, ...data }\n                    : uploadedFiles;\n            })\n        );\n    };\n\n    const handleRequest = () => {\n        const data = new FormData();\n        data.append('file', uploadedFiles[0].file);\n        dispatchUploadImage(\n            data,\n            (e) => {\n                const progress = parseInt(Math.round((e.loaded * 100) / e.total));\n                updateFile(uploadedFiles[0].id, {\n                    progress: progress,\n                });\n            },\n            (response) => {\n                updateFile(uploadedFiles[0].id, {\n                    uploaded: true,\n                    id: response._id,\n                    url: response.url,\n                });\n            },\n            () => {\n                updateFile(uploadedFiles[0].id, {\n                    error: true,\n                });\n            }\n        );\n    };\n\n    const handleDelete = async (imageKey) => {\n        dispatchDeleteImage(imageKey);\n        setUploadedFiles([]);\n    };\n\n    useEffect(() => {\n        if (uploadedFiles.length) {\n            handleRequest();\n        }\n    }, [droppedFile]);\n\n    const UploadMessage = ({ message }) => {\n        return (\n            <div className=\"image-upload__message\">\n                <p style={{ fontSize: '1rem', fontFamily: 'Roboto', fontWeight: 400, color: 'rgba(0, 0, 0, 0.54)', marginLeft: 10 }}>{message}</p>\n            </div>\n        );\n    };\n\n    const Preview = () => {\n        return (\n            <img\n                src={uploadedFiles[0].preview}\n                style={{\n                    width: 36,\n                    height: 36,\n                    borderRadius: 5,\n                    backgroundImage: `url(${uploadedFiles[0].preview})`,\n                    backgroundRepeat: 'no-repeat',\n                    backgroundSize: 'cover',\n                    backgroundPosition: '50% 50%',\n                    marginRight: 10,\n                }}\n                alt=\"\"\n            />\n        );\n    };\n\n    const FileInfo = () => {\n        return (\n            <div className=\"file-info\">\n                <Preview />\n                <div className=\"file-info__data\">\n                    <strong className=\"file-info__name\">\n                        {uploadedFiles[0].name.substr(0, 20)}\n                    </strong>\n                    <span className=\"file-info__span\">\n                        {uploadedFiles[0].readableSize}\n                        {uploadedFiles[0].uploaded && (\n                            <button\n                                className=\"file-info__button\"\n                                onClick={() => {\n                                    handleDelete(uploadedFiles[0].id);\n                                }}\n                            >\n                                Excluir\n                            </button>\n                        )}\n                    </span>\n                </div>\n            </div>\n        );\n    };\n\n    const FileList = () => {\n        return (\n            <div className=\"file-list\">\n                <li className=\"file-list__li\">\n                    <FileInfo />\n                    <div>\n                        {!uploadedFiles[0].uploaded && !uploadedFiles[0].error && (\n                            <CircularProgressbar\n                                strokeWidth={10}\n                                value={uploadedFiles[0].progress}\n                                styles={{\n                                    root: { width: 24 },\n                                    path: { stroke: '#7159c1' },\n                                }}\n                            />\n                        )}\n                        {uploadedFiles[0].url && (\n                            <a\n                                href={uploadedFiles[0].url}\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                            >\n                                <MdLink style={{ marginRight: 8 }} size={24} color=\"#222\" />\n                            </a>\n                        )}\n                        {uploadedFiles[0].uploaded && (\n                            <MdCheckCircle size={24} color=\"#78e5d5\" />\n                        )}\n                        {uploadedFiles[0].error && <MdError size={24} color=\"#e57878\" />}\n                    </div>\n                </li>\n            </div>\n        );\n    };\n\n    const renderDragMessage = (isDragActive, isDragReject) => {\n        if (!isDragActive) {\n            return <UploadMessage message=\"Adicionar imagem\" />;\n        }\n        if (isDragReject) {\n            return <UploadMessage message=\"Arquivo não suportado\" />;\n        }\n        return <UploadMessage message=\"Solte a imagem aqui\" />;\n    };\n\n    return (\n        <div className=\"upload-image__container\">\n            <Dropzone accept=\"image/*\" onDropAccepted={handleUpload}>\n                {({ getRootProps, getInputProps, isDragActive, isDragReject }) => (\n                    <div\n                        className=\"image-dropzone\"\n                        {...getRootProps()}\n                    >\n                        <input {...getInputProps()} />\n                        {renderDragMessage(isDragActive, isDragReject)}\n                    </div>\n                )}\n            </Dropzone>\n            <div>{!!uploadedFiles.length && <FileList />}</div>\n        </div>\n    );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n    dispatchUploadImage: (file, onUploadProgress, onSuccess, onError) =>\n        dispatch(uploadImage(file, onUploadProgress, onSuccess, onError)),\n    dispatchDeleteImage: (imageKey) => dispatch(deleteImage(imageKey)),\n});\n\nexport default connect(null, mapDispatchToProps)(UploadImage);","/home/luiz/Repositories/staffnation_web/src/redux/actions/ImageActions.js",[],"/home/luiz/Repositories/staffnation_web/src/redux/reducers/image/ImageReducer.js",[],"/home/luiz/Repositories/staffnation_web/src/components/InactiveButton/index.js",[],["147","148"],"/home/luiz/Repositories/staffnation_web/src/redux/reducers/store/StoreReducer.js",[],"/home/luiz/Repositories/staffnation_web/src/redux/actions/StoreActions.js",[],"/home/luiz/Repositories/staffnation_web/src/components/StoreCard/index.js",["149"],"import React from 'react'\nimport './styles.css'\nimport { Link } from 'react-router-dom'\nimport * as FiIcons from 'react-icons/fi'\n\n\nconst StoreCard = ({ name, category, phone, street, number, neighborhood, city, state, image, storeId }) => {\n    return (\n        <div className=\"store-card\">\n            <img src={image} className=\"store-image\" />\n            <div className=\"store-main-content\">\n                <p className=\"store-card-title\">{name}</p>\n                <p className=\"store-card-category\">Categoria: {category}</p>\n                <p className=\"store-card-text\">Contato: {phone}</p>\n                <p className=\"store-card-text\">{street}, {number}</p>\n                <p className=\"store-card-text\">{neighborhood}, {city} - {state}</p>\n            </div>\n            <div className=\"store-button-content\">\n                <Link className=\"store-button-edit\" to={`/edit-store/${storeId}`} >\n                    <FiIcons.FiEdit size={22} />\n                </Link>\n            </div>\n        </div>\n    )\n}\n\nexport default StoreCard","/home/luiz/Repositories/staffnation_web/src/pages/CreateJobPage/index.js",["150"],"import React, { useState, useEffect } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport CustomButton from '../../components/CustomButton'\nimport './styles.css'\n\nimport PropTypes from 'prop-types';\nimport MaskedInput from 'react-text-mask';\nimport NumberFormat from 'react-number-format';\nimport TextField from '@material-ui/core/TextField';\n\nimport { getAllStores } from '../../redux/actions/StoreActions'\nimport { createJob } from '../../redux/actions/JobActions'\n\nfunction PhoneMaskCustom(props) {\n    const { inputRef, ...other } = props;\n\n    return (\n        <MaskedInput\n            {...other}\n            ref={(ref) => {\n                inputRef(ref ? ref.inputElement : null);\n            }}\n            mask={['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\n            placeholderChar={'\\u2000'}\n        />\n    );\n}\n\nPhoneMaskCustom.propTypes = {\n    inputRef: PropTypes.func.isRequired,\n};\n\n\nfunction DateMaskCustom(props) {\n    const { inputRef, ...other } = props;\n\n    return (\n        <MaskedInput\n            {...other}\n            ref={(ref) => {\n                inputRef(ref ? ref.inputElement : null);\n            }}\n            mask={[/[0-3]/, /[0-9]/, '/', /[0-1]/, /[1-9]/, '/', /[2]/, /[0]/, /[2]/, /[0-9]/]}\n            placeholderChar={'\\u2000'}\n            placeholder=\"dd/mm/aaaa\"\n\n        />\n    );\n}\n\nDateMaskCustom.propTypes = {\n    inputRef: PropTypes.func.isRequired,\n};\n\n\nfunction TimeMskCustom(props) {\n    const { inputRef, ...other } = props;\n\n    return (\n        <MaskedInput\n            {...other}\n            ref={(ref) => {\n                inputRef(ref ? ref.inputElement : null);\n            }}\n            mask={[/^([0-2])/, /([0-9])/, ':', /[0-5]/, /[0-9]/]}\n            placeholderChar={'\\u2000'}\n            placeholder=\"hh:mm\"\n\n        />\n    );\n}\n\nTimeMskCustom.propTypes = {\n    inputRef: PropTypes.func.isRequired,\n};\n\n\nfunction NumberFormatCustom(props) {\n    const { inputRef, onChange, ...other } = props;\n\n    return (\n        <NumberFormat\n            {...other}\n            getInputRef={inputRef}\n            onValueChange={(values) => {\n                onChange({\n                    target: {\n                        name: props.name,\n                        value: values.value,\n                    },\n                });\n            }}\n            decimalSeparator=\",\"\n            decimalScale={2}\n            fixedDecimalScale\n            isNumericString\n            placeholder=\"R$ 0,00\"\n            prefix=\"R$ \"\n        />\n    );\n}\n\nNumberFormatCustom.propTypes = {\n    inputRef: PropTypes.func.isRequired,\n    name: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    maxLength: 3\n};\n\n\nconst CreateJobPage = ({ user, store, dispatchGetAllStores, dispatchCreateJob }) => {\n    const [selectedStore, setSelecteStore] = useState('')\n    const [avaliableStores, setAvaliableStores] = useState([])\n    const [category, setCategory] = useState('')\n    const [positions, setPositions] = useState('')\n    const [date, setDate] = useState('')\n    const [timeStart, setTimeStart] = useState('')\n    const [timeEnd, setTimeEnd] = useState('')\n    const time = {\n        start: timeStart,\n        end: timeEnd\n    }\n    const [description, setDescription] = useState('')\n    let history = useHistory();\n\n\n    const [values, setValues] = useState({\n        textmask: '',\n        numberformat: '',\n    });\n\n    useEffect(() => {\n        dispatchGetAllStores(user.businessId)\n        setAvaliableStores(store)\n    }, [])\n\n    const handleChange = (event) => {\n        setValues({\n            ...values,\n            [event.target.name]: event.target.value,\n        });\n    }\n\n    const handleCreateJob = (event) => {\n        event.preventDefault();\n        dispatchCreateJob(\n            user.businessId,\n            selectedStore,\n            category,\n            positions,\n            date,\n            time,\n            values.numberformat,\n            description,\n            history.push(\"/list-jobs\"),\n            error => console.log(error),\n        )\n    }\n\n\n\n    return (\n        <div className=\"createJob\">\n            <div className=\"createJob-create\">\n                <form className=\"createJob-create-form\" onSubmit={handleCreateJob}>\n                    <div className=\"createJob-create-form__container\">\n                        <h2 className=\"createJob-create-title\">Anunciar vaga de trabalho</h2>\n                        <TextField\n                            label=\"Estabelecimento\"\n                            select\n                            size=\"small\"\n                            variant=\"outlined\"\n                            SelectProps={{\n                                native: true,\n                            }}\n                            style={{ width: 350 }}\n                            onChange={(e) => setSelecteStore(e.target.value)}\n                            value={selectedStore}\n                        >\n                            <option value=\"\" defaultValue hidden></option>\n                            {avaliableStores?.length\n                                ? store.map((item) => (\n                                    <React.Fragment key={item._id}>\n                                        <option value={item._id}>{item.name}</option>\n                                    </React.Fragment>\n                                ))\n                                : null\n                            }\n                        </TextField>\n                        <TextField\n                            label=\"Função\"\n                            select\n                            size=\"small\"\n                            variant=\"outlined\"\n                            SelectProps={{\n                                native: true,\n                            }}\n                            style={{ width: 350, marginTop: 15 }}\n                            onChange={(e) => setCategory(e.target.value)}\n                            value={category}\n                        >\n                            <option value=\"\" defaultValue hidden></option>\n                            <option value=\"Bar\">Bar</option>\n                            <option value=\"Cozinha\">Cozinha</option>\n                            <option value=\"Garçom\">Garçom</option>\n                            <option value=\"Segurança\">Segurança</option>\n                            <option value=\"Limpeza\">Limpeza</option>\n                            <option value=\"Hostess\">Hostess</option>\n                        </TextField>\n                        <TextField\n                            label=\"Vagas\"\n                            select\n                            size=\"small\"\n                            variant=\"outlined\"\n                            SelectProps={{\n                                native: true,\n                            }}\n                            style={{ width: 350, marginTop: 15 }}\n                            onChange={(e) => setPositions(e.target.value)}\n                            value={positions}\n                        >\n                            <option value=\"\" defaultValue hidden></option>\n                            <option value=\"1\">1</option>\n                            <option value=\"2\">2</option>\n                            <option value=\"3\">3</option>\n                            <option value=\"4\">4</option>\n                            <option value=\"5\">5</option>\n                        </TextField>\n                        <TextField\n                            label=\"Pagamento\"\n                            name=\"numberformat\"\n                            id=\"formatted-numberformat-input\"\n                            size=\"small\"\n                            variant=\"outlined\"\n                            style={{ width: 350, marginTop: 15 }}\n                            InputProps={{\n                                inputComponent: NumberFormatCustom,\n                            }}\n                            inputProps={{\n                                maxlength: 9\n                            }}\n                            onChange={handleChange}\n                            value={values.numberformat}\n                        />\n                        <TextField\n                            label=\"Data\"\n                            size=\"small\"\n                            variant=\"outlined\"\n                            style={{ width: 350, marginTop: 15 }}\n                            InputProps={{\n                                inputComponent: DateMaskCustom,\n                            }}\n                            onChange={(e) => setDate(e.target.value)}\n                            valeu={date}\n\n                        />\n                        <div className=\"form-bussiness-adress\">\n                            <div>\n                                <TextField\n                                    label=\"Início\"\n                                    size=\"small\"\n                                    variant=\"outlined\"\n                                    style={{ width: 173.5, marginTop: 15, marginRight: 3 }}\n                                    InputProps={{\n                                        inputComponent: TimeMskCustom,\n                                    }}\n                                    onChange={(e) => setTimeStart(e.target.value)}\n                                    valeu={timeStart}\n                                />\n                            </div>\n                            <div>\n                                <TextField\n                                    label=\"Término\"\n                                    size=\"small\"\n                                    variant=\"outlined\"\n                                    style={{ width: 173.5, marginTop: 15 }}\n                                    InputProps={{\n                                        inputComponent: TimeMskCustom,\n                                    }}\n                                    onChange={(e) => setTimeEnd(e.target.value)}\n                                    valeu={timeEnd}\n                                />\n                            </div>\n                        </div>\n                        <TextField\n                            id=\"outlined-textarea\"\n                            label=\"Observações\"\n                            size=\"small\"\n                            rowsMax={4}\n                            placeholder=\"Ex: utilizar sapato preto\"\n                            multiline\n                            variant=\"outlined\"\n                            style={{ width: 350, marginTop: 15 }}\n                            inputProps={{\n                                maxlength: 152\n                            }}\n                            onChange={(e) => setDescription(e.target.value)}\n                            valeu={description}\n                        />\n                        <CustomButton name=\"Cadastrar\" id=\"createJob-create-button\" onClick={handleCreateJob} />\n                    </div>\n                </form>\n            </div>\n        </div>\n    )\n}\n\n\nconst mapDispatchToProps = (dispatch) => ({\n    dispatchGetAllStores: (businessAccount) => dispatch(getAllStores(businessAccount)),\n    dispatchCreateJob: (businessAccount, store, category, positions, date, time, payment, description, onSuccess, onError) =>\n        dispatch(createJob({ businessAccount, store, category, positions, date, time, payment, description }, onSuccess, onError))\n});\n\nconst mapStateToProps = (state) => ({\n    user: state.user,\n    store: state.store\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateJobPage);","/home/luiz/Repositories/staffnation_web/src/pages/ListJobsPage/index.js",["151","152"],"import React, { useState, useEffect } from 'react'\nimport { connect } from \"react-redux\";\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport JobCard from '../../components/JobCard'\n\nimport { getAllJobs } from '../../redux/actions/JobActions'\n\nimport './styles.css'\n\nconst ListJobsPage = ({ user, job, dispatchGetAllJobs }) => {\n    const [value, setValue] = useState(0);\n    const [openJobs, setOpenJobs] = useState(true)\n    const [closeJobs, setCloseJobs] = useState(false)\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    useEffect(() => {\n        dispatchGetAllJobs(user.businessId)\n    }, [])\n\n\n    return (\n        <div className=\"list-jobs\">\n            <div style={{ flexGrow: 1, marginTop: -50, paddingTop: 0 }}>\n                <Tabs\n                    value={value}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    onChange={handleChange}\n                    aria-label=\"disabled tabs example\"\n                    variant=\"fullWidth\"\n                >\n                    <Tab label=\"Vagas abertas\" style={{ textTransform: 'none', fontSize: '1rem' }} onClick={() => { setOpenJobs(true); setCloseJobs(false) }} />\n                    <Tab label=\"Vagas fechadas\" style={{ textTransform: 'none', fontSize: '1rem' }} onClick={() => { setOpenJobs(false); setCloseJobs(true) }} />\n                </Tabs>\n            </div>\n            {openJobs ?\n                <div className=\"list-jobs-main\" >\n                    <div className=\"list-jobs-container\">\n                        {job?.length\n                            ? job.map((item) => (\n                                <React.Fragment key={item._id}>\n                                    <JobCard\n                                        name={item.store.name}\n                                        category={item.category}\n                                        payment={item.payment}\n                                        date={item.date}\n                                        timeStart={item.time.start}\n                                        timeEnd={item.time.end}\n                                        image={item.store.image}\n                                        jobId={item._id}\n                                    />\n                                </React.Fragment>\n                            ))\n                            : null}\n\n                    </div>\n                </div>\n\n                :\n                <div>\n                    <p>Close Jobs</p>\n                </div>\n            }\n        </div >\n    )\n}\n\n\nconst mapDispatchToProps = (dispatch) => ({\n    dispatchGetAllJobs: (businessAccount) => dispatch(getAllJobs(businessAccount)),\n});\n\nconst mapStateToProps = (state) => ({\n    user: state.user,\n    job: state.job\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListJobsPage);\n","/home/luiz/Repositories/staffnation_web/src/components/JobCard/index.js",["153"],"import React from 'react'\nimport './styles.css'\nimport { Link } from 'react-router-dom'\nimport * as FiIcons from 'react-icons/fi'\n\n\nconst JobCard = ({ name, category, payment, date, timeStart, timeEnd, image, jobId }) => {\n    return (\n        <div className=\"job-card\">\n            <img src={image} className=\"job-image\" />\n            <div className=\"job-main-content\">\n                <p className=\"job-card-title\">{name}</p>\n                <p className=\"job-card-category\">Função: {category}</p>\n                <p className=\"job-card-text\">Pagamento: {payment}</p>\n                <p className=\"job-card-text\">Data: {date}</p>\n                <p className=\"job-card-text\">Horário: {timeStart} às {timeEnd}</p>\n            </div>\n            <div className=\"job-button-content\">\n                <Link className=\"job-button-edit\" to={`/edit-job/${jobId}`}>\n                    <FiIcons.FiEdit size={25} />\n                </Link>\n            </div>\n        </div>\n    )\n}\n\nexport default JobCard","/home/luiz/Repositories/staffnation_web/src/redux/reducers/job/JobReducer.js",[],"/home/luiz/Repositories/staffnation_web/src/redux/actions/JobActions.js",[],"/home/luiz/Repositories/staffnation_web/src/pages/EditStorePage/index.js",["154","155","156","157"],"import React, { useState, useEffect, useMemo } from 'react';\nimport { connect } from \"react-redux\";\nimport MaskedInput from 'react-text-mask'\nimport TextField from '@material-ui/core/TextField';\nimport PropTypes from 'prop-types';\n\nimport CustomButton from '../../components/CustomButton'\nimport UploadImage from '../../components/UploadImage'\n\nimport { getStore, updateStore } from '../../redux/actions/StoreActions'\nimport { resetImage } from '../../redux/actions/ImageActions'\nimport { useParams } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\n\n\nimport './styles.css'\n\nfunction PhoneMaskCustom(props) {\n    const { inputRef, ...other } = props;\n\n    return (\n        <MaskedInput\n            {...other}\n            ref={(ref) => {\n                inputRef(ref ? ref.inputElement : null);\n            }}\n            mask={[\"(\", /[1-9]/, /\\d/, \")\", \" \", /\\d/, /\\d/, /\\d/, /\\d/, \"-\", /\\d/, /\\d/, /\\d/, /\\d/, /\\d/]}\n            placeholderChar={'\\u2000'}\n\n        />\n    );\n}\n\nPhoneMaskCustom.propTypes = {\n    inputRef: PropTypes.func.isRequired,\n};\n\nconst EditStorePage = ({ image, store, dispatchResetImage, dispatchGetStore, dispatchUpdateStore }) => {\n    const [name, setName] = useState('')\n    const [category, setCategory] = useState('');\n    const [phone, setPhone] = useState('')\n    const [cep, setCep] = useState('')\n    const [number, setNumber] = useState('')\n    const [street, setStreet] = useState('')\n    const [city, setCity] = useState('')\n    const [bairro, setBairro] = useState('')\n    const [state, setState] = useState('')\n    const [address, setAddress] = useState({})\n    const [cepError, setCepError] = useState('')\n    const [createError, setCreateError] = useState('')\n    const [uploadedFiles, setUploadedFiles] = useState([]);\n    let uploadedImage = image.url\n    let history = useHistory();\n    const { storeId } = useParams()\n\n    useEffect(() => dispatchGetStore(storeId), [storeId,])\n\n    const editableData = store\n\n    useMemo(() => {\n        if (editableData.data) {\n            setName(editableData.data?.name);\n            setCategory(editableData.data?.category)\n            setPhone(editableData.data?.phone)\n            setCep(editableData.data?.address.cep)\n            setNumber(editableData.data?.address.number)\n            let uploadedImage = editableData.data?.image\n        }\n    }, [editableData]);\n\n    const handleUpdateStore = (event) => {\n        event.preventDefault();\n        dispatchUpdateStore(\n            name,\n            phone,\n            category,\n            address,\n            uploadedImage,\n            storeId,\n            () => {\n                history.push(\"/business\");\n                dispatchResetImage()\n            },\n            (response) => { setCreateError(response.error); console.log(createError) }\n        );\n    };\n\n\n    const getUserAddress = () => {\n        fetch(`https://viacep.com.br/ws/${cep}/json/`)\n            .then((res) => res.json())\n            .then((data) => {\n                if (data.erro) {\n                    setCepError(true);\n                    console.log(cepError)\n                    setAddress({});\n                } else {\n                    setCepError(false);\n                    setStreet(data.logradouro);\n                    setCity(data.localidade);\n                    setBairro(data.bairro);\n                    setState(data.uf);\n                    setAddress({\n                        cep: data.cep,\n                        street: data.logradouro,\n                        neighborhood: data.bairro,\n                        city: data.localidade,\n                        state: data.uf,\n                        number: \"\",\n                    });\n                }\n            });\n    };\n\n    useEffect(() => {\n        if (cep.length >= 8) {\n            getUserAddress();\n        }\n    }, [cep]);\n\n    useEffect(() => {\n        if (number.length) {\n            setAddress({ ...address, number: number });\n        }\n    }, [number]);\n\n    return (\n        <div className=\"editStore\">\n            <div className=\"editStore-create\">\n                <form className=\"busines-create-form\" onSubmit={handleUpdateStore}>\n                    <div >\n                        <h2 className=\"editStore-create-title\">Editar estabelecimento</h2>\n                        <TextField\n                            label=\"Nome do negócio\"\n                            size=\"small\"\n                            variant=\"outlined\"\n                            onChange={(e) => setName(e.target.value)}\n                            value={name}\n                            style={{ width: 350 }}\n                        />\n                        <TextField\n                            select\n                            size=\"small\"\n                            variant=\"outlined\"\n                            label=\"Categoria\"\n                            SelectProps={{\n                                native: true,\n                            }}\n                            value={category}\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            style={{ width: 350, marginTop: 15 }}\n                            onChange={(e) => setCategory(e.target.value)}\n                        >\n                            <option value=\"\" defaultValue hidden>Categoria</option>\n                            <option value=\"Bar\">Bar</option>\n                            <option value=\"Café\">Café</option>\n                            <option value=\"Restaurante\">Resturante</option>\n                            <option value=\"Casa Noturna\">Casa Noturna</option>\n                        </TextField>\n                        <TextField\n                            label=\"Telefone\"\n                            value={phone}\n                            size=\"small\"\n                            variant=\"outlined\"\n                            style={{ width: 350, marginTop: 15 }}\n                            InputProps={{\n                                inputComponent: PhoneMaskCustom,\n                            }}\n\n                        />\n                        <TextField\n                            label=\"CEP\"\n                            size=\"small\"\n                            variant=\"outlined\"\n                            onChange={(e) => setCep(e.target.value)}\n                            value={cep}\n                            style={{ width: 350, marginTop: 15 }}\n                            inputProps={{ maxLength: 8 }}\n                        />\n                        <div className=\"form-bussiness-adress\">\n                            <div>\n                                <TextField\n                                    label=\"Rua\"\n                                    size=\"small\"\n                                    variant=\"outlined\"\n                                    onChange={(e) => setStreet(e.target.value)}\n                                    value={street}\n                                    style={{ width: 277, marginTop: 15, marginRight: 3 }}\n                                />\n                            </div>\n                            <div>\n                                <TextField\n                                    label=\"Nº\"\n                                    size=\"small\"\n                                    variant=\"outlined\"\n                                    onChange={(e) => setNumber(e.target.value)}\n                                    value={number}\n                                    style={{ width: 70, marginTop: 15 }}\n                                />\n                            </div>\n                        </div>\n                        <div className=\"form-bussiness-adress\">\n                            <div>\n                                <TextField\n                                    label=\"Bairro\"\n                                    size=\"small\"\n                                    variant=\"outlined\"\n                                    onChange={(e) => setBairro(e.target.value)}\n                                    value={bairro}\n                                    style={{ width: 137, marginTop: 15, marginRight: 3 }}\n                                />\n                            </div>\n                            <div>\n                                <TextField\n                                    label=\"Cidade\"\n                                    size=\"small\"\n                                    variant=\"outlined\"\n                                    onChange={(e) => setCity(e.target.value)}\n                                    value={city}\n                                    style={{ width: 137, marginTop: 15, marginRight: 3, marginBottom: 15 }}\n                                />\n                            </div>\n                            <div>\n                                <TextField\n                                    label=\"UF\"\n                                    size=\"small\"\n                                    variant=\"outlined\"\n                                    onChange={(e) => setState(e.target.value)}\n                                    value={state}\n                                    style={{ width: 70, marginTop: 15 }}\n                                />\n                            </div>\n                        </div>\n                        <UploadImage imageUrl uploadedFiles={uploadedFiles} setUploadedFiles={setUploadedFiles} />\n                        <CustomButton name=\"Salvar\" id=\"editStore-create-button\" onClick={handleUpdateStore} />\n\n                    </div>\n                </form>\n            </div>\n        </div>\n    )\n}\n\n\nconst mapDispatchToProps = (dispatch) => ({\n    dispatchResetImage: () => dispatch(resetImage()),\n    dispatchGetStore: (storeId) => dispatch(getStore(storeId)),\n    dispatchUpdateStore: (name, phone, category, address, image, storeId, onSuccess, onError) =>\n        dispatch(updateStore({ name, phone, category, address, image }, storeId, onSuccess, onError)),\n});\n\nconst mapStateToProps = (state) => ({\n    user: state.user,\n    image: state.image,\n    store: state.store\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditStorePage);","/home/luiz/Repositories/staffnation_web/src/components/VerticalDrawer/index.js",[],"/home/luiz/Repositories/staffnation_web/src/pages/EditJobPage/index.js",["158","159","160"],{"ruleId":"161","replacedBy":"162"},{"ruleId":"163","replacedBy":"164"},{"ruleId":"165","severity":1,"message":"166","line":1,"column":10,"nodeType":"167","messageId":"168","endLine":1,"endColumn":14},{"ruleId":"161","replacedBy":"169"},{"ruleId":"163","replacedBy":"170"},{"ruleId":"165","severity":1,"message":"171","line":64,"column":11,"nodeType":"167","messageId":"168","endLine":64,"endColumn":23},{"ruleId":"172","severity":1,"message":"173","line":73,"column":8,"nodeType":"174","endLine":73,"endColumn":10,"suggestions":"175"},{"ruleId":"172","severity":1,"message":"176","line":105,"column":8,"nodeType":"174","endLine":105,"endColumn":13,"suggestions":"177"},{"ruleId":"172","severity":1,"message":"178","line":111,"column":8,"nodeType":"174","endLine":111,"endColumn":16,"suggestions":"179"},{"ruleId":"161","replacedBy":"180"},{"ruleId":"163","replacedBy":"181"},{"ruleId":"165","severity":1,"message":"182","line":8,"column":13,"nodeType":"167","messageId":"168","endLine":8,"endColumn":20},{"ruleId":"172","severity":1,"message":"183","line":83,"column":8,"nodeType":"174","endLine":83,"endColumn":21,"suggestions":"184"},{"ruleId":"161","replacedBy":"185"},{"ruleId":"163","replacedBy":"186"},{"ruleId":"187","severity":1,"message":"188","line":10,"column":13,"nodeType":"189","endLine":10,"endColumn":56},{"ruleId":"172","severity":1,"message":"190","line":136,"column":8,"nodeType":"174","endLine":136,"endColumn":10,"suggestions":"191"},{"ruleId":"165","severity":1,"message":"192","line":14,"column":12,"nodeType":"167","messageId":"168","endLine":14,"endColumn":21},{"ruleId":"172","severity":1,"message":"193","line":22,"column":8,"nodeType":"174","endLine":22,"endColumn":10,"suggestions":"194"},{"ruleId":"187","severity":1,"message":"188","line":10,"column":13,"nodeType":"189","endLine":10,"endColumn":54},{"ruleId":"172","severity":1,"message":"195","line":56,"column":48,"nodeType":"174","endLine":56,"endColumn":58,"suggestions":"196"},{"ruleId":"165","severity":1,"message":"197","line":67,"column":17,"nodeType":"167","messageId":"168","endLine":67,"endColumn":30},{"ruleId":"172","severity":1,"message":"176","line":119,"column":8,"nodeType":"174","endLine":119,"endColumn":13,"suggestions":"198"},{"ruleId":"172","severity":1,"message":"178","line":125,"column":8,"nodeType":"174","endLine":125,"endColumn":16,"suggestions":"199"},{"ruleId":"165","severity":1,"message":"200","line":14,"column":10,"nodeType":"167","messageId":"168","endLine":14,"endColumn":19},{"ruleId":"172","severity":1,"message":"201","line":142,"column":8,"nodeType":"174","endLine":142,"endColumn":10,"suggestions":"202"},{"ruleId":"172","severity":1,"message":"190","line":162,"column":8,"nodeType":"174","endLine":162,"endColumn":10,"suggestions":"203"},"no-native-reassign",["204"],"no-negated-in-lhs",["205"],"no-unused-vars","'Home' is defined but never used.","Identifier","unusedVar",["204"],["205"],"'handleChange' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatchGetAllStores' and 'user.businessId'. Either include them or remove the dependency array. If 'dispatchGetAllStores' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["206"],"React Hook useEffect has a missing dependency: 'getUserAddress'. Either include it or remove the dependency array.",["207"],"React Hook useEffect has a missing dependency: 'address'. Either include it or remove the dependency array. You can also do a functional update 'setAddress(a => ...)' if you only need 'address' in the 'setAddress' call.",["208"],["204"],["205"],"'FiIcons' is defined but never used.","React Hook useEffect has missing dependencies: 'handleRequest' and 'uploadedFiles.length'. Either include them or remove the dependency array.",["209"],["204"],["205"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'dispatchGetAllStores', 'store', and 'user.businessId'. Either include them or remove the dependency array. If 'dispatchGetAllStores' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["210"],"'closeJobs' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatchGetAllJobs' and 'user.businessId'. Either include them or remove the dependency array. If 'dispatchGetAllJobs' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["211"],"React Hook useEffect has a missing dependency: 'dispatchGetStore'. Either include it or remove the dependency array. If 'dispatchGetStore' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["212"],"'uploadedImage' is assigned a value but never used.",["213"],["214"],"'createJob' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatchGetJob' and 'jobId'. Either include them or remove the dependency array. If 'dispatchGetJob' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["215"],["216"],"no-global-assign","no-unsafe-negation",{"desc":"217","fix":"218"},{"desc":"219","fix":"220"},{"desc":"221","fix":"222"},{"desc":"223","fix":"224"},{"desc":"225","fix":"226"},{"desc":"227","fix":"228"},{"desc":"229","fix":"230"},{"desc":"219","fix":"231"},{"desc":"221","fix":"232"},{"desc":"233","fix":"234"},{"desc":"225","fix":"235"},"Update the dependencies array to be: [dispatchGetAllStores, user.businessId]",{"range":"236","text":"237"},"Update the dependencies array to be: [cep, getUserAddress]",{"range":"238","text":"239"},"Update the dependencies array to be: [address, number]",{"range":"240","text":"241"},"Update the dependencies array to be: [droppedFile, handleRequest, uploadedFiles.length]",{"range":"242","text":"243"},"Update the dependencies array to be: [dispatchGetAllStores, store, user.businessId]",{"range":"244","text":"245"},"Update the dependencies array to be: [dispatchGetAllJobs, user.businessId]",{"range":"246","text":"247"},"Update the dependencies array to be: [dispatchGetStore, storeId]",{"range":"248","text":"249"},{"range":"250","text":"239"},{"range":"251","text":"241"},"Update the dependencies array to be: [dispatchGetJob, jobId]",{"range":"252","text":"253"},{"range":"254","text":"245"},[2142,2144],"[dispatchGetAllStores, user.businessId]",[3159,3164],"[cep, getUserAddress]",[3292,3300],"[address, number]",[2490,2503],"[droppedFile, handleRequest, uploadedFiles.length]",[3581,3583],"[dispatchGetAllStores, store, user.businessId]",[674,676],"[dispatchGetAllJobs, user.businessId]",[1935,1945],"[dispatchGetStore, storeId]",[3845,3850],[3978,3986],[3840,3842],"[dispatchGetJob, jobId]",[4487,4489]]