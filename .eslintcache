[{"/home/luiz/Repositories/staffnation_web/src/index.js":"1","/home/luiz/Repositories/staffnation_web/src/containers/App.js":"2","/home/luiz/Repositories/staffnation_web/src/redux/store.js":"3","/home/luiz/Repositories/staffnation_web/src/services/api-middleware.js":"4","/home/luiz/Repositories/staffnation_web/src/redux/constants.js":"5","/home/luiz/Repositories/staffnation_web/src/pages/HomePage/index.js":"6","/home/luiz/Repositories/staffnation_web/src/redux/actions/AuthActions.js":"7","/home/luiz/Repositories/staffnation_web/src/redux/reducers/index.js":"8","/home/luiz/Repositories/staffnation_web/src/redux/reducers/user/UserReducer.js":"9","/home/luiz/Repositories/staffnation_web/src/pages/LoginPage/index.js":"10","/home/luiz/Repositories/staffnation_web/src/components/FormInput/index.js":"11","/home/luiz/Repositories/staffnation_web/src/components/CustomButton/index.js":"12","/home/luiz/Repositories/staffnation_web/src/components/Header/index.js":"13","/home/luiz/Repositories/staffnation_web/src/pages/BusinessPage/index.js":"14","/home/luiz/Repositories/staffnation_web/src/components/FormBusiness/index.js":"15","/home/luiz/Repositories/staffnation_web/src/components/UploadImage/index.js":"16","/home/luiz/Repositories/staffnation_web/src/redux/actions/ImageActions.js":"17","/home/luiz/Repositories/staffnation_web/src/redux/reducers/image/ImageReducer.js":"18","/home/luiz/Repositories/staffnation_web/src/components/InactiveButton/index.js":"19","/home/luiz/Repositories/staffnation_web/src/redux/reducers/store/StoreReducer.js":"20","/home/luiz/Repositories/staffnation_web/src/redux/actions/StoreActions.js":"21","/home/luiz/Repositories/staffnation_web/src/components/StoreCard/index.js":"22","/home/luiz/Repositories/staffnation_web/src/pages/CreateJobPage/index.js":"23","/home/luiz/Repositories/staffnation_web/src/pages/ListJobsPage/index.js":"24","/home/luiz/Repositories/staffnation_web/src/components/JobCard/index.js":"25","/home/luiz/Repositories/staffnation_web/src/redux/reducers/job/JobReducer.js":"26","/home/luiz/Repositories/staffnation_web/src/redux/actions/JobActions.js":"27","/home/luiz/Repositories/staffnation_web/src/pages/EditStorePage/index.js":"28","/home/luiz/Repositories/staffnation_web/src/components/VerticalDrawer/index.js":"29","/home/luiz/Repositories/staffnation_web/src/pages/EditJobPage/index.js":"30","/home/luiz/Repositories/staffnation_web/src/pages/JobDetailsPage/index.js":"31","/home/luiz/Repositories/staffnation_web/src/components/StaffCardAccepted/index.js":"32","/home/luiz/Repositories/staffnation_web/src/components/StaffCardPending/index.js":"33","/home/luiz/Repositories/staffnation_web/src/pages/SeachStaffPage/index.js":"34","/home/luiz/Repositories/staffnation_web/src/components/SearchBar/index.js":"35","/home/luiz/Repositories/staffnation_web/src/components/StaffCardSearch/index.js":"36","/home/luiz/Repositories/staffnation_web/src/redux/actions/StaffActions.js":"37","/home/luiz/Repositories/staffnation_web/src/redux/reducers/staff/StaffReducer.js":"38","/home/luiz/Repositories/staffnation_web/src/pages/SettingsPage/index.js":"39","/home/luiz/Repositories/staffnation_web/src/pages/FinancePage/index.js":"40","/home/luiz/Repositories/staffnation_web/src/components/LightButton/index.js":"41","/home/luiz/Repositories/staffnation_web/src/redux/reducers/business/BusinessReducer.js":"42","/home/luiz/Repositories/staffnation_web/src/redux/actions/BusinessActions.js":"43"},{"size":556,"mtime":1607527614148,"results":"44","hashOfConfig":"45"},{"size":2316,"mtime":1608212529988,"results":"46","hashOfConfig":"45"},{"size":619,"mtime":1607527892075,"results":"47","hashOfConfig":"45"},{"size":1309,"mtime":1607539560090,"results":"48","hashOfConfig":"45"},{"size":1024,"mtime":1608221289163,"results":"49","hashOfConfig":"45"},{"size":508,"mtime":1608219627923,"results":"50","hashOfConfig":"45"},{"size":1148,"mtime":1607986619696,"results":"51","hashOfConfig":"45"},{"size":425,"mtime":1608219623468,"results":"52","hashOfConfig":"45"},{"size":519,"mtime":1607540142918,"results":"53","hashOfConfig":"45"},{"size":2366,"mtime":1607654822559,"results":"54","hashOfConfig":"45"},{"size":237,"mtime":1607538476997,"results":"55","hashOfConfig":"45"},{"size":1077,"mtime":1607649640567,"results":"56","hashOfConfig":"45"},{"size":7606,"mtime":1607541886079,"results":"57","hashOfConfig":"45"},{"size":11587,"mtime":1608430065715,"results":"58","hashOfConfig":"45"},{"size":281,"mtime":1607626831717,"results":"59","hashOfConfig":"45"},{"size":7072,"mtime":1608429927694,"results":"60","hashOfConfig":"45"},{"size":886,"mtime":1607653212122,"results":"61","hashOfConfig":"45"},{"size":408,"mtime":1607652896540,"results":"62","hashOfConfig":"45"},{"size":367,"mtime":1607655133788,"results":"63","hashOfConfig":"45"},{"size":575,"mtime":1607984808349,"results":"64","hashOfConfig":"45"},{"size":1781,"mtime":1607996373484,"results":"65","hashOfConfig":"45"},{"size":1056,"mtime":1608429825909,"results":"66","hashOfConfig":"45"},{"size":11713,"mtime":1608156293944,"results":"67","hashOfConfig":"45"},{"size":3037,"mtime":1608209761004,"results":"68","hashOfConfig":"45"},{"size":1334,"mtime":1608429628778,"results":"69","hashOfConfig":"45"},{"size":565,"mtime":1607980354830,"results":"70","hashOfConfig":"45"},{"size":3447,"mtime":1608147579341,"results":"71","hashOfConfig":"45"},{"size":10229,"mtime":1608041024239,"results":"72","hashOfConfig":"45"},{"size":7770,"mtime":1608212572924,"results":"73","hashOfConfig":"45"},{"size":12956,"mtime":1608156660538,"results":"74","hashOfConfig":"45"},{"size":7686,"mtime":1608429517339,"results":"75","hashOfConfig":"45"},{"size":2572,"mtime":1608429703813,"results":"76","hashOfConfig":"45"},{"size":2164,"mtime":1608429772223,"results":"77","hashOfConfig":"45"},{"size":2215,"mtime":1608211624598,"results":"78","hashOfConfig":"45"},{"size":607,"mtime":1608429674871,"results":"79","hashOfConfig":"45"},{"size":1775,"mtime":1608429811923,"results":"80","hashOfConfig":"45"},{"size":423,"mtime":1608159829269,"results":"81","hashOfConfig":"45"},{"size":262,"mtime":1608160656819,"results":"82","hashOfConfig":"45"},{"size":5617,"mtime":1608221539392,"results":"83","hashOfConfig":"45"},{"size":176,"mtime":1608212459797,"results":"84","hashOfConfig":"45"},{"size":1079,"mtime":1608218526257,"results":"85","hashOfConfig":"45"},{"size":259,"mtime":1608219590661,"results":"86","hashOfConfig":"45"},{"size":757,"mtime":1608221270427,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"1y61xi5",{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"90"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"90"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"90"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"90"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"90"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"90"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"90"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"/home/luiz/Repositories/staffnation_web/src/index.js",[],["185","186"],"/home/luiz/Repositories/staffnation_web/src/containers/App.js",[],"/home/luiz/Repositories/staffnation_web/src/redux/store.js",[],"/home/luiz/Repositories/staffnation_web/src/services/api-middleware.js",[],"/home/luiz/Repositories/staffnation_web/src/redux/constants.js",[],"/home/luiz/Repositories/staffnation_web/src/pages/HomePage/index.js",["187","188","189"],"import { Home } from '@material-ui/icons';\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport { Link } from 'react-router-dom'\nimport { logoutUser } from \"../../redux/actions/AuthActions\";\n\nimport './styles.css'\n\nconst HomePage = () => {\n    return (\n        <div className=\"home\">\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => ({ user: state.user });\n\nconst mapDispatchToProps = (dispatch) => ({\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);","/home/luiz/Repositories/staffnation_web/src/redux/actions/AuthActions.js",[],"/home/luiz/Repositories/staffnation_web/src/redux/reducers/index.js",[],"/home/luiz/Repositories/staffnation_web/src/redux/reducers/user/UserReducer.js",[],"/home/luiz/Repositories/staffnation_web/src/pages/LoginPage/index.js",[],"/home/luiz/Repositories/staffnation_web/src/components/FormInput/index.js",[],"/home/luiz/Repositories/staffnation_web/src/components/CustomButton/index.js",[],"/home/luiz/Repositories/staffnation_web/src/components/Header/index.js",[],["190","191"],"/home/luiz/Repositories/staffnation_web/src/pages/BusinessPage/index.js",["192","193","194"],"/home/luiz/Repositories/staffnation_web/src/components/FormBusiness/index.js",[],["195","196"],"/home/luiz/Repositories/staffnation_web/src/components/UploadImage/index.js",["197"],"/home/luiz/Repositories/staffnation_web/src/redux/actions/ImageActions.js",[],"/home/luiz/Repositories/staffnation_web/src/redux/reducers/image/ImageReducer.js",[],"/home/luiz/Repositories/staffnation_web/src/components/InactiveButton/index.js",[],["198","199"],"/home/luiz/Repositories/staffnation_web/src/redux/reducers/store/StoreReducer.js",[],"/home/luiz/Repositories/staffnation_web/src/redux/actions/StoreActions.js",[],"/home/luiz/Repositories/staffnation_web/src/components/StoreCard/index.js",[],"/home/luiz/Repositories/staffnation_web/src/pages/CreateJobPage/index.js",["200"],"import React, { useState, useEffect } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport CustomButton from '../../components/CustomButton'\nimport './styles.css'\n\nimport PropTypes from 'prop-types';\nimport MaskedInput from 'react-text-mask';\nimport NumberFormat from 'react-number-format';\nimport TextField from '@material-ui/core/TextField';\n\nimport { getAllStores } from '../../redux/actions/StoreActions'\nimport { createJob } from '../../redux/actions/JobActions'\n\nfunction PhoneMaskCustom(props) {\n    const { inputRef, ...other } = props;\n\n    return (\n        <MaskedInput\n            {...other}\n            ref={(ref) => {\n                inputRef(ref ? ref.inputElement : null);\n            }}\n            mask={['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\n            placeholderChar={'\\u2000'}\n        />\n    );\n}\n\nPhoneMaskCustom.propTypes = {\n    inputRef: PropTypes.func.isRequired,\n};\n\n\nfunction DateMaskCustom(props) {\n    const { inputRef, ...other } = props;\n\n    return (\n        <MaskedInput\n            {...other}\n            ref={(ref) => {\n                inputRef(ref ? ref.inputElement : null);\n            }}\n            mask={[/[0-3]/, /[0-9]/, '/', /[0-1]/, /[1-9]/, '/', /[2]/, /[0]/, /[2]/, /[0-9]/]}\n            placeholderChar={'\\u2000'}\n            placeholder=\"dd/mm/aaaa\"\n\n        />\n    );\n}\n\nDateMaskCustom.propTypes = {\n    inputRef: PropTypes.func.isRequired,\n};\n\n\nfunction TimeMskCustom(props) {\n    const { inputRef, ...other } = props;\n\n    return (\n        <MaskedInput\n            {...other}\n            ref={(ref) => {\n                inputRef(ref ? ref.inputElement : null);\n            }}\n            mask={[/^([0-2])/, /([0-9])/, ':', /[0-5]/, /[0-9]/]}\n            placeholderChar={'\\u2000'}\n            placeholder=\"hh:mm\"\n\n        />\n    );\n}\n\nTimeMskCustom.propTypes = {\n    inputRef: PropTypes.func.isRequired,\n};\n\n\nfunction NumberFormatCustom(props) {\n    const { inputRef, onChange, ...other } = props;\n\n    return (\n        <NumberFormat\n            {...other}\n            getInputRef={inputRef}\n            onValueChange={(values) => {\n                onChange({\n                    target: {\n                        name: props.name,\n                        value: values.value,\n                    },\n                });\n            }}\n            decimalSeparator=\",\"\n            decimalScale={2}\n            fixedDecimalScale\n            isNumericString\n            placeholder=\"R$ 0,00\"\n            prefix=\"R$ \"\n        />\n    );\n}\n\nNumberFormatCustom.propTypes = {\n    inputRef: PropTypes.func.isRequired,\n    name: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    maxLength: 3\n};\n\n\nconst CreateJobPage = ({ user, store, dispatchGetAllStores, dispatchCreateJob }) => {\n    const [selectedStore, setSelecteStore] = useState('')\n    const [avaliableStores, setAvaliableStores] = useState([])\n    const [category, setCategory] = useState('')\n    const [positions, setPositions] = useState('')\n    const [date, setDate] = useState('')\n    const [timeStart, setTimeStart] = useState('')\n    const [timeEnd, setTimeEnd] = useState('')\n    const time = {\n        start: timeStart,\n        end: timeEnd\n    }\n    const [description, setDescription] = useState('')\n    let history = useHistory();\n\n\n    const [values, setValues] = useState({\n        textmask: '',\n        numberformat: '',\n    });\n\n    useEffect(() => {\n        dispatchGetAllStores(user.businessId)\n        setAvaliableStores(store)\n    }, [])\n\n    const handleChange = (event) => {\n        setValues({\n            ...values,\n            [event.target.name]: event.target.value,\n        });\n    }\n\n    const handleCreateJob = (event) => {\n        event.preventDefault();\n        dispatchCreateJob(\n            user.businessId,\n            selectedStore,\n            category,\n            positions,\n            date,\n            time,\n            values.numberformat,\n            description,\n            history.push(\"/list-jobs\"),\n            error => console.log(error),\n        )\n    }\n\n\n\n    return (\n        <div className=\"createJob\">\n            <div className=\"createJob-create\">\n                <form className=\"createJob-create-form\" onSubmit={handleCreateJob}>\n                    <div className=\"createJob-create-form__container\">\n                        <h2 className=\"createJob-create-title\">Anunciar vaga de trabalho</h2>\n                        <TextField\n                            label=\"Estabelecimento\"\n                            select\n                            size=\"small\"\n                            variant=\"outlined\"\n                            SelectProps={{\n                                native: true,\n                            }}\n                            style={{ width: 350 }}\n                            onChange={(e) => setSelecteStore(e.target.value)}\n                            value={selectedStore}\n                        >\n                            <option value=\"\" defaultValue hidden></option>\n                            {avaliableStores?.length\n                                ? store.map((item) => (\n                                    <React.Fragment key={item._id}>\n                                        <option value={item._id}>{item.name}</option>\n                                    </React.Fragment>\n                                ))\n                                : null\n                            }\n                        </TextField>\n                        <TextField\n                            label=\"Função\"\n                            select\n                            size=\"small\"\n                            variant=\"outlined\"\n                            SelectProps={{\n                                native: true,\n                            }}\n                            style={{ width: 350, marginTop: 15 }}\n                            onChange={(e) => setCategory(e.target.value)}\n                            value={category}\n                        >\n                            <option value=\"\" defaultValue hidden></option>\n                            <option value=\"Bar\">Bar</option>\n                            <option value=\"Cozinha\">Cozinha</option>\n                            <option value=\"Garçom\">Garçom</option>\n                            <option value=\"Segurança\">Segurança</option>\n                            <option value=\"Limpeza\">Limpeza</option>\n                            <option value=\"Hostess\">Hostess</option>\n                        </TextField>\n                        <TextField\n                            label=\"Vagas\"\n                            select\n                            size=\"small\"\n                            variant=\"outlined\"\n                            SelectProps={{\n                                native: true,\n                            }}\n                            style={{ width: 350, marginTop: 15 }}\n                            onChange={(e) => setPositions(e.target.value)}\n                            value={positions}\n                        >\n                            <option value=\"\" defaultValue hidden></option>\n                            <option value=\"1\">1</option>\n                            <option value=\"2\">2</option>\n                            <option value=\"3\">3</option>\n                            <option value=\"4\">4</option>\n                            <option value=\"5\">5</option>\n                        </TextField>\n                        <TextField\n                            label=\"Pagamento\"\n                            name=\"numberformat\"\n                            id=\"formatted-numberformat-input\"\n                            size=\"small\"\n                            variant=\"outlined\"\n                            style={{ width: 350, marginTop: 15 }}\n                            InputProps={{\n                                inputComponent: NumberFormatCustom,\n                            }}\n                            inputProps={{\n                                maxlength: 9\n                            }}\n                            onChange={handleChange}\n                            value={values.numberformat}\n                        />\n                        <TextField\n                            label=\"Data\"\n                            size=\"small\"\n                            variant=\"outlined\"\n                            style={{ width: 350, marginTop: 15 }}\n                            InputProps={{\n                                inputComponent: DateMaskCustom,\n                            }}\n                            onChange={(e) => setDate(e.target.value)}\n                            valeu={date}\n\n                        />\n                        <div className=\"form-bussiness-adress\">\n                            <div>\n                                <TextField\n                                    label=\"Início\"\n                                    size=\"small\"\n                                    variant=\"outlined\"\n                                    style={{ width: 173.5, marginTop: 15, marginRight: 3 }}\n                                    InputProps={{\n                                        inputComponent: TimeMskCustom,\n                                    }}\n                                    onChange={(e) => setTimeStart(e.target.value)}\n                                    valeu={timeStart}\n                                />\n                            </div>\n                            <div>\n                                <TextField\n                                    label=\"Término\"\n                                    size=\"small\"\n                                    variant=\"outlined\"\n                                    style={{ width: 173.5, marginTop: 15 }}\n                                    InputProps={{\n                                        inputComponent: TimeMskCustom,\n                                    }}\n                                    onChange={(e) => setTimeEnd(e.target.value)}\n                                    valeu={timeEnd}\n                                />\n                            </div>\n                        </div>\n                        <TextField\n                            id=\"outlined-textarea\"\n                            label=\"Observações\"\n                            size=\"small\"\n                            rowsMax={4}\n                            placeholder=\"Ex: utilizar sapato preto\"\n                            multiline\n                            variant=\"outlined\"\n                            style={{ width: 350, marginTop: 15 }}\n                            inputProps={{\n                                maxlength: 152\n                            }}\n                            onChange={(e) => setDescription(e.target.value)}\n                            valeu={description}\n                        />\n                        <CustomButton name=\"Cadastrar\" id=\"createJob-create-button\" onClick={handleCreateJob} />\n                    </div>\n                </form>\n            </div>\n        </div>\n    )\n}\n\n\nconst mapDispatchToProps = (dispatch) => ({\n    dispatchGetAllStores: (businessAccount) => dispatch(getAllStores(businessAccount)),\n    dispatchCreateJob: (businessAccount, store, category, positions, date, time, payment, description, onSuccess, onError) =>\n        dispatch(createJob({ businessAccount, store, category, positions, date, time, payment, description }, onSuccess, onError))\n});\n\nconst mapStateToProps = (state) => ({\n    user: state.user,\n    store: state.store\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateJobPage);","/home/luiz/Repositories/staffnation_web/src/pages/ListJobsPage/index.js",["201","202"],"import React, { useState, useEffect } from 'react'\nimport { connect } from \"react-redux\";\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport JobCard from '../../components/JobCard'\n\nimport { getAllJobs } from '../../redux/actions/JobActions'\n\nimport './styles.css'\n\nconst ListJobsPage = ({ user, job, dispatchGetAllJobs }) => {\n    const [value, setValue] = useState(0);\n    const [openJobs, setOpenJobs] = useState(true)\n    const [closeJobs, setCloseJobs] = useState(false)\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    useEffect(() => {\n        dispatchGetAllJobs(user.businessId)\n    }, [])\n\n    return (\n        <div className=\"list-jobs\">\n            <div style={{ display: 'block', width: 1050 }}>\n                <div style={{ flexGrow: 1, marginTop: -30 }}>\n                    <Tabs\n                        value={value}\n                        indicatorColor=\"primary\"\n                        textColor=\"primary\"\n                        onChange={handleChange}\n                        aria-label=\"disabled tabs example\"\n                        variant=\"fullWidth\"\n                        style={{ marginBottom: 20 }}\n                    >\n                        <Tab label=\"Vagas abertas\" style={{ textTransform: 'none', fontSize: '1rem' }} onClick={() => { setOpenJobs(true); setCloseJobs(false) }} />\n                        <Tab label=\"Vagas fechadas\" style={{ textTransform: 'none', fontSize: '1rem' }} onClick={() => { setOpenJobs(false); setCloseJobs(true) }} />\n                    </Tabs>\n                </div>\n                <div style={{ display: 'flex', justifyContent: 'space-between', flexWrap: 'wrap' }}>\n                    {openJobs ?\n                        job?.length\n                            ? job.map((item) => (\n                                <React.Fragment key={item._id}>\n                                    <JobCard\n                                        name={item.store.name}\n                                        category={item.category}\n                                        payment={item.payment}\n                                        date={item.date}\n                                        timeStart={item.time.start}\n                                        timeEnd={item.time.end}\n                                        image={item.store.image}\n                                        jobId={item._id}\n                                    />\n                                </React.Fragment>\n                            ))\n                            : null\n                        :\n                        null\n                    }\n                </div >\n            </div >\n        </div>\n    )\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    dispatchGetAllJobs: (businessAccount) => dispatch(getAllJobs(businessAccount)),\n});\n\nconst mapStateToProps = (state) => ({\n    user: state.user,\n    job: state.job\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListJobsPage);\n","/home/luiz/Repositories/staffnation_web/src/components/JobCard/index.js",[],"/home/luiz/Repositories/staffnation_web/src/redux/reducers/job/JobReducer.js",[],"/home/luiz/Repositories/staffnation_web/src/redux/actions/JobActions.js",[],"/home/luiz/Repositories/staffnation_web/src/pages/EditStorePage/index.js",["203","204","205","206"],"import React, { useState, useEffect, useMemo } from 'react';\nimport { connect } from \"react-redux\";\nimport MaskedInput from 'react-text-mask'\nimport TextField from '@material-ui/core/TextField';\nimport PropTypes from 'prop-types';\n\nimport CustomButton from '../../components/CustomButton'\nimport UploadImage from '../../components/UploadImage'\n\nimport { getStore, updateStore } from '../../redux/actions/StoreActions'\nimport { resetImage } from '../../redux/actions/ImageActions'\nimport { useParams } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\n\n\nimport './styles.css'\n\nfunction PhoneMaskCustom(props) {\n    const { inputRef, ...other } = props;\n\n    return (\n        <MaskedInput\n            {...other}\n            ref={(ref) => {\n                inputRef(ref ? ref.inputElement : null);\n            }}\n            mask={[\"(\", /[1-9]/, /\\d/, \")\", \" \", /\\d/, /\\d/, /\\d/, /\\d/, \"-\", /\\d/, /\\d/, /\\d/, /\\d/, /\\d/]}\n            placeholderChar={'\\u2000'}\n\n        />\n    );\n}\n\nPhoneMaskCustom.propTypes = {\n    inputRef: PropTypes.func.isRequired,\n};\n\nconst EditStorePage = ({ image, store, dispatchResetImage, dispatchGetStore, dispatchUpdateStore }) => {\n    const [name, setName] = useState('')\n    const [category, setCategory] = useState('');\n    const [phone, setPhone] = useState('')\n    const [cep, setCep] = useState('')\n    const [number, setNumber] = useState('')\n    const [street, setStreet] = useState('')\n    const [city, setCity] = useState('')\n    const [bairro, setBairro] = useState('')\n    const [state, setState] = useState('')\n    const [address, setAddress] = useState({})\n    const [cepError, setCepError] = useState('')\n    const [createError, setCreateError] = useState('')\n    const [uploadedFiles, setUploadedFiles] = useState([]);\n    let uploadedImage = image.url\n    let history = useHistory();\n    const { storeId } = useParams()\n\n    useEffect(() => dispatchGetStore(storeId), [storeId,])\n\n    const editableData = store\n\n    useMemo(() => {\n        if (editableData.data) {\n            setName(editableData.data?.name);\n            setCategory(editableData.data?.category)\n            setPhone(editableData.data?.phone)\n            setCep(editableData.data?.address.cep)\n            setNumber(editableData.data?.address.number)\n            let uploadedImage = editableData.data?.image\n        }\n    }, [editableData]);\n\n    const handleUpdateStore = (event) => {\n        event.preventDefault();\n        dispatchUpdateStore(\n            name,\n            phone,\n            category,\n            address,\n            uploadedImage,\n            storeId,\n            () => {\n                history.push(\"/business\");\n                dispatchResetImage()\n            },\n            (response) => { setCreateError(response.error); console.log(createError) }\n        );\n    };\n\n\n    const getUserAddress = () => {\n        fetch(`https://viacep.com.br/ws/${cep}/json/`)\n            .then((res) => res.json())\n            .then((data) => {\n                if (data.erro) {\n                    setCepError(true);\n                    console.log(cepError)\n                    setAddress({});\n                } else {\n                    setCepError(false);\n                    setStreet(data.logradouro);\n                    setCity(data.localidade);\n                    setBairro(data.bairro);\n                    setState(data.uf);\n                    setAddress({\n                        cep: data.cep,\n                        street: data.logradouro,\n                        neighborhood: data.bairro,\n                        city: data.localidade,\n                        state: data.uf,\n                        number: \"\",\n                    });\n                }\n            });\n    };\n\n    useEffect(() => {\n        if (cep.length >= 8) {\n            getUserAddress();\n        }\n    }, [cep]);\n\n    useEffect(() => {\n        if (number.length) {\n            setAddress({ ...address, number: number });\n        }\n    }, [number]);\n\n    return (\n        <div className=\"editStore\">\n            <div className=\"editStore-create\">\n                <form className=\"busines-create-form\" onSubmit={handleUpdateStore}>\n                    <div >\n                        <h2 className=\"editStore-create-title\">Editar estabelecimento</h2>\n                        <TextField\n                            label=\"Nome do negócio\"\n                            size=\"small\"\n                            variant=\"outlined\"\n                            onChange={(e) => setName(e.target.value)}\n                            value={name}\n                            style={{ width: 350 }}\n                        />\n                        <TextField\n                            select\n                            size=\"small\"\n                            variant=\"outlined\"\n                            label=\"Categoria\"\n                            SelectProps={{\n                                native: true,\n                            }}\n                            value={category}\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            style={{ width: 350, marginTop: 15 }}\n                            onChange={(e) => setCategory(e.target.value)}\n                        >\n                            <option value=\"\" defaultValue hidden>Categoria</option>\n                            <option value=\"Bar\">Bar</option>\n                            <option value=\"Café\">Café</option>\n                            <option value=\"Restaurante\">Resturante</option>\n                            <option value=\"Casa Noturna\">Casa Noturna</option>\n                        </TextField>\n                        <TextField\n                            label=\"Telefone\"\n                            value={phone}\n                            size=\"small\"\n                            variant=\"outlined\"\n                            style={{ width: 350, marginTop: 15 }}\n                            InputProps={{\n                                inputComponent: PhoneMaskCustom,\n                            }}\n\n                        />\n                        <TextField\n                            label=\"CEP\"\n                            size=\"small\"\n                            variant=\"outlined\"\n                            onChange={(e) => setCep(e.target.value)}\n                            value={cep}\n                            style={{ width: 350, marginTop: 15 }}\n                            inputProps={{ maxLength: 8 }}\n                        />\n                        <div className=\"form-bussiness-adress\">\n                            <div>\n                                <TextField\n                                    label=\"Rua\"\n                                    size=\"small\"\n                                    variant=\"outlined\"\n                                    onChange={(e) => setStreet(e.target.value)}\n                                    value={street}\n                                    style={{ width: 277, marginTop: 15, marginRight: 3 }}\n                                />\n                            </div>\n                            <div>\n                                <TextField\n                                    label=\"Nº\"\n                                    size=\"small\"\n                                    variant=\"outlined\"\n                                    onChange={(e) => setNumber(e.target.value)}\n                                    value={number}\n                                    style={{ width: 70, marginTop: 15 }}\n                                />\n                            </div>\n                        </div>\n                        <div className=\"form-bussiness-adress\">\n                            <div>\n                                <TextField\n                                    label=\"Bairro\"\n                                    size=\"small\"\n                                    variant=\"outlined\"\n                                    onChange={(e) => setBairro(e.target.value)}\n                                    value={bairro}\n                                    style={{ width: 137, marginTop: 15, marginRight: 3 }}\n                                />\n                            </div>\n                            <div>\n                                <TextField\n                                    label=\"Cidade\"\n                                    size=\"small\"\n                                    variant=\"outlined\"\n                                    onChange={(e) => setCity(e.target.value)}\n                                    value={city}\n                                    style={{ width: 137, marginTop: 15, marginRight: 3, marginBottom: 15 }}\n                                />\n                            </div>\n                            <div>\n                                <TextField\n                                    label=\"UF\"\n                                    size=\"small\"\n                                    variant=\"outlined\"\n                                    onChange={(e) => setState(e.target.value)}\n                                    value={state}\n                                    style={{ width: 70, marginTop: 15 }}\n                                />\n                            </div>\n                        </div>\n                        <UploadImage imageUrl uploadedFiles={uploadedFiles} setUploadedFiles={setUploadedFiles} />\n                        <CustomButton name=\"Salvar\" id=\"editStore-create-button\" onClick={handleUpdateStore} />\n\n                    </div>\n                </form>\n            </div>\n        </div>\n    )\n}\n\n\nconst mapDispatchToProps = (dispatch) => ({\n    dispatchResetImage: () => dispatch(resetImage()),\n    dispatchGetStore: (storeId) => dispatch(getStore(storeId)),\n    dispatchUpdateStore: (name, phone, category, address, image, storeId, onSuccess, onError) =>\n        dispatch(updateStore({ name, phone, category, address, image }, storeId, onSuccess, onError)),\n});\n\nconst mapStateToProps = (state) => ({\n    user: state.user,\n    image: state.image,\n    store: state.store\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditStorePage);","/home/luiz/Repositories/staffnation_web/src/components/VerticalDrawer/index.js",[],"/home/luiz/Repositories/staffnation_web/src/pages/EditJobPage/index.js",["207","208"],"import React, { useState, useEffect, useMemo } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport CustomButton from '../../components/CustomButton'\nimport './styles.css'\n\nimport PropTypes from 'prop-types';\nimport MaskedInput from 'react-text-mask';\nimport NumberFormat from 'react-number-format';\nimport TextField from '@material-ui/core/TextField';\n\nimport { getAllStores } from '../../redux/actions/StoreActions'\nimport { getJob, updateJob } from '../../redux/actions/JobActions'\n\nfunction PhoneMaskCustom(props) {\n    const { inputRef, ...other } = props;\n\n    return (\n        <MaskedInput\n            {...other}\n            ref={(ref) => {\n                inputRef(ref ? ref.inputElement : null);\n            }}\n            mask={['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\n            placeholderChar={'\\u2000'}\n        />\n    );\n}\n\nPhoneMaskCustom.propTypes = {\n    inputRef: PropTypes.func.isRequired,\n};\n\n\nfunction DateMaskCustom(props) {\n    const { inputRef, ...other } = props;\n\n    return (\n        <MaskedInput\n            {...other}\n            ref={(ref) => {\n                inputRef(ref ? ref.inputElement : null);\n            }}\n            mask={[/[0-3]/, /[0-9]/, '/', /[0-1]/, /[1-9]/, '/', /[2]/, /[0]/, /[2]/, /[0-9]/]}\n            placeholderChar={'\\u2000'}\n            placeholder=\"dd/mm/aaaa\"\n\n        />\n    );\n}\n\nDateMaskCustom.propTypes = {\n    inputRef: PropTypes.func.isRequired,\n};\n\n\nfunction TimeMskCustom(props) {\n    const { inputRef, ...other } = props;\n\n    return (\n        <MaskedInput\n            {...other}\n            ref={(ref) => {\n                inputRef(ref ? ref.inputElement : null);\n            }}\n            mask={[/^([0-2])/, /([0-9])/, ':', /[0-5]/, /[0-9]/]}\n            placeholderChar={'\\u2000'}\n            placeholder=\"hh:mm\"\n\n        />\n    );\n}\n\nTimeMskCustom.propTypes = {\n    inputRef: PropTypes.func.isRequired,\n};\n\n\nfunction NumberFormatCustom(props) {\n    const { inputRef, onChange, ...other } = props;\n\n    return (\n        <NumberFormat\n            {...other}\n            getInputRef={inputRef}\n            onValueChange={(values) => {\n                onChange({\n                    target: {\n                        name: props.name,\n                        value: values.value,\n                    },\n                });\n            }}\n            decimalSeparator=\",\"\n            decimalScale={2}\n            fixedDecimalScale\n            isNumericString\n            placeholder=\"R$ 0,00\"\n            prefix=\"R$ \"\n        />\n    );\n}\n\nNumberFormatCustom.propTypes = {\n    inputRef: PropTypes.func.isRequired,\n    name: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    maxLength: 3\n};\n\n\nconst EditJobPage = ({ user, store, job, dispatchGetAllStores, dispatchGetJob, dispatchUpdateJob }) => {\n    const [selectedStore, setSelecteStore] = useState('')\n    const [avaliableStores, setAvaliableStores] = useState([])\n    const [category, setCategory] = useState('')\n    const [positions, setPositions] = useState('')\n    const [date, setDate] = useState('')\n    const [timeStart, setTimeStart] = useState('')\n    const [timeEnd, setTimeEnd] = useState('')\n    const time = {\n        start: timeStart,\n        end: timeEnd\n    }\n    const [payment, setPayment] = useState('')\n    const [description, setDescription] = useState('')\n    let history = useHistory();\n    const { jobId } = useParams()\n\n    const [values, setValues] = useState('');\n\n    const handleChange = (event) => {\n        setValues({\n            values,\n            [event.target.name]: event.target.value,\n        });\n        setPayment(event.target.value)\n    }\n\n    useEffect(() => {\n        dispatchGetJob(jobId)\n    }, [])\n\n    const editableData = job\n\n    useMemo(() => {\n        if (editableData[0]) {\n            setSelecteStore(editableData[0]?.store._id);\n            setCategory(editableData[0]?.category);\n            setPositions(editableData[0]?.positions);\n            setPayment(editableData[0]?.payment);\n            setDate(editableData[0]?.date)\n            setTimeStart(editableData[0]?.time.start)\n            setTimeEnd(editableData[0]?.time.end)\n            setDescription(editableData[0]?.description)\n        }\n    }, [editableData]);\n\n    useEffect(() => {\n        dispatchGetAllStores(user.businessId)\n        setAvaliableStores(store)\n    }, [])\n\n\n    const handleEditJob = (event) => {\n        event.preventDefault();\n        dispatchUpdateJob(\n            selectedStore,\n            category,\n            positions,\n            date,\n            time,\n            payment,\n            description,\n            jobId,\n            history.push(\"/list-jobs\"),\n            error => console.log(error),\n        )\n    }\n\n    return (\n        <div className=\"editJob\">\n            <div className=\"editJob-create\">\n                <form className=\"editJob-create-form\" onSubmit={handleEditJob}>\n                    <div className=\"editJob-create-form__container\">\n                        <h2 className=\"editJob-create-title\">Editar vaga de trabalho</h2>\n                        <TextField\n                            label=\"Estabelecimento\"\n                            select\n                            size=\"small\"\n                            variant=\"outlined\"\n                            SelectProps={{\n                                native: true,\n                            }}\n                            style={{ width: 350 }}\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            onChange={(e) => setSelecteStore(e.target.value)}\n                            value={selectedStore}\n                        >\n                            <option value=\"\" defaultValue hidden>{editableData[0]?.store.name}</option>\n                            {avaliableStores?.length\n                                ? store.map((item) => (\n                                    <React.Fragment key={item._id}>\n                                        <option value={item._id}>{item.name}</option>\n                                    </React.Fragment>\n                                ))\n                                : null\n                            }\n                        </TextField>\n                        <TextField\n                            label=\"Função\"\n                            select\n                            size=\"small\"\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            SelectProps={{\n                                native: true,\n                            }}\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            style={{ width: 350, marginTop: 15 }}\n                            onChange={(e) => setCategory(e.target.value)}\n                            value={category}\n                        >\n                            <option value=\"\" defaultValue hidden>{editableData[0]?.category}</option>\n                            <option value=\"Bar\">Bar</option>\n                            <option value=\"Cozinha\">Cozinha</option>\n                            <option value=\"Garçom\">Garçom</option>\n                            <option value=\"Segurança\">Segurança</option>\n                            <option value=\"Limpeza\">Limpeza</option>\n                            <option value=\"Hostess\">Hostess</option>\n                        </TextField>\n                        <TextField\n                            label=\"Vaga\"\n                            select\n                            size=\"small\"\n                            variant=\"outlined\"\n                            SelectProps={{\n                                native: true,\n                            }}\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            style={{ width: 350, marginTop: 15 }}\n                            onChange={(e) => setPositions(e.target.value)}\n                            value={positions}\n                        >\n                            <option value=\"\" defaultValue hidden>{editableData[0]?.positions}</option>\n                            <option value=\"1\">1</option>\n                            <option value=\"2\">2</option>\n                            <option value=\"3\">3</option>\n                            <option value=\"4\">4</option>\n                            <option value=\"5\">5</option>\n                        </TextField>\n                        <TextField\n                            label=\"Pagamento\"\n                            name=\"numberformat\"\n                            id=\"formatted-numberformat-input\"\n                            size=\"small\"\n                            variant=\"outlined\"\n                            style={{ width: 350, marginTop: 15 }}\n                            InputProps={{\n                                inputComponent: NumberFormatCustom,\n                            }}\n                            inputProps={{\n                                maxLength: 9\n                            }}\n                            onChange={handleChange}\n                            value={payment}\n                        />\n                        <TextField\n                            label=\"Data\"\n                            size=\"small\"\n                            variant=\"outlined\"\n                            style={{ width: 350, marginTop: 15 }}\n                            InputProps={{\n                                inputComponent: DateMaskCustom,\n                            }}\n                            onChange={(e) => setDate(e.target.value)}\n                            value={date}\n                        />\n                        <div className=\"form-bussiness-adress\">\n                            <div>\n                                <TextField\n                                    label=\"Início\"\n                                    size=\"small\"\n                                    variant=\"outlined\"\n                                    style={{ width: 173.5, marginTop: 15, marginRight: 3 }}\n                                    InputProps={{\n                                        inputComponent: TimeMskCustom,\n                                    }}\n                                    onChange={(e) => setTimeStart(e.target.value)}\n                                    value={timeStart}\n                                />\n                            </div>\n                            <div>\n                                <TextField\n                                    label=\"Término\"\n                                    size=\"small\"\n                                    variant=\"outlined\"\n                                    style={{ width: 173.5, marginTop: 15 }}\n                                    InputProps={{\n                                        inputComponent: TimeMskCustom,\n                                    }}\n                                    onChange={(e) => setTimeEnd(e.target.value)}\n                                    value={timeEnd}\n                                />\n                            </div>\n                        </div>\n                        <TextField\n                            id=\"outlined-textarea\"\n                            label=\"Observações\"\n                            size=\"small\"\n                            rowsMax={4}\n                            placeholder=\"Ex: utilizar sapato preto\"\n                            multiline\n                            variant=\"outlined\"\n                            style={{ width: 350, marginTop: 15 }}\n                            inputProps={{\n                                maxLength: 152\n                            }}\n                            onChange={(e) => setDescription(e.target.value)}\n                            value={description}\n                        />\n                        <CustomButton name=\"Cadastrar\" id=\"editJob-create-button\" onClick={handleEditJob} />\n                    </div>\n                </form>\n            </div>\n        </div>\n    )\n}\n\n\nconst mapDispatchToProps = (dispatch) => ({\n    dispatchGetAllStores: (businessAccount) => dispatch(getAllStores(businessAccount)),\n    dispatchGetJob: (storeId) => dispatch(getJob(storeId)),\n    dispatchUpdateJob: (store, category, positions, date, time, payment, description, jobId, onSuccess, onError) =>\n        dispatch(updateJob({ store, category, positions, date, time, payment, description }, jobId, onSuccess, onError))\n});\n\nconst mapStateToProps = (state) => ({\n    user: state.user,\n    store: state.store,\n    job: state.job\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditJobPage);","/home/luiz/Repositories/staffnation_web/src/pages/JobDetailsPage/index.js",["209","210"],"/home/luiz/Repositories/staffnation_web/src/components/StaffCardAccepted/index.js",[],"/home/luiz/Repositories/staffnation_web/src/components/StaffCardPending/index.js",[],"/home/luiz/Repositories/staffnation_web/src/pages/SeachStaffPage/index.js",["211"],"import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport SearchBar from '../../components/SearchBar'\nimport StaffCardSearch from '../../components/StaffCardSearch'\n\nimport { getAllStaffs } from '../../redux/actions/StaffActions'\n\nimport './styles.css'\n\nconst SearchStaffPage = ({ staff, dispatchGetAllStaffs }) => {\n    const [filtereddStaff, setFilteredStaff] = useState([])\n    const [search, setSearch] = useState('');\n\n    useEffect(() => dispatchGetAllStaffs, [])\n\n    useEffect(() => {\n        setFilteredStaff(staff);\n    }, [setFilteredStaff, staff]);\n\n    useEffect(() => {\n        setFilteredStaff(\n            staff.filter((staff) =>\n                staff.name.toLowerCase().includes(search.toLowerCase()),\n            )\n        );\n    }, [staff, search]);\n\n    return (\n        <div className=\"search-staff\">\n            <div className=\"search-staff-container\">\n                <SearchBar onChange={(e) => setSearch(e.target.value)} />\n                <div style={{ display: 'flex', justifyContent: 'space-between', flexWrap: 'wrap', marginTop: 15 }}>\n                    {filtereddStaff?.length >= 1\n                        ? filtereddStaff.map((item) => (\n                            <React.Fragment key={item._id}>\n                                <StaffCardSearch\n                                    image={item.avatar.url}\n                                    name={item.name}\n                                    rating={item.rating.toFixed(2)}\n                                    phone={item.phone}\n                                    neighborhood={item.address?.neighborhood}\n                                    city={item.address?.city}\n                                    categories={item.categories}\n                                />\n                            </React.Fragment>\n                        ))\n                        : null}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    dispatchGetAllStaffs: () => dispatch(getAllStaffs()),\n});\n\nconst mapStateToProps = (state) => ({\n    staff: state.staff\n})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchStaffPage)","/home/luiz/Repositories/staffnation_web/src/components/SearchBar/index.js",[],"/home/luiz/Repositories/staffnation_web/src/components/StaffCardSearch/index.js",[],"/home/luiz/Repositories/staffnation_web/src/redux/actions/StaffActions.js",[],"/home/luiz/Repositories/staffnation_web/src/redux/reducers/staff/StaffReducer.js",[],"/home/luiz/Repositories/staffnation_web/src/pages/SettingsPage/index.js",["212"],"import React, { useState, useEffect, useMemo } from 'react'\nimport { connect } from \"react-redux\";\nimport TextField from '@material-ui/core/TextField';\nimport MaskedInput from 'react-text-mask'\nimport PropTypes from 'prop-types';\nimport Divider from '@material-ui/core/Divider';\n\nimport CustomButton from '../../components/CustomButton'\nimport LightButton from '../../components/LightButton'\nimport { logoutUser } from \"../../redux/actions/AuthActions\";\nimport { getMe, updateBusiness } from '../../redux/actions/BusinessActions'\n\nimport './styles.css'\n\nfunction PhoneMaskCustom(props) {\n    const { inputRef, ...other } = props;\n\n    return (\n        <MaskedInput\n            {...other}\n            ref={(ref) => {\n                inputRef(ref ? ref.inputElement : null);\n            }}\n            mask={[\"(\", /[1-9]/, /\\d/, \")\", \" \", /\\d/, /\\d/, /\\d/, /\\d/, \"-\", /\\d/, /\\d/, /\\d/, /\\d/, /\\d/]}\n            placeholderChar={'\\u2000'}\n\n        />\n    );\n}\n\nPhoneMaskCustom.propTypes = {\n    inputRef: PropTypes.func.isRequired,\n};\n\nconst SettingsPage = ({ business, dispatchLogout, disptachGetMe, dispatchUpdateBusiness }) => {\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [phone, setPhone] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n\n    useEffect(() => disptachGetMe(), [])\n\n    const editableData = business\n\n    useMemo(() => {\n        if (editableData) {\n            setName(editableData?.data.name);\n            setEmail(editableData?.data.email)\n            setPhone(editableData.data.phone)\n        }\n    }, [editableData]);\n\n    const handleLogOut = (event) => {\n        event.preventDefault();\n        dispatchLogout()\n    }\n\n    const handleUpdateBusiness = (event) => {\n        event.preventDefault();\n        dispatchUpdateBusiness(\n            name,\n            email,\n            phone,\n            business.data._id,\n            () => disptachGetMe(),\n            (error) => console.log(error)\n        )\n    }\n\n    return (\n        <div className=\"settings\">\n            <div className=\"settings-form\">\n                <div >\n                    <form onSubmit={handleUpdateBusiness}>\n                        <p className=\"settings-form-title\">Dados da Conta</p>\n                        <TextField\n                            label=\"Nome\"\n                            size=\"small\"\n                            variant=\"outlined\"\n                            style={{ width: 350 }}\n                            value={name}\n                            onChange={(e) => setName(e.target.value)}\n                        />\n                        <TextField\n                            label=\"Email\"\n                            size=\"small\"\n                            variant=\"outlined\"\n                            style={{ width: 350, marginTop: 15 }}\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)}\n                        />\n                        <TextField\n                            label=\"Telefone\"\n                            size=\"small\"\n                            variant=\"outlined\"\n                            style={{ width: 350, marginTop: 15 }}\n                            InputProps={{\n                                inputComponent: PhoneMaskCustom,\n                            }}\n                            value={phone}\n                            onChange={(e) => setPhone(e.target.value)}\n                        />\n                        <LightButton name=\"Salvar Alteração\" id=\"settings-button-light\" onClick={handleUpdateBusiness} />\n                    </form>\n                    <Divider style={{ width: 350, marginBottom: 25, marginTop: 25 }} />\n                    <form onSubmit={() => { }}>\n                        <p className=\"settings-form-title\">Alterar Senha</p>\n                        <TextField\n                            label=\"Nova senha \"\n                            size=\"small\"\n                            variant=\"outlined\"\n                            style={{ width: 350 }}\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}\n                        />\n                        <TextField\n                            label=\"Confirmar senha\"\n                            size=\"small\"\n                            variant=\"outlined\"\n                            style={{ width: 350, marginTop: 15 }}\n                            value={confirmPassword}\n                            onChange={(e) => setConfirmPassword(e.target.value)}\n                        />\n                        <LightButton name=\"Salvar Alteração\" id=\"settings-button-light\" onClick={() => { }} />\n                    </form>\n                    <Divider style={{ width: 350, marginBottom: 25, marginTop: 25 }} />\n                    <form onSubmit={handleLogOut}>\n                        <CustomButton name=\"Sair\" id=\"settings-button\" onClick={handleLogOut} />\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    business: state.business\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    dispatchLogout: () => dispatch(logoutUser()),\n    disptachGetMe: () => dispatch(getMe()),\n    dispatchUpdateBusiness: (name, email, phone, businessId, onSuccess, onError) =>\n        dispatch(updateBusiness({ name, email, phone }, businessId, onSuccess, onError)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingsPage);","/home/luiz/Repositories/staffnation_web/src/pages/FinancePage/index.js",[],"/home/luiz/Repositories/staffnation_web/src/components/LightButton/index.js",[],"/home/luiz/Repositories/staffnation_web/src/redux/reducers/business/BusinessReducer.js",[],"/home/luiz/Repositories/staffnation_web/src/redux/actions/BusinessActions.js",[],{"ruleId":"213","replacedBy":"214"},{"ruleId":"215","replacedBy":"216"},{"ruleId":"217","severity":1,"message":"218","line":1,"column":10,"nodeType":"219","messageId":"220","endLine":1,"endColumn":14},{"ruleId":"217","severity":1,"message":"221","line":4,"column":10,"nodeType":"219","messageId":"220","endLine":4,"endColumn":14},{"ruleId":"217","severity":1,"message":"222","line":5,"column":10,"nodeType":"219","messageId":"220","endLine":5,"endColumn":20},{"ruleId":"213","replacedBy":"223"},{"ruleId":"215","replacedBy":"224"},{"ruleId":"225","severity":1,"message":"226","line":61,"column":8,"nodeType":"227","endLine":61,"endColumn":10,"suggestions":"228"},{"ruleId":"225","severity":1,"message":"229","line":93,"column":8,"nodeType":"227","endLine":93,"endColumn":13,"suggestions":"230"},{"ruleId":"225","severity":1,"message":"231","line":99,"column":8,"nodeType":"227","endLine":99,"endColumn":16,"suggestions":"232"},{"ruleId":"213","replacedBy":"233"},{"ruleId":"215","replacedBy":"234"},{"ruleId":"225","severity":1,"message":"235","line":81,"column":8,"nodeType":"227","endLine":81,"endColumn":21,"suggestions":"236"},{"ruleId":"213","replacedBy":"237"},{"ruleId":"215","replacedBy":"238"},{"ruleId":"225","severity":1,"message":"239","line":136,"column":8,"nodeType":"227","endLine":136,"endColumn":10,"suggestions":"240"},{"ruleId":"217","severity":1,"message":"241","line":14,"column":12,"nodeType":"219","messageId":"220","endLine":14,"endColumn":21},{"ruleId":"225","severity":1,"message":"242","line":22,"column":8,"nodeType":"227","endLine":22,"endColumn":10,"suggestions":"243"},{"ruleId":"225","severity":1,"message":"244","line":56,"column":48,"nodeType":"227","endLine":56,"endColumn":58,"suggestions":"245"},{"ruleId":"217","severity":1,"message":"246","line":67,"column":17,"nodeType":"219","messageId":"220","endLine":67,"endColumn":30},{"ruleId":"225","severity":1,"message":"229","line":119,"column":8,"nodeType":"227","endLine":119,"endColumn":13,"suggestions":"247"},{"ruleId":"225","severity":1,"message":"231","line":125,"column":8,"nodeType":"227","endLine":125,"endColumn":16,"suggestions":"248"},{"ruleId":"225","severity":1,"message":"249","line":142,"column":8,"nodeType":"227","endLine":142,"endColumn":10,"suggestions":"250"},{"ruleId":"225","severity":1,"message":"239","line":162,"column":8,"nodeType":"227","endLine":162,"endColumn":10,"suggestions":"251"},{"ruleId":"217","severity":1,"message":"252","line":22,"column":12,"nodeType":"219","messageId":"220","endLine":22,"endColumn":19},{"ruleId":"225","severity":1,"message":"249","line":27,"column":8,"nodeType":"227","endLine":27,"endColumn":10,"suggestions":"253"},{"ruleId":"225","severity":1,"message":"254","line":15,"column":43,"nodeType":"227","endLine":15,"endColumn":45,"suggestions":"255"},{"ruleId":"225","severity":1,"message":"256","line":42,"column":38,"nodeType":"227","endLine":42,"endColumn":40,"suggestions":"257"},"no-native-reassign",["258"],"no-negated-in-lhs",["259"],"no-unused-vars","'Home' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'logoutUser' is defined but never used.",["258"],["259"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatchGetAllStores' and 'user.businessId'. Either include them or remove the dependency array. If 'dispatchGetAllStores' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["260"],"React Hook useEffect has a missing dependency: 'getUserAddress'. Either include it or remove the dependency array.",["261"],"React Hook useEffect has a missing dependency: 'address'. Either include it or remove the dependency array. You can also do a functional update 'setAddress(a => ...)' if you only need 'address' in the 'setAddress' call.",["262"],["258"],["259"],"React Hook useEffect has missing dependencies: 'handleRequest' and 'uploadedFiles.length'. Either include them or remove the dependency array.",["263"],["258"],["259"],"React Hook useEffect has missing dependencies: 'dispatchGetAllStores', 'store', and 'user.businessId'. Either include them or remove the dependency array. If 'dispatchGetAllStores' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["264"],"'closeJobs' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatchGetAllJobs' and 'user.businessId'. Either include them or remove the dependency array. If 'dispatchGetAllJobs' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["265"],"React Hook useEffect has a missing dependency: 'dispatchGetStore'. Either include it or remove the dependency array. If 'dispatchGetStore' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["266"],"'uploadedImage' is assigned a value but never used.",["267"],["268"],"React Hook useEffect has missing dependencies: 'dispatchGetJob' and 'jobId'. Either include them or remove the dependency array. If 'dispatchGetJob' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["269"],["270"],"'pending' is assigned a value but never used.",["271"],"React Hook useEffect has a missing dependency: 'dispatchGetAllStaffs'. Either include it or remove the dependency array.",["272"],"React Hook useEffect has a missing dependency: 'disptachGetMe'. Either include it or remove the dependency array. If 'disptachGetMe' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["273"],"no-global-assign","no-unsafe-negation",{"desc":"274","fix":"275"},{"desc":"276","fix":"277"},{"desc":"278","fix":"279"},{"desc":"280","fix":"281"},{"desc":"282","fix":"283"},{"desc":"284","fix":"285"},{"desc":"286","fix":"287"},{"desc":"276","fix":"288"},{"desc":"278","fix":"289"},{"desc":"290","fix":"291"},{"desc":"282","fix":"292"},{"desc":"290","fix":"293"},{"desc":"294","fix":"295"},{"desc":"296","fix":"297"},"Update the dependencies array to be: [dispatchGetAllStores, user.businessId]",{"range":"298","text":"299"},"Update the dependencies array to be: [cep, getUserAddress]",{"range":"300","text":"301"},"Update the dependencies array to be: [address, number]",{"range":"302","text":"303"},"Update the dependencies array to be: [droppedFile, handleRequest, uploadedFiles.length]",{"range":"304","text":"305"},"Update the dependencies array to be: [dispatchGetAllStores, store, user.businessId]",{"range":"306","text":"307"},"Update the dependencies array to be: [dispatchGetAllJobs, user.businessId]",{"range":"308","text":"309"},"Update the dependencies array to be: [dispatchGetStore, storeId]",{"range":"310","text":"311"},{"range":"312","text":"301"},{"range":"313","text":"303"},"Update the dependencies array to be: [dispatchGetJob, jobId]",{"range":"314","text":"315"},{"range":"316","text":"307"},{"range":"317","text":"315"},"Update the dependencies array to be: [dispatchGetAllStaffs]",{"range":"318","text":"319"},"Update the dependencies array to be: [disptachGetMe]",{"range":"320","text":"321"},[1883,1885],"[dispatchGetAllStores, user.businessId]",[2900,2905],"[cep, getUserAddress]",[3033,3041],"[address, number]",[2446,2459],"[droppedFile, handleRequest, uploadedFiles.length]",[3581,3583],"[dispatchGetAllStores, store, user.businessId]",[674,676],"[dispatchGetAllJobs, user.businessId]",[1935,1945],"[dispatchGetStore, storeId]",[3845,3850],[3978,3986],[3829,3831],"[dispatchGetJob, jobId]",[4476,4478],[905,907],[505,507],"[dispatchGetAllStaffs]",[1406,1408],"[disptachGetMe]"]